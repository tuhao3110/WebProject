/**
 * ParamQuery Pro v3.3.4
 *
 * Copyright (c) 2012-2016 Paramvir Dhindsa (http://paramquery.com)
 * Released under Commercial license
 * http://paramquery.com/pro/license
 *
 */
(function (l) {
    var m = l.ui.autocomplete.prototype, h = m._renderMenu, c = m._renderItem;
    m._renderMenu = function (a, b) {
        h.call(this, a, b);
        var d = this.options.selectItem;
        if (d && d.on) {
            var d = d.cls, d = void 0 === d ? "ui-state-highlight" : d, n = this.element.val();
            n && d && l("a", a).filter(function () {
                return l(this).text() === n
            }).addClass(d)
        }
    };
    m._renderItem = function (a, b) {
        var d = c.call(this, a, b), n = this.options.highlightText;
        if (n && n.on) {
            var k = this.element.val();
            if (k) {
                var k = new RegExp("(" + k + ")", "i"), e = b.label;
                if (k.test(e)) {
                    var g = n.style,
                        n = n.cls, e = e.replace(k, "<span style='" + (void 0 === g ? "font-weight:bold;" : g) + "' class='" + (void 0 === n ? "" : n) + "'>$1</span>");
                    d.find("a").html(e)
                }
            }
        }
        return d
    };
    var m = l.paramquery = l.paramquery || {}, a = function (a, b, d, n) {
        b = b.slice();
        for (var k = [], e = 0, g = b.length; e < g; e++) {
            var t = b[e], B = t.cb, z = t.one;
            if (z) {
                if (t._oncerun)continue;
                t._oncerun = !0
            }
            !1 === B.call(a, d, n) && (d.preventDefault(), d.stopPropagation());
            z && k.push(e);
            if (d.isImmediatePropagationStopped())break
        }
        if (k.length)for (e = k.length - 1; 0 <= e; e--)b.splice(k[e], 1)
    };
    m._trigger =
        function (f, b, d) {
            var n, k, e = this.listeners, g = e[f], t = this.options, B = t.allEvents, z = t.bubble, c = this.element, p = t[f];
            d = d || {};
            b = l.Event(b);
            b.type = this.widgetName + ":" + f;
            b.target = c[0];
            if (k = b.originalEvent)for (n in k)n in b || (b[n] = k[n]);
            B && "function" == typeof B && B.call(this, b, d);
            if (g && g.length && (a(this, g, b, d), b.isImmediatePropagationStopped()) || t.trigger && (c[z ? "trigger" : "triggerHandler"](b, d), b.isImmediatePropagationStopped()))return !b.isDefaultPrevented();
            p && !1 === p.call(this, b, d) && (b.preventDefault(), b.stopPropagation());
            (g = e[f + "Done"]) && g.length && a(this, g, b, d);
            return !b.isDefaultPrevented()
        };
    m.on = function () {
        var a = arguments;
        if ("boolean" == typeof a[0])var b = a[0], d = a[1], n = a[2], a = a[3]; else d = a[0], n = a[1], a = a[2];
        for (var d = d.split(" "), k = 0; k < d.length; k++) {
            var e = d[k];
            if (e) {
                var g = n, t = a, B = b, z = this.listeners[e];
                z || (z = this.listeners[e] = []);
                z[B ? "unshift" : "push"]({cb: g, one: t})
            }
        }
        return this
    };
    m.one = function () {
        for (var a = arguments.length, b = [], d = 0; d < a; d++)b[d] = arguments[d];
        b[a] = !0;
        return this.on.apply(this, b)
    };
    m.off = function (a, b) {
        for (var d =
            a.split(" "), n = 0; n < d.length; n++) {
            var k = d[n];
            if (k) {
                var e = k;
                if (k = b) {
                    if (e = this.listeners[e]) {
                        for (var g = [], t = 0, B = e.length; t < B; t++)k == e[t].cb && g.push(t);
                        if (g.length)for (t = g.length - 1; 0 <= t; t--)e.splice(g[t], 1)
                    }
                } else delete this.listeners[e]
            }
        }
        return this
    };
    l.widget("paramquery.pqTooltip", l.ui.tooltip, {
        options: {
            items: "td.pq-has-tooltip,td[title]",
            position: {my: "center top", at: "center bottom"},
            content: function () {
                var a = l(this), b = a.closest(".pq-grid").pqGrid("getInstance").grid, d = b.getCellIndices({$td: a});
                return (b =
                    b.data({
                        rowIndx: d.rowIndx,
                        dataIndx: d.dataIndx,
                        data: "pq_valid"
                    }).data) ? (a = b.icon, b = b.msg, ("" == a ? "" : "<span class='ui-icon " + a + " pq-tooltip-icon'></span>") + (null != b ? b : "")) : a.attr("title")
            }
        }, _create: function () {
            this._super();
            var a = this.element, b = this.eventNamespace;
            a.on("pqtooltipopen" + b, function (b, a) {
                var k = l(b.target), e = l(b.originalEvent.target);
                e.on("remove", function (e) {
                    k.pqTooltip("close", e, !0)
                });
                if (k.is(".pq-grid")) {
                    var g = k.pqGrid("getCellIndices", {$td: e}), t = g.dataIndx, B;
                    (B = k.pqGrid("getRowData", {rowIndx: g.rowIndx})) &&
                    (B = B.pq_celldata) && (B = B[t]) && (B = B.pq_valid) && (t = B, g = t.style, a.tooltip.addClass(t.cls), t = a.tooltip.attr("style"), a.tooltip.attr("style", t + ";" + g));
                    k.find("div.pq-sb-horiz,div.pq-sb-vert").on("pqscrollbardrag", function (g, t) {
                        g.currentTarget = e[0];
                        k.pqTooltip("close", g, !0)
                    })
                }
            });
            a.on("pqtooltipclose" + b, function (b, a) {
                var k = l(b.target);
                l(b.originalEvent.target).off("remove");
                k.is(".pq-grid") && k.find("div.pq-sb-horiz,div.pq-sb-vert").off("pqscrollbardrag")
            })
        }
    })
})(jQuery);
(function (l) {
    var m = window.pq = m || {}, h = l.paramquery;
    m.arrayUnique = function (b, d) {
        var a = [], k, e = b.length, g, t = {}, B;
        for (k = 0; k < e; k++)g = b[k], B = d ? g[d] : g, t.hasOwnProperty(B) || (t[B] = 1, a.push(g));
        return a
    };
    h.select = function (b) {
        var d = b.options, a = b.groupIndx, k = b.labelIndx, e = b.valueIndx, g = null != k && null != e, t = null != a, B = b.prepend, f = b.dataMap, c, p, v;
        b = ["<select ", b.attr, " >"];
        if (B)for (var h in B)b.push('<option value="', h, '">', B[h], "</option>");
        if (d && d.length) {
            for (var B = 0, l = d.length; B < l; B++) {
                var s = d[B];
                if (g) {
                    var w = s[e],
                        x = s.pq_disabled ? 'disabled="disabled" ' : "", y = s.pq_selected ? 'selected="selected" ' : "";
                    if (null != w) {
                        if (f) {
                            c = {};
                            for (v = 0; v < f.length; v++) {
                                var m = f[v];
                                c[m] = s[m]
                            }
                            c = "data-map='" + JSON.stringify(c) + "'"
                        } else c = "";
                        v = c;
                        t && (m = s.pq_disabled_group ? 'disabled="disabled" ' : "", c = s[a], p != c && (null != p && b.push("</optgroup>"), b.push('<optgroup label="', c, '" ', m, " >"), p = c));
                        k == e ? b.push("<option ", y, x, v, ">", w, "</option>") : b.push("<option ", y, x, v, ' value="', w, '">', s[k], "</option>")
                    }
                } else if ("object" == typeof s)for (h in s)b.push('<option value="',
                    h, '">', s[h], "</option>"); else b.push("<option>", s, "</option>")
            }
            t && b.push("</optgroup>")
        }
        b.push("</select>");
        return b.join("")
    };
    l.fn.pqval = function (b) {
        if (b) {
            if (b.incr)return b = this.data("pq_value"), this.prop("indeterminate", !1), b ? (b = !1, this.prop("checked", !1)) : !1 === b ? (b = null, this.prop("indeterminate", !0), this.prop("checked", !1)) : (b = !0, this.prop("checked", !0)), this.data("pq_value", b), b;
            b = b.val;
            this.data("pq_value", b);
            this.prop("indeterminate", !1);
            null == b ? (this.prop("indeterminate", !0), this.prop("checked",
                !1)) : b ? this.prop("checked", !0) : this.prop("checked", !1);
            return this
        }
        return this.data("pq_value")
    };
    h.xmlToArray = function (b, d) {
        var a = d.itemParent, k = d.itemNames, e = [];
        l(b).find(a).each(function (g, t) {
            var b = l(t), d = [];
            l(k).each(function (e, g) {
                d.push(b.find(g).text().replace(/\r|\n|\t/g, ""))
            });
            e.push(d)
        });
        return e
    };
    h.xmlToJson = function (b, d) {
        var a = d.itemParent, k = d.itemNames, e = [];
        l(b).find(a).each(function (g, t) {
            for (var b = l(t), d = {}, a = 0, f = k.length; a < f; a++) {
                var n = k[a];
                d[n] = b.find(n).text().replace(/\r|\n|\t/g, "")
            }
            e.push(d)
        });
        return e
    };
    h.tableToArray = function (b) {
        var d = [], a = [];
        b = l(b).children("tbody").children("tr");
        var k = b.length ? l(b[0]) : l(), e = 1 < b.length ? l(b[1]) : l();
        k.children("th,td").each(function (g, t) {
            var b = l(t), a = b.html(), b = b.width(), k = "left";
            if (e.length)var f = e.find("td:eq(" + g + ")").attr("align"), k = f ? f : k;
            d.push({title: a, width: b, dataType: "string", align: k, dataIndx: g})
        });
        b.each(function (e, t) {
            if (0 != e) {
                var b = [];
                l(t).children("td").each(function (e, g) {
                    b.push(l.trim(l(g).html()))
                });
                a.push(b)
            }
        });
        return {data: a, colModel: d}
    };
    var c = {};
    h.formatCurrency = function (b, d) {
        var a = parseFloat(b);
        if (!isNaN(a)) {
            var k = 0 > a, e;
            a:{
                var g = d, t, B;
                if (g) {
                    g = g.split(":");
                    g = k && 1 < g.length ? g[1] : g[0];
                    if (t = c[g]) {
                        e = t;
                        break a
                    }
                    B = /^([^#]*|&#[^#]*)?[\,\.#0]*?([\,\s\.]?)([#0]*)([\,\s\.]?)([0]*?)(\s*[^#^0]*|&#[^#]*)?$/;
                    (B = g.match(B)) && B.length && (t = {
                        symbol: B[1] || "",
                        thouSep: B[2],
                        thousand: B[3].length,
                        decSep: B[4],
                        decimal: B[5].length,
                        symbolEnd: B[6] || ""
                    }, c[g] = t)
                }
                e = t = t || {symbol: "", symbolEnd: "", thouSep: ",", thousand: 3, decSep: ".", decimal: 2}
            }
            g = e.symbol;
            t = e.symbolEnd;
            B = e.thousand;
            var f = e.thouSep, r = e.decSep, p = e.decimal, a = a.toFixed(p);
            e = a.length;
            var v = p + r.length, p = a.substring(0, e - v), a = a.substring(e - v + r.length, e);
            e = p.match(/\d/g).reverse();
            p = [];
            for (v = 0; v < e.length; v++)0 < v && 0 == v % B && p.push(f), p.push(e[v]);
            p = p.reverse();
            p = p.join("");
            return (k ? "-" : "") + g + p + r + a + t
        }
    };
    m.formatNumber = h.formatCurrency;
    m.validation = {
        is: function (b, d) {
            if ("string" == b || !b)return !0;
            b = b.substring(0, 1).toUpperCase() + b.substring(1, b.length);
            return this["is" + b](d)
        }, isFloat: function (b) {
            var d = parseFloat(b);
            return isNaN(d) || d != b ? !1 : !0
        }, isInteger: function (b) {
            var d = parseInt(b);
            return isNaN(d) || d != b ? !1 : !0
        }, isDate: function (b) {
            b = Date.parse(b);
            return isNaN(b) ? !1 : !0
        }
    };
    var a = [], f = h.toLetter = function (b) {
        var d = a[b];
        if (!d) {
            b++;
            var n = b % 26, d = b / 26 | 0, n = n ? String.fromCharCode(64 + n) : (--d, "Z"), d = d ? f(d - 1) + n : n;
            b--;
            a[b] = d
        }
        return d
    };
    h.generateData = function (b, d) {
        for (var a = [], k = 0; k < d; k++)a[k] = f(k);
        for (var e = [], k = 0; k < b; k++)for (var g = e[k] = [], t = 0; t < d; t++)g[t] = a[t] + (k + 1);
        return e
    }
})(jQuery);
(function (l) {
    function m(b, d, a) {
        return b ? l("<span tabindex='0' rel='tooltip' data-placement='top' title='" + d + "' class='btn btn-xs " + a + "'></span>") : l("<span class='pq-ui-button ui-widget-header' tabindex='0' rel='tooltip' title='" + d + "'><span class='ui-icon ui-icon-" + a + "'></span></span>")
    }

    function h(b, d) {
        b.bind("click keydown", function (b) {
            if ("keydown" != b.type || b.keyCode == l.ui.keyCode.ENTER)return d.call(this, b)
        })
    }

    function c(b, d, a) {
        d[a ? "addClass" : "removeClass"]("disabled").css("pointer-events", a ? "none" :
            "").attr("tabindex", a ? "" : "0")
    }

    var a = {
        options: {
            bootstrap: {
                on: !1,
                pager: "",
                nextIcon: "glyphicon glyphicon-forward",
                prevIcon: "glyphicon glyphicon-backward",
                firstIcon: "glyphicon glyphicon-step-backward",
                lastIcon: "glyphicon glyphicon-step-forward",
                refreshIcon: "glyphicon glyphicon-refresh"
            }, curPage: 0, totalPages: 0, totalRecords: 0, msg: "", rPPOptions: [10, 20, 30, 40, 50, 100], rPP: 20
        }, _regional: {
            strDisplay: "Displaying {0} to {1} of {2} items.",
            strFirstPage: "First Page",
            strLastPage: "Last Page",
            strNextPage: "Next Page",
            strPage: "Page {0} of {1}",
            strPrevPage: "Previous Page",
            strRefresh: "Refresh",
            strRpp: "Records per page:{0}"
        }
    };
    l.extend(a.options, a._regional);
    a._create = function () {
        var b = this, d = this.options, a = this.element, k = d.bootstrap, e = k.on;
        this.listeners = {};
        a.addClass("pq-pager " + (e ? k.pager : ""));
        this.first = m(e, d.strFirstPage, e ? k.firstIcon : "seek-first").appendTo(a);
        h(this.first, function (e) {
            1 < d.curPage && b._onChange(e, 1)
        });
        this.prev = m(e, d.strPrevPage, e ? k.prevIcon : "seek-prev").appendTo(a);
        h(this.prev, function (e) {
            1 < d.curPage &&
            b._onChange(e, d.curPage - 1)
        });
        l("<span class='pq-separator'></span>").appendTo(a);
        this.pageHolder = l("<span class='pq-page-placeholder'></span>").appendTo(a);
        l("<span class='pq-separator'></span>").appendTo(a);
        this.next = m(e, d.strNextPage, e ? k.nextIcon : "seek-next").appendTo(a);
        h(this.next, function (e) {
            d.curPage < d.totalPages && b._onChange(e, d.curPage + 1)
        });
        this.last = m(e, d.strLastPage, e ? k.lastIcon : "seek-end").appendTo(a);
        h(this.last, function (e) {
            d.curPage !== d.totalPages && b._onChange(e, d.totalPages)
        });
        l("<span class='pq-separator'></span>").appendTo(a);
        this.rPPHolder = l("<span class='pq-page-placeholder'></span>").appendTo(a);
        this.$refresh = m(e, d.strRefresh, e ? k.refreshIcon : "refresh").appendTo(a);
        h(this.$refresh, function (e) {
            if (!1 === b._trigger("beforeRefresh", e))return !1;
            b._trigger("refresh", e)
        });
        l("<span class='pq-separator'></span>").appendTo(a);
        this.$msg = l("<span class='pq-pager-msg'></span>").appendTo(a);
        this._refresh()
    };
    a._destroy = function () {
        this.element.empty().removeClass("pq-pager").enableSelection()
    };
    a._setOption = function (b, a) {
        if ("curPage" ==
            b || "totalPages" == b)a *= 1;
        this._super(b, a)
    };
    a._setOptions = function (b) {
        var a, f = !1, k = this.options;
        for (a in b) {
            var e = b[a], g = typeof e;
            "string" == g || "number" == g ? e != k[a] && (this._setOption(a, e), f = !0) : "function" == typeof e.splice || l.isPlainObject(e) ? JSON.stringify(e) != JSON.stringify(k[a]) && (this._setOption(a, e), f = !0) : e != k[a] && (this._setOption(a, e), f = !0)
        }
        f && this._refresh();
        return this
    };
    l.widget("paramquery.pqPager", a);
    pq.pager = function (b, a) {
        var f = l(b).pqPager(a);
        return f.data("paramqueryPqPager") || f.data("paramquery-pqPager")
    };
    var f = l.paramquery;
    f.pqPager.regional = {};
    f.pqPager.regional.en = a._regional;
    a = f.pqPager.prototype;
    f.pqPager.defaults = a.options;
    a._refreshPage = function () {
        var b = this;
        this.pageHolder.empty();
        for (var a = this.options, f = a.bootstrap, k = a.strPage.split(" "), e = [], g = 0, t = k.length; g < t; g++) {
            var B = k[g];
            "{0}" == B ? e.push("<input type='text' tabindex='0' class='pq-pager-input ", f.on ? "" : "ui-corner-all", "' />") : "{1}" == B ? e.push("<span class='total'></span>") : e.push("<span>", B, "</span>")
        }
        f = e.join("");
        f = l(f).appendTo(this.pageHolder);
        this.page = f.filter("input").bind("change", function (e) {
            var g = l(this), t = g.val();
            if (isNaN(t) || 1 > t)return g.val(a.curPage), !1;
            t = parseInt(t);
            if (t > a.totalPages || !1 === b._onChange(e, t))return g.val(a.curPage), !1
        });
        this.$total = f.filter("span.total")
    };
    a._onChange = function (b, a) {
        if (!1 === this._trigger("beforeChange", b, {curPage: a}) || !1 === this._trigger("change", b, {curPage: a}))return !1;
        this.option({curPage: a})
    };
    a._refresh = function () {
        this._refreshPage();
        var b = this, a = this.options, f = a.bootstrap;
        this.rPPHolder.empty();
        if (a.strRpp) {
            var k = a.rPPOptions, e = a.strRpp;
            if (-1 != e.indexOf("{0}")) {
                for (var f = ["<select class='", f.on ? "" : "ui-corner-all", "'>"], g = 0, t = k.length; g < t; g++) {
                    var B = k[g];
                    f.push('<option value="', B, '">', B, "</option>")
                }
                f.push("</select>");
                k = f.join("");
                e = e.replace("{0}", "</span>" + k);
                e = "<span>" + e + "<span class='pq-separator'></span>"
            } else e = "<span>" + e + "</span><span class='pq-separator'></span>";
            this.$rPP = l(e).appendTo(this.rPPHolder).filter("select").val(a.rPP).change(function (e) {
                var g = l(this), t = g.val();
                if (!1 ===
                    b._trigger("beforeChange", e, {rPP: t}))return g.val(b.options.rPP), !1;
                !1 !== b._trigger("change", e, {rPP: t}) && (b.options.rPP = t)
            })
        }
        e = a.bootstrap.on;
        k = a.curPage >= a.totalPages;
        c(e, this.next, k);
        c(e, this.last, k);
        k = 1 >= a.curPage;
        c(e, this.first, k);
        c(e, this.prev, k);
        this.page.val(a.curPage);
        this.$total.text(a.totalPages);
        0 < this.options.totalRecords ? (e = a.rPP, k = a.curPage, f = a.totalRecords, g = k * e, g > f && (g = f), a = a.strDisplay, a = a.replace("{0}", (k - 1) * e + 1), a = a.replace("{1}", g), a = a.replace("{2}", f), this.$msg.html(a)) : this.$msg.html("")
    };
    a.getInstance = function () {
        return {pager: this}
    };
    a._trigger = f._trigger;
    a.on = f.on;
    a.one = f.one;
    a.off = f.off
})(jQuery);
(function (l) {
    function m(a, b) {
        return a ? "<div class='" + b + "'></div>" : "<div class='ui-icon ui-icon-" + b + "'></div>"
    }

    var h = l.paramquery, c = {
        options: {
            length: 200,
            num_eles: 3,
            trigger: !1,
            cur_pos: 0,
            ratio: 0,
            timeout: 350,
            pace: "optimum",
            direction: "vertical",
            bootstrap: {
                on: !1,
                slider: "btn btn-default",
                up: "glyphicon glyphicon-chevron-up",
                down: "glyphicon glyphicon-chevron-down",
                left: "glyphicon glyphicon-chevron-left",
                right: "glyphicon glyphicon-chevron-right"
            },
            theme: !1
        }, _destroy: function () {
            l(document).off("." + this.eventNamespace);
            this.element.removeClass("pq-sb pq-sb-vert pq-sb-vert-t pq-sb-vert-wt").enableSelection().removeClass("pq-sb-horiz pq-sb-horiz-t pq-sb-horiz-wt").unbind("click.pq-scrollbar").empty();
            this.element.removeData()
        }, _create: function () {
            this.listeners = {};
            this._createLayout()
        }, _setOption: function (a, b) {
            var d = this.options;
            "disabled" == a ? (this._super(a, b), !0 == b ? this.$slider.draggable("disable") : this.$slider.draggable("enable")) : "theme" == a ? (d[a] = b, this._createLayout()) : "ratio" == a ? 0 <= b && 1 >= b && (d[a] = b) : d[a] = b
        }, _setOptions: function () {
            this._super.apply(this,
                arguments);
            this.refresh()
        }
    };
    l.widget("paramquery.pqScrollBar", c);
    pq.scrollbar = function (a, b) {
        var d = l(a).pqScrollBar(b);
        return d.data("paramqueryPqScrollBar") || d.data("paramquery-pqScrollBar")
    };
    c = h.pqScrollBar.prototype;
    h.pqScrollBar.defaults = c.options;
    c._createLayout = function () {
        var a = this, b = this.options, d = b.bootstrap, n = d.on, k = b.direction, e = this.eventNamespace, g = b.theme, t = this.element.empty();
        "vertical" == k ? (t.removeClass("pq-sb-vert-t pq-sb-vert-wt").addClass("pq-sb pq-sb-vert"), g ? (t.addClass("pq-sb-vert-t"),
            t[0].innerHTML = ["<div class='top-btn pq-sb-btn ", n ? "" : "ui-state-default ui-corner-top", "'>", m(n, n ? d.up : "triangle-1-n"), "</div><div class='pq-sb-slider ", n ? d.slider : "ui-corner-all ui-state-default", "'></div><div class='bottom-btn pq-sb-btn ", n ? "" : "ui-state-default ui-corner-bottom", "'>", m(n, n ? d.down : "triangle-1-s"), "</div>"].join("")) : (t.addClass("pq-sb-vert-wt"), t[0].innerHTML = "<div class='top-btn pq-sb-btn'></div><div class='pq-sb-slider'><div class='vert-slider-top'></div><div class='vert-slider-bg'></div><div class='vert-slider-center'></div><div class='vert-slider-bg'></div><div class='vert-slider-bottom'></div></div><div class='bottom-btn pq-sb-btn'></div>")) :
            (t.removeClass("pq-sb-horiz-t pq-sb-horiz-wt").addClass("pq-sb pq-sb-horiz"), g ? (t.addClass("pq-sb-horiz-t"), t[0].innerHTML = ["<div class='left-btn pq-sb-btn ", n ? "" : "ui-state-default ui-corner-left", "'>", m(n, n ? d.left : "triangle-1-w"), "</div><div class='pq-sb-slider pq-sb-slider-h ", n ? d.slider : "ui-state-default ui-corner-all", "'></div><div class='right-btn pq-sb-btn ", n ? "" : "ui-state-default ui-corner-right", "'>", m(n, n ? d.right : "triangle-1-e"), "</div>"].join("")) : (t.addClass("pq-sb-horiz-wt"), t.width(this.width),
                t[0].innerHTML = "<div class='left-btn pq-sb-btn'></div><div class='pq-sb-slider pq-sb-slider-h'><span class='horiz-slider-left'></span><span class='horiz-slider-bg'></span><span class='horiz-slider-center'></span><span class='horiz-slider-bg'></span><span class='horiz-slider-right'></span></div><div class='right-btn pq-sb-btn'></div>"));
        t.disableSelection().unbind(".pq-scrollbar").on("mousedown.pq-scrollbar", function (g) {
            if (!b.disabled && !a.$slider.is(":hidden"))if (l(document).off("." + e).on("mouseup." +
                    e, function (e) {
                    a._mouseup(e)
                }), "vertical" == k) {
                var t = g.pageY, d = a.element.offset().top, n = d + b.length, c = a.$slider, h = c.offset().top, u = c.height(), c = h + u;
                t < h && t > d + 17 ? a._setTimerPageLeft(t, u, g, 0) : t > c && t < n - 17 && a._setTimerPageRight(t, u, g, 0)
            } else t = g.pageX, d = a.element.offset().left, n = d + b.length, h = a.$slider.offset().left, c = h + a.$slider.width(), t < h && t > d + 17 ? (a.$slider.css("left", t - a.element.offset().left), a._updateCurPosAndTrigger(g)) : t > c && t < n - 17 && (a.$slider.css("left", t - a.element.offset().left - a.$slider.width()),
                a._updateCurPosAndTrigger(g))
        });
        d = this.$slider = l("div.pq-sb-slider", this.element);
        d.attr("tabindex", "0");
        this._bindSliderEvents(d);
        this.$top_btn = l("div.top-btn,div.left-btn", this.element).click(function (e) {
            if (!a.options.disabled)return a.decr_cur_pos(e), !1
        }).mousedown(function (e) {
            if (!a.options.disabled)return a.mousedownTimeout = setTimeout(function () {
                a.mousedownInterval = setInterval(function () {
                    a.decr_cur_pos(e)
                }, 0)
            }, a.options.timeout), !1
        }).bind("mouseup mouseout", function (e) {
            a._mouseup(e)
        });
        this.$bottom_btn =
            l("div.bottom-btn,div.right-btn", this.element).click(function (e) {
                if (!a.options.disabled)return a.incr_cur_pos(e), !1
            }).mousedown(function (e) {
                if (!a.options.disabled)return a.mousedownTimeout = setTimeout(function () {
                    a.mousedownInterval = setInterval(function () {
                        a.incr_cur_pos(e)
                    }, 0)
                }, a.options.timeout), !1
            }).bind("mouseup mouseout", function (e) {
                a._mouseup(e)
            });
        this.refresh()
    };
    var a = 0;
    c._setTimerPageLeft = function (f, b, d, n) {
        var k = this, e = k.options;
        this.mousedownTimeout = window.setTimeout(function () {
            if (f >= k.$slider.offset().top)k._mouseup();
            else {
                k._pageLeft(d);
                var g = a ? 0 : e.timeout;
                a++;
                k._setTimerPageLeft(f, b, d, g)
            }
        }, n)
    };
    c._setTimerPageRight = function (f, b, d, n) {
        var k = this;
        this.mousedownTimeout = window.setTimeout(function () {
            if (f <= k.$slider.offset().top + b)k._mouseup(); else {
                k._pageRight(d);
                var e = a ? 0 : k.options.timeout;
                a++;
                k._setTimerPageRight(f, b, d, e)
            }
        }, n)
    };
    c._bindSliderEvents = function (a) {
        var b = this, d = "x";
        "vertical" == this.options.direction && (d = "y");
        a.draggable({
            axis: d, helper: function (a, d) {
                b._setDragLimits();
                return this
            }, start: function (a) {
                b.topWhileDrag =
                    null;
                b.dragging = !0
            }, drag: function (a) {
                b.dragging = !0;
                var d = b.options.pace;
                "optimum" == d ? b._setNormalPace(a) : "fast" == d && b._updateCurPosAndTrigger(a)
            }, stop: function (a) {
                "fast" != b.options.pace && b._updateCurPosAndTrigger(a);
                b.dragging = !1;
                b.refresh()
            }
        }).on("keydown.pq-scrollbar", function (a) {
            var d = a.keyCode, e = b.options, g = e.cur_pos, t = e.ratio, B = e.num_eles, f = l.ui.keyCode;
            null == b.keydownTimeout && (b.keydownTimeout = window.setTimeout(function () {
                d == f.DOWN || d == f.RIGHT ? b.incr_cur_pos(a) : d == f.UP || d == f.LEFT ? b.decr_cur_pos(a) :
                    d == f.HOME ? e.steps ? 0 < g && (e.cur_pos = 0, b.updateSliderPos(), b.scroll(a)) : 0 < t && (e.ratio = 0, b.updateSliderPos(), b.drag(a)) : d == f.END ? e.steps ? g < B && (e.cur_pos = B, b.updateSliderPos(), b.scroll(a)) : 1 > t && (e.ratio = 1, b.updateSliderPos(), b.drag(a)) : "vertical" == e.direction && (d == f.PAGE_DOWN ? b._pageRight(a) : d == f.PAGE_UP && b._pageLeft(a));
                b.keydownTimeout = null
            }, 0));
            if (d == f.DOWN || d == f.RIGHT || d == f.UP || d == f.LEFT || d == f.PAGE_DOWN || d == f.PAGE_UP || d == f.HOME || d == f.END)return a.preventDefault(), !1
        })
    };
    c.decr_cur_pos = function (a) {
        var b =
            this.options;
        if (b.steps)0 < b.cur_pos && (b.cur_pos--, this.updateSliderPos(), this.scroll(a)); else if (0 < b.ratio) {
            var d = b.ratio - 1 / (b.num_eles - 1);
            0 > d && (d = 0);
            b.ratio = d;
            this.updateSliderPos();
            this.drag(a)
        }
    };
    c.incr_cur_pos = function (a) {
        var b = this.options;
        if (b.steps)b.cur_pos < b.num_eles - 1 && b.cur_pos++, this.updateSliderPos(), this.scroll(a); else {
            if (1 > b.ratio) {
                var d = b.ratio + 1 / (b.num_eles - 1);
                1 < d && (d = 1);
                b.ratio = d
            }
            this.updateSliderPos();
            this.drag(a)
        }
    };
    c._mouseup = function (f) {
        this.options.disabled || (a = 0, window.clearTimeout(this.mousedownTimeout),
            this.mousedownTimeout = null, window.clearInterval(this.mousedownInterval), this.mousedownInterval = null)
    };
    c._setDragLimits = function () {
        var a = this.options;
        if ("vertical" == a.direction) {
            var b = this.element.offset().top + 17, a = b + a.length - 34 - this.slider_length;
            this.$slider.draggable("option", "containment", [0, b, 0, a])
        } else b = this.element.offset().left + 17, a = b + a.length - 34 - this.slider_length, this.$slider.draggable("option", "containment", [b, 0, a, 0])
    };
    c._validateCurPos = function () {
        var a = this.options;
        a.cur_pos >= a.num_eles &&
        (a.cur_pos = a.num_eles - 1);
        0 > a.cur_pos && (a.cur_pos = 0)
    };
    c._updateSliderPosRatio = function () {
        var a = this.options, b = a.direction, d = a.ratio, n = this.$slider[0], a = a.length - 34 - this.slider_length;
        if (null == d)throw"updateSliderPosRatio ratio N/A";
        d = d * a + 17;
        "vertical" == b ? n.style.top = d + "px" : n.style.left = d + "px"
    };
    c._updateSliderPosCurPos = function () {
        var a = this.options, b = this.$slider[0], d = this.scroll_space * a.cur_pos / (a.num_eles - 1);
        "vertical" == a.direction ? b.style.top = 17 + d + "px" : b.style.left = 17 + d + "px"
    };
    c.updateSliderPos = function () {
        var a =
            this.options;
        if (void 0 === a.steps)throw"updateSliderPos. steps N/A";
        a.steps ? this._updateSliderPosCurPos() : this._updateSliderPosRatio()
    };
    c.scroll = function (a) {
        var b = this.options;
        this._trigger("scroll", a, {cur_pos: b.cur_pos, num_eles: b.num_eles})
    };
    c.drag = function (a) {
        this._trigger("drag", a, {ratio: this.options.ratio})
    };
    c._pageRight = function (a) {
        this._trigger("pageRight", a, null)
    };
    c._pageLeft = function (a) {
        this._trigger("pageLeft", a, null)
    };
    c._setSliderBgLength = function () {
        var a = this.options, b = a.theme, d = this.$slider,
            n = a.length, n = Math.round(((n - 34) * n / (40 * a.num_eles + n) - 14) / 2);
        1 > n && (n = 1);
        var k = 14 + 2 * n;
        this.scroll_space = a.length - 34 - k;
        if (k !== this.slider_length)if (this.slider_length = k, a = "vertical" === a.direction ? {
                dim: "height",
                cls: ".vert-slider-bg"
            } : {
                dim: "width",
                cls: ".horiz-slider-bg"
            }, b)d[a.dim](k - 2); else l(a.cls, this.element)[a.dim](n), d[a.dim](k)
    };
    c._updateCurPosAndTrigger = function (a, b) {
        var d = this.options, n = d.direction, k = this.$slider;
        null == b && (b = parseInt(k[0].style["vertical" === n ? "top" : "left"]));
        n = (b - 17) / (d.length -
            34 - this.slider_length);
        if (d.steps) {
            if (n *= d.num_eles - 1, n = Math.round(n), d.cur_pos != n) {
                if (this.dragging) {
                    if (null != this.topWhileDrag && (this.topWhileDrag < b && d.cur_pos > n || this.topWhileDrag > b && d.cur_pos < n))return;
                    this.topWhileDrag = b
                }
                this.options.cur_pos = n;
                this.scroll(a)
            }
        } else d.ratio = n, this.drag(a)
    };
    c._setNormalPace = function (a) {
        this.timer && (window.clearInterval(this.timer), this.timer = null);
        var b = this, d = this.options.direction;
        b.timer = window.setInterval(function () {
            var n = parseInt(b.$slider[0].style["vertical" ===
            d ? "top" : "left"]);
            b.prev_top === n && (b._updateCurPosAndTrigger(a, n), window.clearInterval(b.timer), b.timer = null);
            b.prev_top = n
        }, 20)
    };
    c.refresh = function () {
        var a = this.options, b = this.$slider[0], d = this.element;
        1 >= a.num_eles ? d[0].style.display = "none" : (d[0].style.display = "", this._validateCurPos(), this.dragging || (d["vertical" === a.direction ? "height" : "width"](a.length), this._setSliderBgLength(), b.style.display = 4 > this.scroll_space || 1 >= a.num_eles ? "none" : ""), this.updateSliderPos())
    };
    c._trigger = h._trigger;
    c.on = h.on;
    c.one = h.one;
    c.off = h.off
})(jQuery);
(function (l) {
    l.paramquery = l.paramquery || {};
    l.paramquery.onResize = function (m, h) {
        var c = l(m);
        "static" === c.css("position") && c.css("position", "relative");
        var a = l('<iframe type="text/html" src="about:blank" class="pq-resize-iframe" style="display:block;width:100%;height:100%;position:absolute;top:0;left:0;z-index:-1;overflow: hidden; pointer-events: none;" />').appendTo(c);
        a[0].data = "about:blank";
        a.css("opacity", "0");
        for (var f = 0; f < c.length; f++)l(a[f].contentWindow).on("resize", function (a) {
            h()
        })
    }
})(jQuery);
(function (l) {
    function m(e) {
        return "<span class='btn btn-xs glyphicon glyphicon-" + e + "' ></span>"
    }

    function h(e) {
        return "<span class='ui-widget-header pq-ui-button'><span class='ui-icon ui-icon-" + e + "'></span></span>"
    }

    var c = function () {
    };
    c.prototype.belongs = function (e) {
        if (e.target == this.that.element[0])return !0
    };
    var a = l.paramquery;
    a.cClass = c;
    var f = function (e) {
        this.that = e;
        var g = this.options = e.options, t = this;
        t.odd = [];
        if (null != g.postRenderInterval)e.on("refresh", function () {
            t.prColDef.length && t.postRenderAll()
        }).on("refreshRow",
            function (e, g) {
                t.prColDef.length && t.postRenderRow(g)
            }).on("refreshCell", function (e, g) {
            g.column.postRender && t.postRenderRow(g)
        }).on("refreshColumn", function (e, g) {
            g.column.postRender && t.setTimerPostRender(0, g.colIndx, g.column)
        });
        if (!g.mergeModel.flex)e.on("refresh refreshCell refreshRow refreshColumn", t.onRefreshMerge(e))
    };
    a.cGenerateView = f;
    c = f.prototype = new c;
    c.onRefreshMerge = function (e) {
        return function () {
            for (var g = e.$cont.find(".pq-merge-cell-div"), t, a, b, d, k = g.length, f = [], n = []; k--;)t = g[k], t = t.parentNode,
            a || (a = 2 * parseInt(l(t).css("paddingTop")), b = 2 * parseInt(l(t).css("paddingLeft"))), d = Math.max(t.offsetHeight, 28), d -= a, t = t.offsetWidth - b, f[k] = d - 1 + "px", n[k] = t + "px";
            for (k = g.length; k--;)t = g[k], t.style.height = f[k], t.style.width = n[k]
        }
    };
    c.generateView = function (e) {
        e = e || {};
        var g = this.that, t = g.options, b = "flex" === t.width, d = "flex" === t.height, k = t.cls, f = k.cont_inner, n = k.cont_inner_b, c, h, l = g.initH, w = g.finalH, x = g.pqpanes;
        if (e.$cont)c = this._generateTables(null, null, e), k = e.$cont, k.empty(), k[0].innerHTML = x.v ? ["<div class='",
            f, "'>", c, "</div><div class='", f, "'>", c, "</div>"].join("") : ["<div class='", f, "'>", c, "</div>"].join(""), t = k.children("div").children("table"), g.tables[0] = {
            $tbl: t,
            $cont: k
        }; else {
            c = g.initV;
            h = g.finalV;
            var y = g.pdata, k = g.$cont;
            null != t.editModel.indices && g.blurEditor({force: !0});
            l = {pageData: y, initV: c, finalV: h, initH: l, finalH: w, source: e.source};
            g._trigger("beforeTableView", null, l);
            c = this._generateTables(c, h, e);
            k.empty();
            0 === g.totalVisibleRows ? k.append("<div class='" + f + " pq-grid-norows' >" + t.strNoRows + "</div>") :
                (e = d || b ? "style='position:relative;'" : "", k[0].innerHTML = x.h && x.v ? ["<div class='", f, "'>", c, "</div><div class='", f, "'>", c, "</div><div class='", f, " ", n, "'>", c, "</div><div class='", f, " ", n, "'>", c, "</div>"].join("") : x.v ? ["<div class='", f, "' ", e, " >", c, "</div><div class='", f, "' >", c, "</div>"].join("") : x.h ? ["<div class='", f, "' style='position:static;' >", c, "</div><div class='", f, " ", n, "' style='position:static;' >", c, "</div>"].join("") : ["<div class='", f, "' ", e, " >", c, "</div>"].join(""));
            g.$tbl = k.children("div").children("table");
            if (t.scrollModel.flexContent && g.$tbl[0])a.onResize(g.$tbl[0], function () {
                var e = g.iRefresh;
                e.ignoreTResize || e.softRefresh()
            });
            this.setPaneEvents();
            g._trigger("refresh", null, l)
        }
        this.setPanes()
    };
    c.postRenderRow = function (e) {
        var g = this.that, t = this.prColDef, a = g.iMerge, b = e.rowIndx, d;
        null != e.colIndx && (t = [{colIndx: e.colIndx, column: e.column}]);
        for (var k = 0, f = t.length; k < f; k++)e = t[k], d = e.column.postRender, e = e.colIndx, a.ismergedCell(b, e) ? a.isRootCell(b, e, "a") && (e = a.getRootCell(b, e), d.call(g, e)) : (e = g.normalize({
            rowIndx: b,
            colIndx: e
        }), d.call(g, e))
    };
    c.setTimerPostRender = function (e, g, t) {
        var a = this.that, b = this, d = a.pdata, k = function (e) {
            return -1 == a.options.postRenderInterval ? e() : setTimeout(e, 0)
        };
        d && d.length && (b.postRenderTimeoutID = k(function () {
            var k = a.initV, f = a.options.freezeRows;
            e < k && e >= f && (e = k);
            d[e].pq_hidden || b.postRenderRow({column: t, colIndx: g, rowIndx: e + a.rowIndxOffset});
            e++;
            e <= a.finalV && b.setTimerPostRender(e)
        }))
    };
    c.postRenderAll = function () {
        var e = this.that, g = this, t = e.pdata, a = e.options.postRenderInterval, e = function (e) {
            return -1 ==
            a ? e() : setTimeout(e, a)
        };
        t && t.length && (clearTimeout(g.postRenderTimeoutID), g.postRenderTimeoutID = e(function () {
            g.setTimerPostRender(0)
        }))
    };
    c.scrollView = function () {
        var e = this.that, g = this.options, t = g.virtualY;
        g.virtualX || e.hscroll.drag();
        t || e.vscroll.drag()
    };
    c.setPaneEvents = function () {
        var e = this.that, g = e.pqpanes, t = e.$cont.children("div"), a = e.iMouseSelection;
        if ((e = e.$tbl) && e.length)if (g.h && g.v) {
            var g = l(t[0]), e = l(t[1]), b = l(t[2]), t = l(t[3]);
            g.on("scroll", function (e) {
                this.scrollLeft = this.scrollTop = 0
            });
            e.on("scroll",
                function (e) {
                    this.scrollTop = 0;
                    this.scrollLeft = a.getScrollLeft(!0)
                });
            b.on("scroll", function (e) {
                this.scrollTop = a.getScrollTop(!0);
                this.scrollLeft = 0
            });
            t.on("scroll", function (e) {
                this.scrollTop = a.getScrollTop(!0);
                this.scrollLeft = a.getScrollLeft(!0)
            })
        } else if (g.v)g = l(t[0]), t = l(t[1]), g.on("scroll", function (e) {
            this.scrollTop = a.getScrollTop(!0);
            this.scrollLeft = 0
        }), t.on("scroll", function (e) {
            this.scrollTop = a.getScrollTop(!0);
            this.scrollLeft = a.getScrollLeft(!0)
        }); else if (g.h)g = l(t[0]), t = l(t[1]), g.on("scroll",
            function (e) {
                this.scrollTop = 0;
                this.scrollLeft = a.getScrollLeft(!0)
            }), t.on("scroll", function (e) {
            this.scrollTop = a.getScrollTop(!0);
            this.scrollLeft = a.getScrollLeft(!0)
        }); else t.on("scroll", function (e) {
            this.scrollTop = a.getScrollTop(!0);
            this.scrollLeft = a.getScrollLeft(!0)
        })
    };
    c.setPanes = function () {
        var e = this.that, g = e.pqpanes, t = e.$cont.children("div"), a = e.iRefresh, b = e.$tbl, d = e.options, k = e.calcWidthCols(-1, 1 * d.freezeCols) + 1, f = "flex" !== d.width || d.maxWidth ? a.getEContWd() : "";
        if (e.tables.length) {
            var n = e.tables[0].$tbl,
                c = e.tables[0].$cont, h = n.parent("div");
            g.v ? (l(h[0]).css({width: k}), l(h[1]).css({
                left: k,
                width: f - k
            }), l(n[1]).css({left: -1 * k})) : l(h[0]).css({width: f});
            c.height(n[0].scrollHeight - 1);
            a.setContHeight()
        }
        if (b && b.length)if (a = "flex" !== d.height || d.maxHeight ? a.getEContHt() : "", g.h && g.v) {
            var n = l(t[0]), c = l(t[1]), h = l(b[1]), w = l(t[2]), x = l(b[2]), t = l(t[3]), y = l(b[3]), b = e.calcHeightFrozenRows();
            n.css({width: k, height: b});
            c.css({left: k, width: f - k, height: b});
            h.css({left: -1 * k});
            w.css({width: k, top: b, height: a - b});
            x.css({
                marginTop: -(b +
                1)
            });
            t.css({left: k, width: f - k, top: b, height: a - b});
            y.css({marginTop: -(b + 1), left: -1 * k})
        } else g.v ? (n = l(t[0]), t = l(t[1]), b = l(b[1]), n.css({width: k, height: a}), t.css({
            left: k,
            width: f - k,
            height: a
        }), b.css({left: -1 * k})) : g.h ? (n = l(t[0]), t = l(t[1]), c = l(b[1]), b = e.calcHeightFrozenRows(), n.css({
            height: b,
            width: f
        }), t.css({width: f, top: b, height: a - b}), c.css({marginTop: -(b + 1)})) : t.css({width: f, height: a});
        d.showHeader && (g.vH ? (e.$header_left.css({width: k}), e.$header_right.css({
            left: k,
            width: f - k
        }), e.$header_right_inner.css({left: -k})) :
            e.$header_left.css({width: f}))
    };
    c.createColDefs = function () {
        for (var e = this.that, g = e.colModel, t = e.initH, a = e.finalH, e = e.options.freezeCols, b = [], d = [], k = 0; k <= a; k++) {
            if (k < t && k >= e && (k = t, k > a))throw"initH>finalH";
            var f = g[k];
            f.hidden || (b.push({
                column: f,
                colIndx: k
            }), f.postRender && "function" == typeof f.postRender && d.push({column: f, colIndx: k}))
        }
        this.colDef = b;
        this.prColDef = d
    };
    c._generateTables = function (e, g, t) {
        t = t || {};
        var a = this.that, b = a.options, d = b.bootstrap, k = b.numberCell, f = !0, n = 1 * b.freezeRows, c = 0, h = t.other, l = this.odd;
        g = h ? t.data.length - 1 : g;
        h ? t = t.data : (t = a.pdata, this.setFrozenRip(t, n));
        if (h || null != e && null != g) {
            c = ["pq-grid-table"];
            d.on && c.push(d.tbody);
            b.columnBorders && c.push("pq-td-border-right");
            b.rowBorders && c.push("pq-td-border-top");
            c.push(b.wrap ? "pq-wrap" : "pq-no-wrap");
            b = ["<table class='" + c.join(" ") + "' >"];
            b.push("<tr class='pq-row-hidden'>");
            if (k.show) {
                var x = k.width;
                b.push("<td style='width:" + x + "px;' ></td>")
            }
            c = this.colDef;
            k = 0;
            for (d = c.length; k < d; k++)x = c[k], a = x.colIndx, x = x.column.outerWidth, b.push("<td style='width:",
                x, "px;' pq-col-indx='", a, "'></td>");
            b.push("</tr>");
            for (c = 0; c <= g; c++)c < e && c >= n && (c = e), k = t[c], d = c, k && k.pq_hidden || (l[d] = f = !f, a = k.pq_detail && k.pq_detail.show, this._generateRow(k, d, b, h, a), a && this._generateDetailRow(k, d, b));
            b.push("</table>");
            return b.join("")
        }
    };
    c.appendRow = function (e) {
        var g = this.that, t = g.pdata, a = g.colModel, b = g.finalV;
        b + e > t.length && (e = t.length - b);
        if (e) {
            if (1 < e)throw"noRows > 1";
            g._trigger("beforeTableView", null, {
                pageData: t,
                initV: b,
                finalV: b,
                initH: g.initH,
                finalH: g.finalH,
                colModel: a
            });
            g.refreshRow({
                rowIndxPage: b,
                refresh: !1
            })
        }
        return e
    };
    c.prependRow = function (e) {
        var g = this.that, t = g.options.freezeRows, a = g.calcVisibleRows(g.pdata, 0, t), b = g.pdata, d = g.initV, k = g.colModel;
        if (g._mergeCells) {
            if (a)for (a = 0; a < t; a++)g.refreshRow({rowIndxPage: a, refresh: !1});
            g.refreshRow({rowIndxPage: d + 1, refresh: !1})
        }
        g._trigger("beforeTableView", null, {
            pageData: b,
            initV: d,
            finalV: d,
            initH: g.initH,
            finalH: g.finalH,
            colModel: k
        });
        g.refreshRow({rowIndxPage: d, refresh: !1});
        return e
    };
    c.removeTopRow = function (e) {
        for (var g = this.that, a = g.options.freezeRows,
                 b = g.calcVisibleRows(g.pdata, 0, a), d = g.$tbl, k = l([]), f = 0; f < d.length; f++)var c = l(d[f]).children("tbody").children("tr:gt(0)").slice(b, e + b), k = k.add(c);
        k.remove();
        if (g._mergeCells) {
            if (b)for (f = 0; f < a; f++)g.refreshRow({rowIndxPage: f, refresh: !1});
            g.refreshRow({rowIndxPage: g.initV, refresh: !1})
        }
    };
    c.removeBottomRow = function (e) {
        var g = this.that.$tbl;
        if (e)for (var a = 0; a < g.length; a++)l(g[a]).children("tbody").children("tr:gt(0)").slice(-e).remove()
    };
    c.format = function () {
        var e = l.datepicker, g = pq.formatNumber;
        return function (a,
                         b, d) {
            if ("date" == d) {
                if (!isNaN(Date.parse(a)))return e.formatDate(b, new Date(a))
            } else return g(a, b)
        }
    }();
    c.renderCell = function (e) {
        var g = this.that, a = [], b = [], d = e.Export, k = !1, f = this.options, c = ["pq-grid-cell"];
        if (!e.other && !d && g._mergeCells) {
            e = g.iMerge.renderCell(e);
            if (null == e)return "";
            e.rowspan && (a.push("rowspan='" + e.rowspan + "'", "colspan='" + e.colspan + "'"), f.mergeModel.flex || (k = !0, c.push("pq-merge-cell")));
            e.style && b.push(e.style);
            e.cls && c.push(e.cls)
        }
        var h = e.rowData, l = e.column, s = e.colIndx, w = l.dataIndx,
            x = f.freezeCols, f = f.columnBorders;
        if (h) {
            d || (a.push("pq-col-indx='" + s + "'"), "right" == l.align ? c.push("pq-align-right") : "center" == l.align && c.push("pq-align-center"), s == x - 1 && f && c.push("pq-last-frozen-col"), (s = l.cls) && c.push(s), (s = g.iSelection.dirty ? null : h.pq_cellselect) && s[w] && c.push(g.iCells.hclass));
            var y, x = h[w], s = (s = l.format) ? this.format(x, s, l.dataType) : x;
            e.dataIndx = w;
            e.cellData = x;
            e.formatVal = s;
            if (l.render && (y = l.render.call(g, e)) && "string" != typeof y) {
                var x = y.attr, f = y.cls, m = y.style;
                x && a.push(x);
                f && c.push(f);
                m && b.push(m);
                y = y.text
            }
            null == y && l._render && (y = l._render.call(g, e));
            y && "string" != typeof y && (x = y.attr, f = y.cls, m = y.style, x && a.push(x), f && c.push(f), m && b.push(m), y = y.text);
            null == y && (y = s);
            if (d)return y;
            if ("" === y || void 0 == y)y = "&nbsp;";
            (e = h.pq_cellcls) && (e = e[w]) && c.push(e);
            if (h = h.pq_cellattr)if (w = h[w]) {
                var w = n(w), A;
                for (A in w)h = w[A], "style" == A ? b.push(h) : a.push(A + '="' + h + '"')
            }
            b = b.length ? " style='" + b.join("") + "' " : "";
            return ["<td class='", c.join(" "), "' ", a.join(" "), b, " >", k ? "<div class='pq-merge-cell-div'><div><div class='pq-merge-inner'>" :
                "", y, k ? "</div></div></div>" : "", "</td>"].join("")
        }
    };
    c.setFrozenRip = function (e, g) {
        if (e) {
            for (var a; g-- && (a = e[g]) && a.pq_hidden;);
            this.frozenRip = g
        }
    };
    c.refreshRow = function (e, g) {
        var a = this.that.pdata[e];
        this._generateRow(a, e, g, null, a.pq_detail && a.pq_detail.show)
    };
    c._generateRow = function (e, g, a, b, d) {
        var k = ["pq-grid-row"];
        this.frozenRip === g && k.push("pq-last-frozen-row");
        d && k.push("pq-detail-master");
        var f = this.that, c = this.options, h = c.rowInit;
        d = c.numberCell;
        var l = "", s = "", w = f.rowIndxOffset, x = g + w;
        h && (h = h.call(f,
            {
                rowData: e,
                rowIndxPage: g,
                rowIndx: x
            })) && (h.cls && k.push(h.cls), l += h.attr ? " " + h.attr : "", s += h.style ? h.style : "");
        c.stripeRows && this.odd[g] && k.push("pq-grid-oddRow");
        e.pq_rowselect && k.push(f.iRows.hclass);
        f = e.pq_rowcls;
        null != f && k.push(f);
        if (f = e.pq_rowattr) {
            var f = n(f), y;
            for (y in f)l += " " + y + '="' + f[y] + '"'
        }
        s = s ? "style='" + s + "'" : "";
        a.push("<tr pq-row-indx='", g, "' class='", k.join(" "), "' ", l, " ", s, " >");
        d.show && a.push(["<td pq-col-indx='-1' class='pq-grid-number-cell'>", b ? "&nbsp;" : x + 1, "</td>"].join(""));
        e = {
            rowIndx: g +
            w, rowIndxPage: g, other: b, rowData: e
        };
        g = this.colDef;
        b = 0;
        for (k = g.length; b < k; b++)y = g[b], d = y.colIndx, e.column = y.column, e.colIndx = d, a.push(this.renderCell(e));
        a.push("</tr>");
        return a
    };
    c._generateDetailRow = function (e, g, a) {
        var b = ["pq-grid-row pq-detail-child"], d = this.that, k = d.options, f = k.numberCell;
        k.stripeRows && this.odd[g] && b.push("pq-grid-oddRow");
        e.pq_rowselect && b.push(d.iRows.hclass);
        e = e.pq_rowcls;
        null != e && b.push(e);
        a.push("<tr pq-row-indx='" + g + "' class='" + b.join(" ") + "' >");
        f.show && a.push("<td class='pq-grid-number-cell'>&nbsp;</td>");
        a.push("<td class='pq-grid-cell pq-detail-child' colSpan='20'></td>");
        a.push("</tr>");
        return a
    };
    c = {
        widgetEventPrefix: "pqgrid", _create: function () {
            //////console.log("widgetEventPrefix");
            var e = this, g = this.options, t = g.dataModel, d = g.bootstrap, c = d.on, n = g.roundCorners && !c, p = g.ui, h = g.sortModel;
            this.BS_on = c;
            g.collapsible || (g.collapsible = {on: !1, collapsed: !1});
            g.flexHeight && (g.height = "flex");
            g.flexWidth && (g.width = "flex");
            if (t.sortIndx) {
                h.on = g.sortable;
                h.type = t.sorting;
                var q = [], u = t.sortIndx, t = t.sortDir;
                if (l.isArray(u)) {
                    for (var s = 0; s < u.length; s++) {
                        var w =
                            t && t[s] ? t[s] : "up";
                        q.push({dataIndx: u[s], dir: w})
                    }
                    h.single = !1
                } else q.push({dataIndx: u, dir: t ? t : "up"}), h.single = !0;
                h.sorter = q
            }
            !1 === g.virtualXHeader && (g.virtualXHeader = null);
            this.setEditorPosTimer();
            this.iGenerateView = new f(this);
            this.iRefresh = new a.cRefresh(this);
            this.iKeyNav = new k(this);
            this.iIsValid = new b(this);
            this.tables = [];
            this.$tbl = null;
            this.iColModel = new a.cColModel(this);
            this.iSort = new a.cSort(this);
            this.iHeader = new a.cHeader(this);
            this._initTypeColumns();
            h = this.element;
            h.on("scroll" + this.eventNamespace,
                function () {
                    this.scrollTop = this.scrollLeft = 0
                });
            q = c ? d.grid : p.grid;
            u = c ? "" : p.header_o;
            t = c ? "" : p.bottom;
            d = c ? d.top : p.top;
            h.empty().addClass("pq-grid " + q + " " + (n ? " ui-corner-all" : "")).html(["<div class='pq-grid-top ", d, " ", n ? " ui-corner-top" : "", "'><div class='pq-grid-title", n ? " ui-corner-top" : "", "'>&nbsp;</div></div><div class='pq-grid-center' ><div class='pq-header-outer ", u, "'></div><div class='pq-grid-cont-outer' ><div class='pq-grid-cont' tabindex='0'></div></div></div><div class='pq-grid-bottom ", t, " ",
                n ? " ui-corner-bottom" : "", "'><div class='pq-grid-footer'></div></div>"].join(""));
            this.$bottom = l("div.pq-grid-bottom", h);
            this._trigger("render", null, {dataModel: this.options.dataModel, colModel: this.colModel});
            this.$top = l("div.pq-grid-top", h);
            g.showTop || this.$top.css("display", "none");
            this.$title = l("div.pq-grid-title", h);
            g.showTitle || this.$title.css("display", "none");
            n = this.$grid_center = l("div.pq-grid-center", h).on("scroll", function () {
                this.scrollTop = 0
            });
            this.$header_o = l("div.pq-header-outer", this.$grid_center).on("scroll",
                function () {
                    this.scrollLeft = this.scrollTop = 0
                });
            this.$footer = l("div.pq-grid-footer", h);
            this.$cont_o = l(".pq-grid-cont-outer", n);
            d = this.$cont = l("div.pq-grid-cont", n);
            l(window).bind("resize" + e.eventNamespace + " orientationchange" + e.eventNamespace, function (g, a) {
                e.onWindowResize(g, a)
            });
            d.on("click", ".pq-grid-cell,.pq-grid-number-cell", function (g) {
                if (!0 !== l.data(g.target, e.widgetName + ".preventClickEvent") && l(g.target).closest(".pq-grid")[0] == e.element[0])return e._onClickCell(g)
            });
            d.on("click", "tr.pq-grid-row",
                function (g) {
                    if (!0 !== l.data(g.target, e.widgetName + ".preventClickEvent") && l(g.target).closest(".pq-grid")[0] == e.element[0])return e._onClickRow(g)
                });
            d.on("contextmenu", "td.pq-grid-cell", function (g) {
                if (l(g.target).closest(".pq-grid")[0] == e.element[0])return e._onRightClickCell(g)
            });
            d.on("contextmenu", "tr.pq-grid-row", function (g) {
                if (l(g.target).closest(".pq-grid")[0] == e.element[0])return e._onRightClickRow(g)
            });
            d.on("dblclick", "td.pq-grid-cell", function (g) {
                if (l(g.target).closest(".pq-grid")[0] == e.element[0])return e._onDblClickCell(g)
            });
            d.on("dblclick", "tr.pq-grid-row", function (g) {
                if (l(g.target).closest(".pq-grid")[0] == e.element[0])return e._onDblClickRow(g)
            });
            d.on("blur", function () {
                e.onblur()
            });
            d.on("focus", function () {
                e.onfocus()
            });
            d.on("mousedown", function (g) {
                if (1 === g.which) {
                    var a = l(g.target);
                    if (a.closest(".pq-grid")[0] == e.element[0]) {
                        var t;
                        t = a.closest(".pq-grid-cell:not(.pq-detail-child)");
                        if (t.length && (g.currentTarget = t[0], t = e._onCellMouseDown(g), !1 === t))return !1;
                        if (!g.isPropagationStopped()) {
                            a = a.closest(".pq-grid-row");
                            if (a.length &&
                                (g.currentTarget = a[0], t = e._onRowMouseDown(g), !1 === t))return !1;
                            if (!g.isPropagationStopped())return e._onContMouseDown(g)
                        }
                    }
                }
            });
            d.on("mouseenter", "td.pq-grid-cell", function (g) {
                if (l(g.target).closest(".pq-grid")[0] == e.element[0])return e._onCellMouseEnter(g, l(this))
            });
            d.on("mouseenter", "tr.pq-grid-row", function (g) {
                if (l(g.target).closest(".pq-grid")[0] == e.element[0])return e._onRowMouseEnter(g, l(this))
            });
            d.on("mouseleave", "td.pq-grid-cell", function (g) {
                if (l(g.target).closest(".pq-grid")[0] == e.element[0])return e._onCellMouseLeave(g,
                    l(this))
            });
            d.on("mouseleave", "tr.pq-grid-row", function (g) {
                if (l(g.target).closest(".pq-grid")[0] == e.element[0])return e._onRowMouseLeave(g, l(this))
            });
            d.on("keyup", function (g) {
                l(g.target).closest(".pq-grid")[0] == e.element[0] && e._trigger("keyUp", g, null)
            });
            n.bind("mousewheel DOMMouseScroll", function (g) {
                return e._onMouseWheel(g)
            });
            this.$hvscroll = l("<div class='pq-hvscroll-square ui-widget-content'></div>").appendTo(n);
            c = l("<div class='pq-vscroll'></div>").appendTo(n);
            this.prevVScroll = 0;
            d = g.scrollModel;
            void 0 === d.lastColumn && g.virtualX && (d.lastColumn = "auto");
            this.vscroll = pq.scrollbar(c, {
                pace: d.pace,
                theme: d.theme,
                bootstrap: g.bootstrap,
                steps: g.virtualY && !d.smooth,
                direction: "vertical",
                cur_pos: 0,
                pageRight: function () {
                    e.iKeyNav.pageDown()
                },
                pageLeft: function () {
                    e.iKeyNav.pageUp()
                },
                drag: function (g, a) {
                    e.iMouseSelection.syncViewWithScrollBarVert(a.ratio)
                },
                scroll: function (g, a) {
                    e.iRefresh.refreshVscroll(a)
                }
            });
            c = l("<div class='pq-hscroll'></div>").appendTo(n);
            "flex" === g.height && c.css("position", "relative");
            this.hscroll =
                pq.scrollbar(c, {
                    direction: "horizontal",
                    pace: d.pace,
                    bootstrap: g.bootstrap,
                    theme: d.theme,
                    steps: g.virtualX && !d.smooth,
                    cur_pos: 0,
                    drag: function (g, a) {
                        e.iMouseSelection.syncViewWithScrollBarHor(a.ratio)
                    },
                    scroll: function () {
                        g.virtualX && !g.scrollModel.smooth && e.refresh()
                    }
                });
            g.selectionModel["native"] || this.disableSelection();
            n.bind("keydown.pq-grid", function (g) {
                l(g.target).closest(".pq-grid")[0] == e.element[0] && e._onKeyPressDown(g)
            });
            this._refreshTitle();
            this.iRows = new a.cRows(this);
            this.iCells = new a.cCells(this);
            this.generateLoading();
            this._initPager();
            this._refreshResizable();
            this._refreshDraggable();
            this.iResizeColumns = new a.cResizeColumns(this);
            this._mouseInit()
        }, _mouseDown: function (e) {
            var g = this;
            if (l(e.target).closest(".pq-editor-focus").length)this._blurEditMode = !0, window.setTimeout(function () {
                g._blurEditMode = !1
            }, 0); else return this._saveDims(), this._mousePQUpDelegate = function (e) {
                return g._mousePQUp(e)
            }, l(document).bind("mouseup" + this.eventNamespace, this._mousePQUpDelegate), this._super(e)
        }, destroy: function () {
            this._trigger("destroy");
            this._super();
            window.clearInterval(this._refreshEditorPosTimer);
            this.autoResizeTimeout && clearTimeout(this.autoResizeTimeout);
            for (var e in this)delete this[e];
            this.options = void 0;
            l.fragments = {}
        }, _setOption: function (e, g) {
            var a = this.options, b = a.dataModel;
            if ("height" === e)"flex" === g ? (b = this.vscroll, g && b && b.widget().hasClass("pq-sb-vert") && (a.virtualY ? b.option("cur_pos", 0) : b.option("ratio", 0)), this.hscroll.widget().css("position", "relative")) : "flex" === a.height && this.hscroll.widget().css("position", ""),
                a[e] = g; else if ("width" === e && "flex" == g)a[e] = g, b = this.hscroll, g && b && b.widget().hasClass("pq-sb-horiz") && (a.virtualX ? b.option("cur_pos", 0) : b.option("ratio", 0)); else if ("title" == e)a[e] = g, this._refreshTitle(); else if ("roundCorners" == e)(a[e] = g) ? (this.element.addClass("ui-corner-all"), this.$top.addClass("ui-corner-top"), this.$bottom.addClass("ui-corner-bottom")) : (this.element.removeClass("ui-corner-all"), this.$top.removeClass("ui-corner-top"), this.$bottom.removeClass("ui-corner-bottom")); else if ("virtualX" ==
                e)a[e] = g, this.hscroll.option("steps", g); else if ("virtualY" == e)a[e] = g, this.vscroll.option("steps", g); else if ("freezeCols" == e)g = parseInt(g), !isNaN(g) && 0 <= g && g <= this.colModel.length - 2 && (a[e] = g); else if ("freezeRows" == e)g = parseInt(g), !isNaN(g) && 0 <= g && (a[e] = g); else if ("resizable" == e)a[e] = g, this._refreshResizable(); else if ("draggable" == e)a[e] = g, this._refreshDraggable(); else if ("scrollModel" == e)a[e] = g; else if ("dataModel" == e)g.data !== b.data && b.dataUF && (b.dataUF.length = 0), a[e] = g; else {
                if ("groupModel" == e)throw"use groupOption() to set groupModel options.";
                "pageModel" == e ? a[e] = g : "selectionModel" === e ? a[e] = g : "colModel" === e || "columnTemplate" == e ? (a[e] = g, this.iColModel.init()) : "disabled" === e ? (this._super(e, g), !0 === g ? this._disable() : this._enable()) : "numberCell" === e ? (a[e] = g, this.iRefresh.decidePanes()) : "strLoading" === e ? (a[e] = g, this._refreshLoadingString()) : "showTop" === e ? (a[e] = g, this.$top.css("display", g ? "" : "none")) : "showTitle" === e ? (a[e] = g, this.$title.css("display", g ? "" : "none")) : "showToolbar" === e ? (a[e] = g, this._toolbar.widget().css("display", g ? "" : "none")) : "toolbar" ==
                e ? a[e] = g : "collapsible" === e ? (a[e] = g, this._createCollapse()) : "showBottom" === e ? (a[e] = g, this.$bottom.css("display", g ? "" : "none")) : a[e] = g
            }
            return this
        }
    };
    c.options = {
        cancel: "input,textarea,button,select,option,.pq-no-capture,.ui-resizable-handle",
        trigger: !1,
        bootstrap: {
            on: !1,
            thead: "table table-striped table-condensed table-bordered",
            tbody: "table table-condensed",
            grid: "panel panel-default",
            top: "",
            btn: "btn btn-default",
            groupModel: {icon: ["glyphicon-triangle-bottom", "glyphicon-triangle-right"]},
            header_active: "active"
        },
        ui: {
            on: !0,
            grid: "ui-widget ui-widget-content",
            top: "ui-widget-header",
            bottom: "ui-widget-header",
            header_o: "ui-widget-header",
            header: "ui-state-default",
            header_active: "ui-state-active"
        },
        cls: {cont_inner: "pq-grid-cont-inner", cont_inner_b: "pq-grid-cont-inner-b"},
        distance: 3,
        collapsible: {on: !0, toggle: !0, collapsed: !1, _collapsed: !1, refreshAfterExpand: !0, css: {zIndex: 1E3}},
        colModel: null,
        columnBorders: !0,
        dataModel: {
            data: [],
            dataUF: [],
            cache: !1,
            dataType: "JSON",
            location: "local",
            sorting: "local",
            sortDir: "up",
            method: "GET"
        },
        synElement: {},//Add by THANHLUAN
        focusElement: null,//Add by THANHLUAN
        funcUpdate: null, //Add by THANHLUAN
        pagerOneRow: false, //Add by THANHHUYEN
        funcGetFilterSelect: null,//Add by THANHLUAN
        oldSelectFilter: '',//Add by THANHLUAN
        direction: "",
        draggable: !1,
        editable: !0,
        editModel: {
            cellBorderWidth: 0,
            pressToEdit: !0,
            clicksToEdit: 2,
            filterKeys: !0,
            keyUpDown: !0,
            reInt: /^([\-]?[1-9][0-9]*|[\-]?[0-9]?)$/,
            reFloat: /^[\-]?[0-9]*\.?[0-9]*$/,
            onBlur: "validate",
            saveKey: l.ui.keyCode.ENTER,
            onSave: "nextFocus",
            onTab: "nextFocus",
            allowInvalid: !1,
            invalidClass: "pq-cell-red-tr pq-has-tooltip",
            warnClass: "pq-cell-blue-tr pq-has-tooltip",
            validate: !0
        },
        editor: {select: !1, type: "textbox"},
        groupModel: {
            on: !1,
            title: [],
            titleDefault: "{0} ({1})",
            header: !0,
            headerMenu: !0,
            menuItems: ["merge", "fixCols", "grandSummary"],
            fixCols: !0,
            icon: ["ui-icon-triangle-1-se", "ui-icon-triangle-1-e"],
            dataIndx: [],
            collapsed: [],
            dir: [],
            showSummary: [],
            summaryEdit: !0,
            refreshOnChange: !0
        },
        summaryOptions: {number: "avg,sum,max,min", date: "count,max,min", string: "count"},
        summaryTitle: {avg: "Avg: {0}", count: "Count: {0}", max: "Max: {0}", min: "Min: {0}", sum: "Sum: {0}"},
        validation: {icon: "ui-icon-alert", cls: "ui-state-error", style: "padding:3px 10px;"},
        warning: {icon: "ui-icon-info", cls: "", style: "padding:3px 10px;"},
        freezeCols: 0,
        freezeRows: 0,
        freezeBorders: !0,
        calcDataIndxFromColIndx: !0,
        height: 400,
        hoverMode: "null",
        _maxColWidth: "99%",
        _minColWidth: 50,
        minWidth: 100,
        numberCell: {width: 30, title: "", resizable: !0, minWidth: 30, maxWidth: 100, show: !0},
        pageModel: {curPage: 1, totalPages: 0, rPP: 10, rPPOptions: [10, 20, 50, 100]},
        resizable: !1,
        roundCorners: !0,
        //rowBorders: !0, khanh
        rowBorders: 0,
        rowHeight: 25,
        scrollModel: {pace: "fast", smooth: !1, horizontal: !0, lastColumn: "auto", autoFit: !1, theme: !0},
        selectionModel: {type: "cell", onTab: "nextFocus", row: !0, mode: "block"},
        swipeModel: {on: !0, speed: 20, ratio: .15, repeat: 20},
        showBottom: !0,
        showHeader: !0,
        showTitle: !0,
        showToolbar: !0,
        showTop: !0,
        sortable: !0,
        sql: !1,
        stripeRows: !0,
        title: "&nbsp;",
        treeModel: null,
        virtualX: !1,
        virtualY: !1,
        width: "auto",
        wrap: !0,
        hwrap: !0
    };
    l.extend(!0, c.options, {
        strAdd: "Add",
        strDelete: "Delete",
        strEdit: "Edit",
        strGroup_header: "Drag a column here to group by that column",
        strGroup_merge: "Merge cells",
        strGroup_fixCols: "Fix columns",
        strGroup_grandSummary: "Grand summary",
        strLoading: "Loading",
        strNoRows: "No rows to display."
    });
    l.widget("paramquery._pqGrid", l.ui.mouse, c);
    c = a._pqGrid.prototype;
    c.readCell = function (e, g, a, b, d) {
        g = g.dataIndx;
        return a && !1 === a.isRootCell(b, d, "o") ? void 0 : e[g]
    };
    c.saveCell = function (e, g, a) {
        if(g != undefined)//THANHHUYEN bổ sung kiem tra undefined
            e[g.dataIndx] = a
    };
    c._destroyResizable = function () {
        var e = this.element, g = e.data();
        (g.resizable || g.uiResizable || g["ui-resizable"]) && e.resizable("destroy")
    };
    c._disable = function () {
        null == this.$disable && (this.$disable = l("<div class='pq-grid-disable'></div>").css("opacity", .2).appendTo(this.element))
    };
    c._enable = function () {
        this.$disable &&
        (this.element[0].removeChild(this.$disable[0]), this.$disable = null)
    };
    c._destroy = function () {
        this.loading && this.xhr.abort();
        this._destroyResizable();
        this._destroyDraggable();
        this._mouseDestroy();
        this.element.off(this.eventNamespace);
        l(window).unbind(this.eventNamespace);
        l(document).unbind(this.eventNamespace);
        this.element.empty().css("height", "").css("width", "").removeClass("pq-grid ui-widget ui-widget-content ui-corner-all").removeData()
    };
    c.collapse = function (e) {
        var g = this, a = this.element, b = this.options.collapsible,
            d = b.$collapse.children("span"), k = function () {
                a.css("overflow", "hidden");
                d.addClass("ui-icon-circle-triangle-s").removeClass("ui-icon-circle-triangle-n");
                a.hasClass("ui-resizable") && a.resizable("destroy");
                g._toolbar && g._toolbar.disable();
                b.collapsed = !0;
                b._collapsed = !0;
                b.animating = !1;
                g._trigger("collapse")
            };
        e = e ? e : {};
        if (b._collapsed)return !1;
        b.htCapture = a.height();
        !1 === e.animate ? (a.height(23), k()) : (b.animating = !0, a.animate({height: "23px"}, function () {
            k()
        }))
    };
    c.expand = function (e) {
        var g = this, a = this.element,
            b = this.options.collapsible, d = b.htCapture, k = b.$collapse.children("span"), f = function () {
                a.css("overflow", "");
                b._collapsed = !1;
                b.collapsed = !1;
                g._refreshResizable();
                b.refreshAfterExpand && g.refresh();
                k.addClass("ui-icon-circle-triangle-n").removeClass("ui-icon-circle-triangle-s");
                g._toolbar && g._toolbar.enable();
                b.animating = !1;
                g._trigger("expand")
            };
        e = e ? e : {};
        if (!1 === b._collapsed)return !1;
        !1 === e.animate ? (a.height(d), f()) : (b.animating = !0, a.animate({height: d}, function () {
            f()
        }))
    };
    c._createCollapse = function () {
        var e =
            this, g = this.$top, a = this.BS_on, b = this.options.collapsible;
        b.$stripe || (g = l("<div class='pq-slider-icon pq-no-capture'  ></div>").appendTo(g), b.$stripe = g);
        b.on ? b.$collapse || (b.$collapse = l(a ? m("collapse-down") : h("circle-triangle-n")).appendTo(b.$stripe).click(function (g) {
            b.collapsed ? e.expand() : e.collapse()
        })) : b.$collapse && (b.$collapse.remove(), delete b.$collapse);
        b.collapsed && !b._collapsed ? e.collapse({animate: !1}) : !b.collapsed && b._collapsed && e.expand({animate: !1});
        b.toggle ? b.$toggle || (b.$toggle = l(a ? m("fullscreen") :
            h("arrow-4-diag")).prependTo(b.$stripe).click(function (g) {
            e.toggle()
        })) : b.$toggle && (b.$toggle.remove(), delete b.$toggle)
    };
    c.toggle = function () {
        var e = this.options, g = e.collapsible, a = this.element, b, d = this._maxim;
        b = d ? "min" : "max";
        var k = l(document.body);
        if (!1 === this._trigger("beforeToggle", null, {state: b}))return !1;
        "min" == b ? (e = d.eleObj, g = d.docObj, this.option({
            height: e.height,
            width: e.width,
            maxHeight: e.maxHeight,
            maxWidth: e.maxWidth
        }), a[0].style.cssText = e.cssText, k[0].style.cssText = g.cssText, l("html").css({overflow: "visible"}),
            window.scrollTo(g.scrollLeft, g.scrollTop), this._maxim = null) : (e = {
            height: e.height,
            width: e.width,
            cssText: a[0].style.cssText,
            maxHeight: e.maxHeight,
            maxWidth: e.maxWidth
        }, this.option({
            height: "100%",
            width: "100%",
            maxHeight: null,
            maxWidth: null
        }), a.css(l.extend({
            position: "fixed",
            left: 0,
            top: 0,
            margin: 0
        }, g.css)), g = {
            scrollLeft: l(window).scrollLeft(),
            scrollTop: l(window).scrollTop(),
            cssText: k[0].style.cssText
        }, k.css({
            height: 0,
            width: 0,
            overflow: "hidden",
            position: "static"
        }), l("html").css({overflow: "hidden"}), window.scrollTo(0,
            0), this._maxim = {eleObj: e, docObj: g});
        this._trigger("toggle", null, {state: b});
        this._refreshResizable();
        this.refresh();
        l(window).trigger("resize", {$grid: a, state: b})
    };
    c._mouseCapture = function (e) {
        var g = this.options;
        return g.virtualX && g.virtualY && !g.scrollModel.smooth || !e.target ? !1 : l(e.target).closest(".pq-grid")[0] == this.element[0] ? (e = g.swipeModel, !1 == e.on || "touch" == e.on && !l.support.touch ? !1 : !0) : !1
    };
    c._saveDims = function () {
        var e = this.$tbl, g = this.$tbl_header;
        if (e)for (var a = 0; a < e.length; a++) {
            var b = e[a], d =
                l(b);
            d.data("offsetHeight", Math.round(b.offsetHeight) - 1);
            d.data("scrollWidth", Math.round(b.scrollWidth))
        }
        if (g)for (a = 0; a < g.length; a++)b = g[a], e = l(b).parent(), e.data("offsetHeight", Math.round(b.offsetHeight)), e.data("scrollWidth", Math.round(b.scrollWidth))
    };
    c._mousePQUp = function (e) {
        l(document).unbind("mouseup" + this.eventNamespace, this._mousePQUpDelegate);
        this._trigger("mousePQUp", e, null)
    };
    c._mouseStart = function (e) {
        this.blurEditor({force: !0});
        return !0
    };
    c._mouseDrag = function (e) {
        return !1 == this._trigger("mouseDrag",
            e, null) ? !1 : !0
    };
    c._mouseStop = function (e) {
        return !1 == this._trigger("mouseStop", e, null) ? !1 : !0
    };
    c.onWindowResize = function (e, g) {
        var a = this, b = a.options, d = a.element, k = d.parent();
        if (g) {
            var f = g.$grid;
            if (f && (f == d || 0 == d.closest(f).length))return
        }
        k.length && (k[0] == document.body || "fixed" == d.css("position") ? (d = window.innerHeight ? window.innerHeight : l(window).height(), k = l(window).width()) : (d = k.height(), k = k.width()), null == a._lastParentHt || d != a._lastParentHt || k != a._lastParentWd) && (a._lastParentHt = d, a._lastParentWd = k,
        l.support.touch && b.editModel.indices && l(document.activeElement).is(".pq-editor-focus") || (a.autoResizeTimeout && clearTimeout(a.autoResizeTimeout), a.autoResizeTimeout = window.setTimeout(function () {
            a._refreshAfterResize();
            delete a.autoResizeTimeout
        }, b.autoSizeInterval || 0)))
    };
    c._onMouseWheel = function (e) {
        this._saveDims();
        var g = this.options, a = 0, b = !1;
        e = e.originalEvent;
        var d = e.wheelDeltaX, k = e.wheelDeltaY, f = e.wheelDelta;
        if (d && Math.abs(d) > Math.abs(k)) {
            if ("flex" == g.width)return !0;
            b = !0;
            a = d / 120
        } else if (f) {
            if (!this.iRefresh.vscroll)return !0;
            a = f / 120
        } else if (e.detail) {
            if (!this.iRefresh.vscroll)return !0;
            a = -1 * e.detail / 3
        }
        a *= 3;
        e = b ? this.hscroll : this.vscroll;
        k = parseInt(e.option("cur_pos"));
        d = parseInt(e.option("num_eles"));
        if (!g.scrollModel.smooth && (b && g.virtualX || !b && g.virtualY)) {
            a = 0 < a ? Math[1 > a ? "ceil" : "floor"](a) : Math[-1 > a ? "ceil" : "floor"](a);
            g = k - a;
            0 > g ? g = 0 : g > d - 1 && (g = d - 1);
            if (g == k)return !0;
            e.option("cur_pos", k - a);
            e.scroll()
        } else {
            g = e.option("ratio");
            a = g - a / (d - 1);
            1 < a ? a = 1 : 0 > a && (a = 0);
            if (g == a)return !0;
            e.option("ratio", a);
            e.drag()
        }
        return !1
    };
    c._onDblClickCell =
        function (e) {
            var g = l(e.currentTarget), a = this.getCellIndices({$td: g}), b = a.rowIndxPage, d = b + this.rowIndxOffset, a = a.colIndx;
            if (null != a) {
                if (!1 == this._trigger("cellDblClick", e, {
                        $td: g,
                        rowIndxPage: b,
                        rowIndx: d,
                        colIndx: a,
                        column: this.colModel[a],
                        rowData: this.pdata[b]
                    }))return !1;
                1 < this.options.editModel.clicksToEdit && this.isEditableRow({rowIndx: d}) && this.isEditableCell({
                    colIndx: a,
                    rowIndx: d
                }) && this.editCell({rowIndxPage: b, colIndx: a})
            }
        };
    c._onClickCont = function (e) {
    };
    c._onClickRow = function (e) {
        var g = l(e.currentTarget),
            a = parseInt(g.attr("pq-row-indx")), b = a + this.rowIndxOffset;
        // truong hop gan gia tri cho phan tu trong form
        var rowDT = this.pdata[a];
        var synEl = this.options.synElement;
        if (synEl.length > 0) {
            for (i = 0; i < synEl.length; i++) {
                temDI = synEl[i].dataIndx;
                $("#" + synEl[i].elId).val(rowDT[temDI]);

            }
            this.options.parentBound.hide();
            //////console.log($("#" + this.options.focusElement));
            if (this.options.focusElement != null)
                $("#" + this.options.focusElement).focus();
        }
        // truong hop cap nhat khi chon subgrid
        if (this.options.funcUpdate != null) {
            this.options.parentBound.hide();
            this.options.funcUpdate.call(null, rowDT);
        }
        if (!isNaN(a) && !1 == this._trigger("rowClick", e, {
                $tr: g,
                rowIndxPage: a,
                rowIndx: b,
                rowData: this.pdata[a]
            }))return !1
    };
    c._onRightClickRow = function (e) {
        var g = l(e.currentTarget), a = parseInt(g.attr("pq-row-indx")), b = a + this.rowIndxOffset;
        if (!isNaN(a) && !1 == this._trigger("rowRightClick", e, {
                $tr: g,
                rowIndxPage: a,
                rowIndx: b,
                rowData: this.pdata[a]
            }))return !1
    };
    c._onDblClickRow = function (e) {
        var g = l(e.currentTarget), a = parseInt(g.attr("pq-row-indx")), b = this.getRowIndxOffset();
        if (!1 == this._trigger("rowDblClick", e, {
                $tr: g,
                rowIndxPage: a,
                rowIndx: a + b,
                rowData: this.pdata[a]
            }))return !1
    };
    c.getValueFromDataType = function (e, g, a) {
        if ("date" == g)return g = Date.parse(e), isNaN(g) ? "" : a ? g : e;
        if ("object" == g)return e;
        if ("integer" == g)g = parseInt(e); else if ("float" == g)g = parseFloat(e); else return "bool" == g ? (g = l.trim(e).toLowerCase(), 0 == g.length ? null : "true" == g || "yes" == g || "1" == g ? !0 : "false" == g || "no" == g || "0" == g ? !1 : Boolean(g)) : l.trim(e);
        return isNaN(g) || null == g ? null == e ? e : null : g
    };
    var b = function (e) {
        this.that =
            e
    }, d = b.prototype;
    d._isValidCell = function (e) {
        var g = this.that, a = e.column, b = a.validations;
        if (!b || !b.length)return {valid: !0};
        var d = e.value, k = a.dataType, f = function (e) {
            return g.getValueFromDataType(e, k, !0)
        };
        e = e.rowData;
        if (!e)throw"rowData required.";
        for (var c = 0; c < b.length; c++) {
            var n = b[c], h = n.type, l = !1, w = n.msg, x = n.value;
            if (!1 !== n.on && (null == d && "function" != typeof h ? l = !1 : "minLen" == h ? (d = f(d), x = f(x), d.length >= x && (l = !0)) : "nonEmpty" == h ? null != d && "" !== d && (l = !0) : "maxLen" == h ? (d = f(d), x = f(x), d.length <= x && (l = !0)) : "gt" ==
                h ? (d = f(d), x = f(x), d > x && (l = !0)) : "gte" == h ? (d = f(d), x = f(x), d >= x && (l = !0)) : "lt" == h ? (d = f(d), x = f(x), d < x && (l = !0)) : "lte" == h ? (d = f(d), x = f(x), d <= x && (l = !0)) : "neq" == h ? (d = f(d), x = f(x), d !== x && (l = !0)) : "regexp" == h ? (new RegExp(x)).test(d) && (l = !0) : "function" == typeof h ? (x = {
                    column: a,
                    value: d,
                    rowData: e,
                    msg: w
                }, !1 == h.call(g, x) ? (l = !1, x.msg != w && (w = x.msg)) : l = !0) : l = !0, !l))return {
                valid: !1,
                msg: w,
                column: a,
                warn: n.warn,
                dataIndx: a.dataIndx,
                validation: n
            }
        }
        return {valid: !0}
    };
    d.isValidCell = function (e) {
        var g = this.that, a = e.rowData, b = e.rowIndx,
            d = e.value, k = e.valueDef, f = e.column, c = e.focusInvalid, n = g.options, h = n.bootstrap, s = e.allowInvalid, w = f.dataIndx, x = n.validation, y = n.warning, m = n.editModel, A = m.invalidClass, C = m.warnClass, m = document.activeElement;
        if (e.checkEditable && !1 == g.isEditableCell({rowIndx: b, dataIndx: w}))return {valid: !0};
        e = this._isValidCell({column: f, value: d, rowData: a});
        var d = e.valid, f = e.warn, E = e.msg;
        if (d)g.data({rowData: a, dataIndx: w, data: "pq_valid"}) && (g.removeClass({
            rowData: a,
            rowIndx: b,
            dataIndx: w,
            cls: C + " " + A
        }), g.removeData({
            rowData: a,
            dataIndx: w, data: "pq_valid"
        })); else var x = l.extend({}, f ? y : x, e.validation), F = x.css, K = x.cls, L = x.icon, N = x.style;
        if (s || f) {
            if (d)return {valid: !0};
            g.addClass({rowData: a, rowIndx: b, dataIndx: w, cls: f ? C : A});
            g.data({rowData: a, dataIndx: w, data: {pq_valid: {css: F, icon: L, style: N, msg: E, cls: K}}});
            return e
        }
        if (!d) {
            if (null == b && (a = g.getRowIndx({
                    rowData: a,
                    dataUF: !0
                }), b = a.rowIndx, null == b || a.uf))return e.uf = a.uf, e;
            if (c) {
                var H;
                if (!k)g.goToPage({rowIndx: b}), b = {
                    rowIndx: b,
                    dataIndx: w
                }, b = g.normalize(b), H = g.getCell(b), g["cell" == n.selectionModel.type ?
                    "setSelection" : "scrollCell"](b), g.focus(b); else if (l(m).hasClass("pq-editor-focus") && (k = n.editModel.indices)) {
                    n = k.rowIndx;
                    k = k.dataIndx;
                    if (null != b && b != n)throw"incorrect usage of isValid rowIndx: " + b;
                    if (w != k)throw"incorrect usage of isValid dataIndx: " + w;
                    g.editCell({rowIndx: n, dataIndx: w})
                }
                var G;
                if (H || (G = g.getEditCell()) && G.$cell) {
                    g = H || G.$cell;
                    g.attr("title", E);
                    H = "tooltip";
                    G = "open";
                    h.on && h.tooltip && (H = h.tooltip, G = "show");
                    try {
                        g[H]("destroy")
                    } catch (O) {
                    }
                    g[H]({
                        trigger: "manual", position: {
                            my: "left center+5",
                            at: "right center"
                        }, content: function () {
                            return ("" == L ? "" : "<span class='ui-icon " + L + " pq-tooltip-icon'></span>") + E
                        }, open: function (e, g) {
                            var a = g.tooltip;
                            K && a.addClass(K);
                            if (N) {
                                var b = a.attr("style");
                                a.attr("style", b + ";" + N)
                            }
                            F && a.tooltip.css(F)
                        }
                    })[H](G)
                }
            }
            return e
        }
        if (k && (G = g.getEditCell()) && G.$cell) {
            g = G.$cell;
            g.removeAttr("title");
            try {
                g.tooltip("destroy")
            } catch (I) {
            }
        }
        return {valid: !0}
    };
    c.isValid = function (e) {
        return this.iIsValid.isValid(e)
    };
    d.isValid = function (e) {
        e = e || {};
        var g = this.that, a = e.allowInvalid, b = e.focusInvalid,
            d = e.checkEditable, a = null == a ? !1 : a, k = e.dataIndx;
        if (null != k) {
            var f = g.columns[k], c = e.rowData || g.getRowData(e), n = e.hasOwnProperty("value"), g = n ? e.value : c[k], g = this.isValidCell({
                rowData: c,
                checkEditable: d,
                rowIndx: e.rowIndx,
                value: g,
                valueDef: n,
                column: f,
                allowInvalid: a,
                focusInvalid: b
            });
            return g.valid || g.warn ? {valid: !0} : g
        }
        if (null != e.rowIndx || null != e.rowIndxPage || null != e.rowData)for (var c = e.rowData || g.getRowData(e), h = g.colModel, n = [], l = 0, w = h.length; l < w; l++) {
            if (f = h[l], !f.hidden && (k = f.dataIndx, g = c[k], g = this.isValidCell({
                    rowData: c,
                    value: g, column: f, rowIndx: e.rowIndx, checkEditable: d, allowInvalid: a, focusInvalid: b
                }), !g.valid && !g.warn))if (a)n.push({rowData: c, dataIndx: k, column: f}); else return g
        } else {
            e = e.data ? e.data : g.options.dataModel.data;
            n = [];
            if (!e)return null;
            l = 0;
            for (w = e.length; l < w; l++) {
                c = e[l];
                if (d && (f = this.getRowIndx({rowData: c}).rowIndx, null == f || !1 == g.isEditableRow({
                        rowData: c,
                        rowIndx: f
                    })))continue;
                c = this.isValid({rowData: c, rowIndx: f, checkEditable: d, allowInvalid: a, focusInvalid: b});
                k = c.cells;
                if (!1 === a) {
                    if (!c.valid)return c
                } else k &&
                k.length && (n = n.concat(k))
            }
        }
        return a && n.length ? {cells: n, valid: !1} : {valid: !0}
    };
    c.isValidChange = function (e) {
        e = e || {};
        var g = this.getChanges(), g = g.updateList.concat(g.addList);
        e.data = g;
        return this.isValid(e)
    };
    c.isEditableRow = function (e) {
        var g = this.options.editable;
        return null != g ? "function" == typeof g ? g.call(this, this.normalize(e)) : g : !0
    };
    c.isEditableCell = function (e) {
        e = this.normalize(e);
        var g = e.column, a = g.editable;
        return e.checkVisible && g.hidden ? !1 : null != a ? "function" == typeof a ? a.call(this, e) : a : !0
    };
    c._onContMouseDown =
        function (e) {
            this.blurEditor({blurIfFocus: !0});
            if (!1 === this._trigger("contMouseDown", e, null))return !1;
            var g = l(e.target);
            e = g.closest(".pq-grid-cell,.pq-grid-number-cell");
            g = g.closest(".pq-grid-row");
            e.length || g.length || (e = this.$cont[0], e.setAttribute("tabindex", 0), e.focus());
            return !0
        };
    c._onCellMouseDown = function (e) {
        var g = l(e.currentTarget), a = this.getCellIndices({$td: g});
        if (null != a.rowIndx)return a = this.iMerge.getRootCell(a.rowIndx, a.colIndx, "o"), a = this.normalize(a), a.$td = g, !1 == this._trigger("cellMouseDown",
            e, a) ? !1 : !0
    };
    c._onRowMouseDown = function (e) {
        var g = l(e.currentTarget), a = this.getRowIndx({$tr: g});
        a.$tr = g;
        return !1 == this._trigger("rowMouseDown", e, a) ? !1 : !0
    };
    c._onCellMouseEnter = function (e, g) {
        var a = this.options, b = this.getCellIndices({$td: g});
        if (null != b.rowIndx && null != b.colIndx) {
            if (!1 === this._trigger("cellMouseEnter", e, b))return !1;
            "cell" == a.hoverMode && this.highlightCell(g);
            return !0
        }
    };
    c._onRowMouseEnter = function (e, g) {
        var a = this.options, b = this.getRowIndx({$tr: g}), d = b.rowIndxPage;
        if (!1 === this._trigger("rowMouseEnter",
                e, b))return !1;
        "row" == a.hoverMode && this.highlightRow(d);
        return !0
    };
    c._onCellMouseLeave = function (e, g) {
        "cell" == this.options.hoverMode && this.unHighlightCell(g);
        return !0
    };
    c._onRowMouseLeave = function (e, g) {
        var a = this.getRowIndx({$tr: g}).rowIndxPage;
        "row" == this.options.hoverMode && this.unHighlightRow(a);
        return !0
    };
    c.enableSelection = function () {
        this.element.removeClass("pq-disable-select").off("selectstart" + this.eventNamespace)
    };
    c.disableSelection = function () {
        this.element.addClass("pq-disable-select").on("selectstart" +
            this.eventNamespace, function (e) {
            if (e.target) {
                var g = l(e.target);
                if (g.is("input,textarea,select") || g.closest(".pq-native-select").length)return !0;
                e.preventDefault()
            }
        })
    };
    c._onClickCell = function (e) {
        var g = this.options.editModel, a = l(e.currentTarget), b = this.getCellIndices({$td: a}), b = this.iMerge.getRootCell(b.rowIndx, b.colIndx, "o"), b = this.normalize(b), d = b.rowIndx, k = b.colIndx;
        b.$td = a;
        b.evt = e;
        if (!1 == this._trigger("cellClick", e, b))return !1;
        null == k || 0 > k || 1 == g.clicksToEdit && this.isEditableRow({rowIndx: d}) && this.isEditableCell({
            colIndx: k,
            rowIndx: d
        }) && this.editCell(b)
    };
    c._onRightClickCell = function (e) {
        var g = l(e.currentTarget), a = this.getCellIndices({$td: g}), b = a.rowIndxPage, d = b + this.rowIndxOffset, a = a.colIndx, k = this.colModel;
        if (null != a && (k = k[a], !1 == this._trigger("cellRightClick", e, {
                $td: g,
                rowIndxPage: b,
                rowIndx: d,
                colIndx: a,
                dataIndx: k.dataIndx,
                column: k,
                rowData: this.pdata[b]
            })))return !1
    };
    c.highlightCell = function (e) {
        e.addClass("pq-grid-cell-hover ui-state-hover")
    };
    c.unHighlightCell = function (e) {
        e.removeClass("pq-grid-cell-hover ui-state-hover")
    };
    c.highlightRow = function (e) {
        isNaN(e) || (e = this.getRow({rowIndxPage: e})) && e.addClass("pq-grid-row-hover ui-state-hover")
    };
    c.unHighlightRow = function (e) {
        isNaN(e) || (e = this.getRow({rowIndxPage: e})) && e.removeClass("pq-grid-row-hover ui-state-hover")
    };
    c._getCreateEventData = function () {
        return {dataModel: this.options.dataModel, data: this.pdata, colModel: this.options.colModel}
    };
    c._findCellFromEvt = function (e) {
        e = l(e.target).closest(".pq-grid-cell");
        if (null == e || 0 == e.length)return {rowIndxPage: null, colIndx: null, $td: null};
        var g = this.getCellIndices({$td: e});
        g.$td = e;
        return g
    };
    c._initPager = function () {
        var e = this, g = e.options, a = g.pageModel;
        a.type && (g = {
            bootstrap: g.bootstrap, change: function (g, a) {
                e.blurEditor({force: !0});
                var b = e.options.pageModel;
                void 0 != a.curPage && (b.prevPage = b.curPage, b.curPage = a.curPage);
                void 0 != a.rPP && (b.rPP = a.rPP);
                "remote" == b.type ? e.remoteRequest({
                    callback: function () {
                        e._onDataAvailable({apply: !0, header: !1})
                    }
                }) : e.refreshView({header: !1, source: "pager"})
            }, refresh: function (g) {
                e.refreshDataAndView()
            }
        }, g = l.extend(g,
            a), this.pagerW = pq.pager(a.appendTo ? a.appendTo : this.$footer, g))
    };
    c.generateLoading = function () {
        this.$loading && this.$loading.remove();
        this.$loading = l("<div class='pq-loading'></div>").appendTo(this.element);
        l(["<div class='pq-loading-bg'></div><div class='pq-loading-mask ui-state-highlight'><div>", this.options.strLoading, "...</div></div>"].join("")).appendTo(this.$loading);
        this.$loading.find("div.pq-loading-bg").css("opacity", .2)
    };
    c._refreshLoadingString = function () {
        this.$loading.find("div.pq-loading-mask").children("div").html(this.options.strLoading)
    };
    c.showLoading = function () {
        null == this.showLoadingCounter && (this.showLoadingCounter = 0);
        this.showLoadingCounter++;
        this.$loading.show()
    };
    c.hideLoading = function () {
        0 < this.showLoadingCounter && this.showLoadingCounter--;
        this.showLoadingCounter || this.$loading.hide()
    };
    c.refreshDataFromDataModel = function (e) {
        e = e || {};
        var g = this.options, a = g.pageModel, b = g.dataModel.data, d, k = a.type;
        d = this._queueATriggers;
        for (var f in d) {
            var c = d[f];
            delete d[f];
            this._trigger(f, c.evt, c.ui)
        }
        this._trigger("beforeRefreshData", null, {});
        this.rowIndxOffset = 0;
        if ("local" == k){//THANHHUYEN fix error
            a.totalRecords = b.length;
            a.totalPages = g = Math.ceil(b.length / a.rPP);
            a.curPage > g && (a.curPage = g);
            g && !a.curPage && (a.curPage = 1);
            g = (a.curPage - 1) * a.rPP;
            d = a.curPage * a.rPP;
            if (d > b.length)d = b.length;
            this.pdata = b.slice(g, d);
        }else{
            if("remote" == k){
                a.totalPages = g = Math.ceil(a.totalRecords / a.rPP);
                a.curPage > g && (a.curPage = g);
                g && !a.curPage && (a.curPage = 1);
                d = a.rPP;
                if (d > b.length)d = b.length;
                this.pdata = b.slice(0, d);
            }else{
                this.pdata = g.backwardCompat ? b.slice(0) : b;
            }
        }
        if ("local" == k || "remote" == k)this.rowIndxOffset = a.rPP * (a.curPage - 1);
        this._trigger("dataReady", null, {source: e.source})
    };
    c.getQueryStringCRUD = function () {
        return ""
    };
    c.remoteRequest = function (e) {
        this.loading && this.xhr.abort();
        e = e || {};
        var g = this, a = "", b = "", d = this.options, k = !1, f = this.colModel, c = d.dataModel, n = d.sortModel, h = d.filterModel, s = d.pageModel;
        if ("function" == typeof c.getUrl)(f = c.getUrl.call(this, {
            colModel: f,
            dataModel: c,
            sortModel: n,
            groupModel: d.groupModel,
            pageModel: s,
            filterModel: h
        })) && f.url && (a = f.url), f && f.data && (b = f.data); else if ("string" == typeof c.url) {
            var a = c.url,
                b = {}, d = {}, w = {};
            "remote" == n.type && (e.initBySort || this.sort({initByRemote: !0}), (n = this.iSort.getQueryStringSort()) && (b = {pq_sort: n}));
            "remote" == s.type && (w = {pq_curpage: s.curPage, pq_rpp: s.rPP});
            "local" != h.type && (h = this.iFilterData.getQueryStringFilter()) && (k = !0, d = {pq_filter: h});
            h = c.postData;
            s = c.postDataOnce;
            h && "function" == typeof h && (h = h.call(this, {colModel: f, dataModel: c}));
            b = l.extend({pq_datatype: c.dataType}, d, w, b, h, s)
        }
        a && (this.loading = !0, this.showLoading(), this.xhr = l.ajax({
            url: a,
            dataType: c.dataType,
            async: null ==
            c.async ? !0 : c.async,
            cache: c.cache,
            contentType: c.contentType,
            type: c.method,
            data: b,
            beforeSend: function (e, a) {
                if ("function" == typeof c.beforeSend)return c.beforeSend.call(g, e, a)
            },
            success: function (a, b, d) {
                g.onRemoteSuccess(a, b, d, k, e)
            },
            error: function (e, a, b) {
                g.hideLoading();
                g.loading = !1;
                if ("function" == typeof c.error)c.error.call(g, e, a, b); else if ("abort" != b)throw"Error : " + b;
            }
        }))
    };
    c.onRemoteSuccess = function (e, g, a, b, d) {
        var k = this.options, f = this.colModel, c = k.pageModel, k = k.dataModel;
        e = "function" == typeof k.getData ?
            k.getData.call(this, e, g, a) : e;
        k.data = e.data;
        "remote" == c.type && (null != e.curPage && (c.curPage = e.curPage), null != e.totalRecords && (c.totalRecords = e.totalRecords));
        this.hideLoading();
        this.loading = !1;
        this._trigger("load", null, {dataModel: k, colModel: f});
        b && (this._queueATriggers.filter = {ui: {}});
        d.callback && d.callback()
    };
    c._refreshTitle = function () {
        this.$title.html(this.options.title)
    };
    c._destroyDraggable = function () {
        var e = this.element, g = e.parent(".pq-wrapper");
        g.length && g.data("draggable") && (g.draggable("destroy"),
            this.$title.removeClass("pq-draggable pq-no-capture"), e.unwrap(".pq-wrapper"))
    };
    c._refreshDraggable = function () {
        var e = this.element, g = this.$title;
        this.options.draggable ? (g.addClass("pq-draggable pq-no-capture"), e.parent(".pq-wrapper").length || e.wrap("<div class='pq-wrapper' />"), e.parent(".pq-wrapper").draggable({handle: g})) : this._destroyDraggable()
    };
    c._refreshResizable = function () {
        var e = this, g = this.element, a = this.options, b = -1 < (a.width + "").indexOf("%"), d = -1 < (a.height + "").indexOf("%"), k = "auto" == a.width,
            f = "flex" == a.width, c = "flex" == a.height;
        if (!a.resizable || (c || d) && (f || b || k))this._destroyResizable(); else {
            var n = "e,s,se";
            if (c || d)n = "e"; else if (f || b || k)n = "s";
            b = !0;
            g.hasClass("ui-resizable") && (d = g.resizable("option", "handles"), n == d ? b = !1 : this._destroyResizable());
            b && g.resizable({
                helper: "ui-state-default",
                handles: n,
                minWidth: a.minWidth,
                minHeight: a.minHeight ? a.minHeight : 100,
                delay: 0,
                start: function (e, g) {
                    l(g.helper).css({opacity: .5, background: "#ccc", border: "1px solid steelblue"})
                },
                resize: function (e, g) {
                },
                stop: function (g,
                                b) {
                    var d = e.element, k = d[0], f = a.width, c = a.height, n = -1 < (f + "").indexOf("%"), B = -1 < (c + "").indexOf("%"), z = !1;
                    k.style.width = k.offsetWidth + 3 + "px";
                    k.style.height = k.offsetHeight + 3 + "px";
                    B || "flex" == c || (z = !0, a.height = k.offsetHeight);
                    n || "auto" == f || "flex" == f || (z = !0, a.width = k.offsetWidth);
                    e.refresh();
                    d.css("position", "relative");
                    z && l(window).trigger("resize")
                }
            })
        }
    };
    c._refreshAfterResize = function () {
        var e = this.options, g = e.width, a = e.height, e = -1 != (g + "").indexOf("%") ? !0 : !1, g = "auto" === g, a = -1 != (a + "").indexOf("%") ? !0 : !1;
        (e ||
        g || a) && this.refresh()
    };
    c.refresh = function (e) {
        this.iRefresh.refresh(e)
    };
    c.refreshView = function (e) {
        null != this.options.editModel.indices && this.blurEditor({force: !0});
        this.refreshDataFromDataModel(e);
        this.refresh(e)
    };
    c._refreshPager = function () {
        var e = this.options, g = e.pageModel, a = g.rPP, b = g.totalRecords;
        g.type ? (g = e.pageModel, this.pagerW || this._initPager(), this.pagerW.option(g), b > a ? this.$bottom.css("display", "") : e.showBottom || this.$bottom.css("display", "none")) : (this.pagerW && (this.pagerW.destroy(), this.pagerW =
            null), e.showBottom ? this.$bottom.css("display", "") : this.$bottom.css("display", "none"))
    };
    c.getInstance = function () {
        return {grid: this}
    };
    c.refreshDataAndView = function (e) {
        if ("remote" == this.options.dataModel.location) {
            var g = this;
            this.remoteRequest({
                callback: function () {
                    g._onDataAvailable(e)
                }
            })
        } else this._onDataAvailable(e)
    };
    c.getColIndx = function (e) {
        var g = e.dataIndx;
        e = e.column;
        var a;
        if (e)a = !0; else if (void 0 === g)throw"dataIndx / column NA";
        var b = this.colModel, d = b.length;
        if (a)for (g = 0; g < d; g++) {
            if (b[g] == e)return g
        } else if (g =
                this.colIndxs[g], null != g)return g;
        return -1
    };
    c.getColumn = function (e) {
        if (null == e.dataIndx)throw"dataIndx N/A";
        return this.columns[e.dataIndx]
    };
    c._generateCellRowOutline = function () {
        var e = this.options, g = e.editModel;
        if (this.$div_focus) {
            if (e.debug)throw"this.$div_focus already present assert failed";
        } else e = this.element, g.inline && (e = this.getCell(g.indices), e.css("padding", 0).empty()), this.$div_focus = l("<div class='pq-editor-outer'><div class='pq-editor-inner'></div></div>").appendTo(e), g = l.extend({all: !0},
            g.indices), g = this.getCell(g), g.css("height", g[0].offsetHeight), g.empty(), this.refreshEditorPos()
    };
    c._removeEditOutline = function (e) {
        if (this.$div_focus) {
            e = this.$div_focus.find(".pq-editor-focus");
            e.hasClass("hasDatepicker") && e.datepicker("hide").datepicker("destroy");
            if (e[0] == document.activeElement) {
                var g = this._blurEditMode;
                this._blurEditMode = !0;
                e.blur();
                this._blurEditMode = g
            }
            this.$div_focus.remove();
            delete this.$div_focus;
            e = this.options.editModel;
            g = l.extend({}, e.indices);
            e.indices = null;
            g.rowData = void 0;
            this.refreshCell(g)
        }
    };
    c.refreshEditorPos = function () {
        var e = this.options.editModel, g = e.cellBorderWidth, a = this.$div_focus, b = this.getCell(e.indices);
        if (!b || !b.length)return !1;
        var e = b[0].offsetWidth, d = b[0].offsetHeight, k = this.element.offset(), b = b.offset();
        a.css({height: d, width: e - 1, borderWidth: g, left: b.left - k.left - 1, top: b.top - k.top - 1})
    };
    c.setEditorPosTimer = function () {
        var e = this, g = this.options;
        this._refreshEditorPosTimer && (window.clearInterval(this._refreshEditorPosTimer), this._refreshEditorPosTimer = null);
        this._refreshEditorPosTimer = window.setInterval(function () {
            g.editModel.indices && e.refreshEditorPos()
        }, 200)
    };
    c.get$Tbl = function (e, g) {
        var a = this.$tbl, b = [];
        if (a && a.length) {
            var d = this.pqpanes, k = this.options, f = k.freezeRows, k = k.freezeCols;
            d.h && d.v ? null == g ? e >= f ? b.push(a[2], a[3]) : b.push(a[0], a[1]) : b = g >= k && e >= f ? a[3] : g < k && e >= f ? a[2] : g >= k && e < f ? a[1] : a[0] : b = d.v ? null == g ? a : g >= k ? a[1] : a[0] : d.h ? e >= f ? a[1] : a[0] : a[0];
            if (b)return l(b)
        }
    };
    c.scrollCell = function (e) {
        this.scrollRow(e);
        this.scrollColumn(e)
    };
    c.scrollY = function (e) {
        this.vscroll.option("cur_pos",
            e);
        this.vscroll.scroll()
    };
    c.scrollRow = function (e) {
        var g = this.options;
        e = this.normalize(e);
        var a = e.rowIndxPage, b = e.rowData;
        if (!this.pdata || a >= this.pdata.length || !b || b.pq_hidden)return !1;
        g.virtualY ? this._scrollRowVirtual(e) : this.iMouseSelection.scrollRowNonVirtual(e)
    };
    c._scrollRowVirtual = function (e) {
        var g = this.options, a = e.rowIndxPage, b = this.iHierarchy ? !0 : !1, d = e.rowIndx;
        e = this.vscroll;
        var k = this.scrollCurPos, a = null == a ? d - this.rowIndxOffset : a, d = parseInt(g.freezeRows);
        if (!(a < d) && (g = this._calcCurPosFromRowIndxPage(a),
            null != g)) {
            g < k && (e.option("cur_pos", g), e.scroll());
            var f = this.get$Tbl(a);
            if (!f || !f.length)return null;
            var c = f.children("tbody").children("tr[pq-row-indx=" + a + "]"), n = a = c.last();
            1 < c.length && (n = c.first());
            var h = a[0], c = parseInt(f.css("marginTop"));
            if (void 0 == h)e.option("cur_pos", g), e.scroll(); else {
                var h = h.offsetTop + h.offsetHeight, l = this.iRefresh.getEContHt(), w = this._getSBHeight(), n = n.prev("tr");
                if (!n.hasClass("pq-row-hidden") && !n.hasClass("pq-last-frozen-row") && h > l - c) {
                    n = h - (l - w - c);
                    c = f.children().children("tr");
                    h = f = 0;
                    d ? (d = c.filter("tr.pq-last-frozen-row").last().next(), 0 == d.length && (d = c.filter("tr.pq-row-hidden").next())) : d = c.filter("tr.pq-row-hidden").next();
                    do {
                        if (!d.length)break;
                        f += d[0].offsetHeight;
                        if (d[0] == a[0])break; else if (b && !1 != d.hasClass("pq-detail-child") || h++, f >= n)break;
                        d = d.next()
                    } while (1);
                    b = k + h;
                    b > g && (b = g);
                    k = e.option("num_eles");
                    k < b + 1 && (k = b + 1);
                    e.option({num_eles: k, cur_pos: b});
                    e.scroll()
                }
            }
        }
    };
    c.blurEditor = function (e) {
        if (this.$div_focus) {
            var g = this.$div_focus.find(".pq-editor-focus");
            if (e && e.blurIfFocus)document.activeElement ==
            g[0] && g.blur(); else return g.triggerHandler("blur", e)
        }
    };
    c._scrollColumnVirtual = function (e) {
        var g = e.colIndx, a = this.hscroll, g = null == g ? this.colIndxs[e.dataIndx] : g;
        e = this.options.freezeCols;
        var b = this._calcRightEdgeCol(g).width, d = this.iRefresh.getEContWd();
        if (b > d) {
            for (var b = this.calcWidthCols(-1, g + 1) - d, d = this.colModel, k = d.length, f = 0, c = 0, n = e; n < k; n++) {
                var h = d[n];
                h.hidden || (f += h.outerWidth);
                if (n == g) {
                    c = n - e - this._calcNumHiddenUnFrozens(n);
                    break
                } else if (f >= b) {
                    c = n - e - this._calcNumHiddenUnFrozens(n) + 1;
                    break
                }
            }
            a.option("cur_pos",
                c);
            a.scroll();
            return !0
        }
        return g >= e && g < this.initH ? (g = g - e - this._calcNumHiddenUnFrozens(g), a.option("cur_pos", g), a.scroll(), !0) : !1
    };
    c.scrollColumn = function (e) {
        var g = this.options;
        return "flex" !== g.width || g.maxWidth ? g.virtualX ? this._scrollColumnVirtual(e) : this.iMouseSelection.scrollColumnNonVirtual(e) : !1
    };
    c.selection = function (e) {
        if (e) {
            var g = e.method, a, b = e.type;
            "row" == b ? a = this.iRows[g](e) : "cell" == b && (a = this.iCells[g](e));
            if ("add" == g || "remove" == g || "removeAll" == g)this.iSelection.dirty = !0, this.iSelection._trigger();
            return a
        }
        e = this.iSelection;
        e.isDirty() && e.refresh();
        return e
    };
    c.goToPage = function (e) {
        var g = this.options.pageModel;
        if ("local" == g.type || "remote" == g.type) {
            var a = e.rowIndx, b = g.rPP;
            e = null == e.page ? Math.ceil((a + 1) / b) : e.page;
            e != g.curPage && (g.curPage = e, "local" == g.type ? this.refreshView() : this.refreshDataAndView())
        }
    };
    c.setSelection = function (e) {
        //////console.log("setSelection");
        if (null == e)return this.iSelection.removeAll(), !0;
        var g = this.pdata;
        if (!g || !g.length)return !1;
        e = this.normalize(e);
        var g = e.rowIndx, a = e.rowIndxPage, b = e.colIndx;
        e.rowData &&
        null == g && (a = this.getRowIndx(e), e.rowIndx = g = a.rowIndx, e.rowIndxPage = a.rowIndxPage);
        if (null == g || 0 > g || 0 > b || b >= this.colModel.length)return !1;
        this.goToPage(e);
        a = g - this.rowIndxOffset;
        this.scrollRow({rowIndxPage: a});
        null == b ? this.range({r1: g}).select() : (this.scrollColumn({colIndx: b}), this.range({
            r1: g,
            c1: b
        }).select());
        !1 !== e.focus && this.focus({rowIndxPage: a, colIndx: null == b ? this.getFirstVisibleCI() : b})
    };
    c.getColModel = function () {
        return this.colModel
    };
    c.saveEditCell = function (e) {
        //////console.log("saveEditCell");
        var g = this.options, a = g.editModel;
        if (!a.indices)return null;
        var b = l.extend({}, a.indices);
        e = e ? e.evt : null;
        var d = b.rowIndxPage, a = d + this.rowIndxOffset, k = this.colModel[b.colIndx], b = k.dataIndx, f = this.pdata[d], c = g.dataModel, n;
        if (null == f)return null;
        if (null != d) {
            g = this.getEditCellData();
            if (l.isPlainObject(g)) {
                n = {};
                for (var h in g)n[h] = f[h]
            } else n = this.readCell(f, k);
            "<br>" == g && (g = "");
            null == n && "" === g && (g = null);
            h = {
                rowIndx: a,
                rowIndxPage: d,
                dataIndx: b,
                column: k,
                newVal: g,
                value: g,
                oldVal: n,
                rowData: f,
                dataModel: c
            };
            if (!1 === this._trigger("cellBeforeSave",
                    e, h))return !1;
            d = {};
            k = !1;
            l.isPlainObject(g) ? (d = g, k = !0) : d[b] = g;
            if (!1 === this.updateRow({
                    row: d,
                    rowIndx: a,
                    refresh: k,
                    silent: !0,
                    source: "edit",
                    checkEditable: !1
                }))return !1;
            this._trigger("cellSave", e, h);
            return !0
        }
    };
    c._addInvalid = function (e) {
    };
    c._digestData = function (e) {
        if (!1 === this._trigger("beforeValidate", null, e))return !1;
        var g = this.options, a = g.editModel, b = g.dataModel, d = b.data, k = g.colModel, f = g.pageModel, c = g.historyModel, n = e.validate, n = null == n ? a.validate : n, h = "remote" == f.type, l = e.allowInvalid, l = null == l ? a.allowInvalid :
            l, w = g.trackModel, a = e.track, a = null == a ? null == g.track ? w.on : g.track : a, x = e.history, x = null == x ? c.on : x, y = this.iHistory, c = this.iUCData, m = e.checkEditable, m = null == m ? !0 : m, A = e.checkEditableAdd, A = null == A ? m : A, w = this.saveCell, C = this.columns, E = this.colIndxs, F = e.source, K = this.rowIndxOffset, L = this.getValueFromDataType, N = e.rowList, H = N.length;
        d || (d = g.dataModel.data = []);
        for (var G = [], O = 0; O < H; O++) {
            var I = N[O], J = I.newRow, P = I.rowData, M = I.type, U = I.checkEditable, Q = I.rowIndx, V = I.oldRow;
            null == U && ("update" == M ? U = m : "add" == M && (U = A));
            if ("update" == M) {
                if (!V)throw"oldRow required while update";
                if (U && !0 !== g.editable && !1 === this.isEditableRow({rowIndx: Q, rowData: P}))continue
            } else if ("delete" == M) {
                G.push(I);
                continue
            }
            if ("add" == M)for (var T = 0, W = k.length; T < W; T++) {
                var R = k[T], S = R.dataIndx;
                J[S] = J[S]
            }
            for (S in J)if (R = C[S], T = E[S], R)if (U && null != R.editable && !1 === this.isEditableCell({
                    rowIndx: Q,
                    colIndx: T,
                    dataIndx: S
                }))delete J[S]; else {
                var X = R.dataType, T = L(J[S], X), W = V ? V[S] : void 0, W = void 0 !== W ? L(W, X) : void 0;
                J[S] = T;
                if (n && R.validations)if ("edit" == F && !1 ===
                    l) {
                    if (R = this.isValid({
                            focusInvalid: !0,
                            dataIndx: S,
                            rowIndx: Q,
                            value: T
                        }), !1 == R.valid && !R.warn)return !1
                } else R = this.iIsValid.isValidCell({
                    column: R,
                    rowData: "add" == M ? J : P,
                    allowInvalid: l,
                    value: T
                }), !1 === R.valid && (!1 !== l || R.warn || delete J[S]);
                "update" == M && T === W && (delete J[S], V && delete V[S])
            }
            if (J)if ("update" == M)for (S in J) {
                G.push(I);
                break
            } else G.push(I)
        }
        N = e.rowList = G;
        H = N.length;
        if (!H)return "edit" == F ? null : !1;
        x && (y.increment(), y.push({rowList: N}));
        for (O = 0; O < H; O++)if (I = N[O], M = I.type, J = I.newRow, Q = I.rowIndx, g = I.rowIndxPage,
                P = I.rowData, "update" == M)for (S in a && c.update({
            rowData: P,
            row: J,
            refresh: !1
        }), J)R = C[S], T = J[S], w(P, R, T); else if ("add" == M)a && c.add({rowData: J}), null == Q && null == g ? d.push(J) : (g = Q - K, g = h ? g : Q, d.splice(g, 0, J)), h && f.totalRecords++; else if ("delete" == M) {
            g = this.getRowIndx({rowData: P, dataUF: !0});
            k = g.uf;
            Q = g.rowIndx;
            if (a)c["delete"]({rowIndx: Q, rowData: P});
            g = Q - K;
            g = h ? g : Q;
            k ? b.dataUF.splice(Q, 1) : (g = d.splice(g, 1)) && g.length && h && f.totalRecords--
        }
        this._trigger("change", null, e);
        return !0
    };
    c.refreshColumn = function (e) {
        e = this.normalize(e);
        var a = this.initV, b = this.finalV, d = this.options.freezeRows, k = e.colIndx, f = e.dataIndx, c = e.column;
        e.skip = !0;
        for (var n = 0; n <= b; n++)n < a && n >= d && (n = a), e.rowIndxPage = n, this.refreshCell(e);
        this._trigger("refreshColumn", null, {column: c, colIndx: k, dataIndx: f});
        this.iRefresh.softRefresh()
    };
    c.refreshCell = function (e) {
        e = this.normalize(e);
        if (this.pdata) {
            var a = e.skip, b = e.rowIndx, d = e.rowIndxPage, k = e.colIndx, f = this.iMerge;
            if (e.rowData) {
                var c = this.getCell({all: !0, rowIndxPage: d, colIndx: k});
                if (c && 0 < c.length) {
                    var n = e;
                    f.ismergedCell(b,
                        k) && (n = f.getRootCell(b, k, "a"));
                    var b = this.iGenerateView.renderCell(n), h;
                    b && (c.replaceWith(b), (h = this._focusElement) && h.rowIndxPage == d && this.focus(), a || (this._trigger("refreshCell", null, e), this.iRefresh.softRefresh()))
                }
            }
        }
    };
    c.refreshRow = function (e) {
        e = this.normalize(e);
        if (this.pdata) {
            var a = e.rowIndx, b = e.rowIndxPage, d = this.options, k = d.freezeRows, f = e.rowData;
            if (!f || f.pq_hidden || b > this.finalV || b < this.initV && b >= k)return null;
            var c = this.getRow({all: !0, rowIndxPage: b}), n, h = [];
            this.iGenerateView.refreshRow(b,
                h);
            h = h.join("");
            if (c && c.length)c.replaceWith(h); else if (d.virtualY)if (b == this.finalV)this.$tbl.append(h); else if (b == this.initV)for (d = this.$tbl, c = 0; c < d.length; c++)l(d[c]).children("tbody").children(k ? ".pq-last-frozen-row" : "tr:first").after(h); else throw"refreshRow > rip not found"; else return !1;
            (n = this._focusElement) && n.rowIndxPage == b && this.focus();
            this._trigger("refreshRow", null, {rowData: f, rowIndx: a, rowIndxPage: b});
            !1 !== e.refresh && this.iRefresh.softRefresh();
            return !0
        }
    };
    c.quitEditMode = function (e) {
        if (!this._quitEditMode) {
            var a =
                !1, b = !1, d = !1, k = this.options.editModel, f = k.indices, c = void 0;
            this._quitEditMode = !0;
            e && (a = e.old, b = e.silent, d = e.fireOnly, c = e.evt);
            f && (b || a || this._trigger("editorEnd", c, f), d || (this._removeEditOutline(e), k.indices = null));
            this._quitEditMode = null
        }
    };
    c.getViewPortRowsIndx = function () {
        return {beginIndx: this.initV, endIndx: this.finalV}
    };
    c.getViewPortIndx = function () {
        return {initV: this.initV, finalV: this.finalV, initH: this.initH, finalH: this.finalH}
    };
    c.getRowIndxOffset = function () {
        return this.rowIndxOffset
    };
    c.getEditCell =
        function () {
            var e = this.options.editModel;
            if (e.indices) {
                var e = this.getCell(e.indices), a = this.$div_focus.children(".pq-editor-inner"), b = a.find(".pq-editor-focus");
                return {$td: e, $cell: a, $editor: b}
            }
            return {}
        };
    c.editCell = function (e) {
        e = this.normalize(e);
        var a = this.iMerge, b = e.rowIndx, d = e.colIndx;
        if (a.ismergedCell(b, d) && (a = a.getRootCell(b, d, "o"), a.rowIndx != e.rowIndx || a.colIndx != e.colIndx))return !1;
        this.scrollRow(e);
        this.scrollColumn(e);
        if ((a = this.getCell(e)) && a.length)return this._editCell(e)
    };
    c.getFirstEditableColIndx =
        function (e) {
            if (null == e.rowIndx)throw"rowIndx NA";
            if (!this.isEditableRow(e))return -1;
            for (var a = this.colModel, b = 0; b < a.length; b++)if (e.colIndx = b, this.isEditableCell(e) && !a[b].hidden)return b;
            return -1
        };
    c.editFirstCellInRow = function (e) {
        var a = this.rowIndxOffset, b = e.rowIndx;
        e = e.rowIndxPage;
        b = null == b ? e + a : b;
        e = null == e ? b - a : e;
        a = this.getFirstEditableColIndx({rowIndx: b});
        -1 != a && this.editCell({rowIndxPage: e, colIndx: a})
    };
    c._editCell = function (e) {
        var g = this.normalize(e), b = this;
        e = g.evt;
        var d = g.rowIndxPage, k = g.colIndx,
            f = b.pdata;
        if (!f || d >= f.length)return !1;
        var c = this.options, n = c.editModel, f = f[d], h = g.rowIndx, u = this.colModel[k], s = u.dataIndx, w = b.readCell(f, u), x = {
            rowIndx: h,
            rowIndxPage: d,
            cellData: w,
            rowData: f,
            dataIndx: s,
            colIndx: k,
            column: u
        }, y = u.editor, y = "function" == typeof y ? y.call(this, x) : y;
        void 0 === y && "function" == typeof c.geditor && (y = c.geditor.call(this, x));
        if (!1 !== y) {
            y && y.getData && (n._getData = y.getData);
            var m = c.editor, A = y ? l.extend({}, m, y) : m, c = !1;
            if (n.indices) {
                y = n.indices;
                if (y.rowIndxPage == d && y.colIndx == k) {
                    this.refreshEditorPos();
                    var C = this.$div_focus.find(".pq-editor-focus");
                    window.setTimeout(function () {
                        C.focus()
                    }, 0);
                    return !1
                }
                if (!1 === this.blurEditor({evt: e}))return !1;
                this.quitEditMode({evt: e})
            }
            n.indices = {rowIndxPage: d, rowIndx: h, colIndx: k, column: u, dataIndx: s};
            this._generateCellRowOutline();
            y = this.$div_focus.children(".pq-editor-inner");
            "right" == u.align ? y.addClass("pq-align-right") : "center" == u.align ? y.addClass("pq-align-center") : y.addClass("pq-align-left");
            x.$cell = y;
            var E, F = A.type, g = null == g.select ? A.select : g.select, K = A.init,
                L = A.valueIndx, N = A.dataMap, H = A.mapIndices, H = H ? H : {}, G = A.cls || "", G = "function" === typeof G ? G.call(this, x) : G;
            E = "pq-editor-focus " + G;
            var G = E + " pq-cell-editor ", O = A.attr || "", O = "function" === typeof O ? O.call(this, x) : O, I = A.style || "", I = (I = "function" === typeof I ? I.call(this, x) : I) ? "style='" + I + "'" : "";
            x.cls = E;
            x.attr = O;
            "function" == typeof F && (E = F.call(this, x)) && (F = E);
            m._type = F;
            "checkbox" == F ? (A = A.subtype, y.html("<input " + (w ? "checked='checked'" : "") + " class='" + G + "' " + O + " " + I + " type=checkbox name='" + s + "' />"), m = y.children("input"),
            "triple" == A && (m.pqval({val: w}), y.click(function (e) {
                l(this).children("input").pqval({incr: !0})
            }))) : "textarea" == F || "select" == F || "textbox" == F ? ("textarea" == F ? E = "<textarea class='" + G + "' " + O + " " + I + " name='" + s + "' ></textarea>" : "select" == F ? (m = A.options || [], "function" === typeof m && (m = m.call(this, x)), G = [O, " class='", G, "' ", I, " name='", s, "'"].join(""), E = a.select({
                options: m,
                attr: G,
                prepend: A.prepend,
                labelIndx: A.labelIndx,
                valueIndx: L,
                groupIndx: A.groupIndx,
                dataMap: N
            })) : E = "<input class='" + G + "' " + O + " " + I + " type=text name='" +
                s + "' />", l(E).appendTo(y).val("select" == F && null != L && (H[L] || this.columns[L]) ? H[L] ? f[H[L]] : f[L] : w)) : F && "contenteditable" != F || (y.html("<div contenteditable='true' tabindx='0' " + I + " " + O + " class='" + G + "'></div>"), y.children().html(w), c = !0);
            "function" == typeof K && K.call(this, x);
            var b = this, C = y.children(".pq-editor-focus"), J = n.filterKeys;
            (w = u.editModel) && void 0 !== w.filterKeys && (J = w.filterKeys);
            var P = {$cell: y, $editor: C, dataIndx: s, column: u, colIndx: k, rowIndx: h, rowIndxPage: d, rowData: f};
            n.indices = P;
            C.data({FK: J}).on("click",
                function (e) {
                    l(this).focus()
                }).on("keydown", function (e) {
                b.iKeyNav._keyDownInEdit(e)
            }).on("keypress", function (e) {
                return b.iKeyNav._keyPressInEdit(e, {FK: J})
            }).on("keyup", function (e) {
                return b.iKeyNav._keyUpInEdit(e, {FK: J})
            }).on("blur", function (e, a) {
                var g = b.options.editModel, d = g.onBlur, k = "save" == d, f = "validate" == d, c = g.cancelBlurCls, n = a ? a.force : !1;
                if (!b._quitEditMode && !b._blurEditMode && g.indices) {
                    g = l(e.target);
                    if (!n) {
                        if (!1 === b._trigger("editorBlur", e, P) || !d || c && g.hasClass(c))return;
                        if (g.hasClass("hasDatepicker")) {
                            if (g.datepicker("widget").is(":visible"))return !1
                        } else if (g.hasClass("ui-autocomplete-input")) {
                            if (g.autocomplete("widget").is(":visible"))return
                        } else if (g.hasClass("ui-multiselect")) {
                            if (l(".ui-multiselect-menu").is(":visible") ||
                                l(document.activeElement).closest(".ui-multiselect-menu").length)return
                        } else if (g.hasClass("pq-select-button") && (l(".pq-select-menu").is(":visible") || l(document.activeElement).closest(".pq-select-menu").length))return
                    }
                    b._blurEditMode = !0;
                    if (!b.saveEditCell({evt: e, silent: n || k || !f}) && !n && f)return b._deleteBlurEditMode(), !1;
                    b.quitEditMode({evt: e});
                    b._deleteBlurEditMode()
                }
            }).on("focus", function (e) {
                b._trigger("editorFocus", e, P)
            });
            b._trigger("editorBegin", e, P);
            C.focus();
            window.setTimeout(function () {
                !1 ===
                l(document.activeElement).hasClass("pq-editor-focus") && (b.element ? b.element.find(".pq-editor-focus") : l()).focus()
            }, 0);
            if (g)if (c)try {
                var M = C[0], U = document.createRange();
                U.selectNodeContents(M);
                var Q = window.getSelection();
                Q.removeAllRanges();
                Q.addRange(U)
            } catch (V) {
            } else C.select()
        }
    };
    c._deleteBlurEditMode = function (e) {
        var a = this;
        e = e ? e : {};
        a._blurEditMode && (e.timer ? window.setTimeout(function () {
            delete a._blurEditMode
        }, 0) : delete a._blurEditMode)
    };
    c.getRow = function (e) {
        var a = this.normalize(e);
        e = a.rowIndxPage;
        var a = a.all ? this.$tbl : this.get$Tbl(e), b = l();
        if (a && a.length) {
            var d = a.children("tbody");
            null != e && (b = d.children("tr[pq-row-indx=" + e + "]"), b.length > a.length && (b = b.filter(".pq-detail-master")))
        }
        return b
    };
    c.getCell = function (e) {
        var a = e.all, b = this.options, d = this.normalize(e);
        e = d.rowIndxPage;
        var k = d.rowIndx, f = d.colIndx, c = this.iMerge;
        if (c.ismergedCell(k, f)) {
            b = c.getRootCell(k, f, "a");
            k = c.getRootCell(k, f, "o");
            if (!(e === k.rowIndxPage && f === k.colIndx || e === b.rowIndxPage && f === b.colIndx))return l();
            e = b.rowIndxPage;
            f =
                k.colIndx
        } else if (e >= b.freezeRows && (e < this.initV || e > this.finalV) || f >= b.freezeCols && (f < this.initH || f > this.finalH) || !d.rowData || !d.column || d.rowData.pq_hidden || d.column.hidden)return l();
        return (a = a ? this.$tbl : this.get$Tbl(e, f)) && a.length ? a.children().children("tr[pq-row-indx=" + e + "]").children("[pq-col-indx=" + f + "]") : l()
    };
    c.getCellHeader = function (e) {
        var a = e.colIndx;
        e = e.dataIndx;
        a = null == a ? this.colIndxs[e] : a;
        e = this.$tbl_header;
        var b = this.options.freezeCols;
        return e ? (1 < e.length && (e = a >= b ? l(e[1]) : l(e[0])),
            a = e.find("[pq-col-indx=" + a + "].pq-grid-col-leaf")) : l()
    };
    c.getEditorIndices = function () {
        var e = this.options.editModel.indices;
        return e ? l.extend({}, e) : null
    };
    c.getEditCellData = function () {
        var e = this.options, a = e.editModel, b = a.indices;
        if (!b)return null;
        var d = b.colIndx, k = b.rowIndxPage, f = b.rowIndx, c = this.colModel[d], n = c.editor, h = e.editor, e = n ? l.extend({}, h, n) : h, u = e.valueIndx, s = e.labelIndx, n = (n = e.mapIndices) ? n : {}, w = c.dataIndx, x = this.$div_focus.children(".pq-editor-inner"), m, D = a._getData || e.getData;
        a._getData = void 0;
        if ("function" == typeof D)m = D.call(this, {
            $cell: x,
            rowData: b.rowData,
            dataIndx: w,
            rowIndx: f,
            rowIndxPage: k,
            column: c,
            colIndx: d
        }); else if (a = h._type, "checkbox" == a)m = x.children(), m = "triple" == e.subtype ? m.pqval() : m.is(":checked") ? !0 : !1; else if ("contenteditable" == a)m = x.children().html(); else if ((b = x.find('*[name="' + w + '"]')) && b.length)if ("select" == a && null != u)if (n[u] || this.columns[u]) {
            if (m = {}, m[n[u] ? n[u] : u] = b.val(), m[n[s] ? n[s] : s] = b.find("option:selected").text(), e = e.dataMap)if (a = b.find("option:selected").data("map"))for (b =
                                                                                                                                                                                  0; b < e.length; b++)d = e[b], m[n[d] ? n[d] : d] = a[d]
        } else m = b.val(); else m = b.val(); else(b = x.find(".pq-editor-focus")) && b.length && (m = b.val());
        return m
    };
    c.getCellIndices = function (e) {
        e = e.$td;
        if (null == e || 0 == e.length || e.closest(".pq-grid")[0] != this.element[0])return {};
        var a = e.parent("tr").attr("pq-row-indx"), b;
        null != a && (a = parseInt(a), b = a + this.rowIndxOffset);
        e = e.attr("pq-col-indx");
        null != e && (e = parseInt(e));
        return this.iMerge.getRootCell(b, e, "o")
    };
    c.getRowsByClass = function (e) {
        var a = this.options, b = "remote" == a.pageModel.type,
            d = this.rowIndxOffset, a = a.dataModel.data, k = [];
        if (null == a)return k;
        for (var f = 0, c = a.length; f < c; f++) {
            var n = a[f];
            if (n.pq_rowcls && (e.rowData = n, this.hasClass(e))) {
                var n = {rowData: n}, h = b ? f + d : f, l = h - d;
                n.rowIndx = h;
                n.rowIndxPage = l;
                k.push(n)
            }
        }
        return k
    };
    c.getCellsByClass = function (e) {
        var a = this.options, b = "remote" == a.pageModel.type, d = this.rowIndxOffset, a = a.dataModel.data, k = [];
        if (null == a)return k;
        for (var f = 0, c = a.length; f < c; f++) {
            var n = a[f], h = b ? f + d : f, l = n.pq_cellcls;
            if (l)for (var s in l)l = {
                rowData: n, rowIndx: h, dataIndx: s,
                cls: e.cls
            }, this.hasClass(l) && (l = this.normalize(l), k.push(l))
        }
        return k
    };
    c.data = function (e) {
        var a = e.dataIndx, b = e.colIndx, a = null != b ? this.colModel[b].dataIndx : a, b = e.data, d = null == b || "string" == typeof b ? !0 : !1;
        e = e.rowData || this.getRowData(e);
        if (!e)return {data: null};
        if (null == a) {
            a = e.pq_rowdata;
            if (d) {
                var k;
                null != a && (k = null == b ? a : a[b]);
                return {data: k}
            }
            b = l.extend(!0, e.pq_rowdata, b);
            e.pq_rowdata = b
        } else {
            var f = e.pq_celldata;
            if (d)return null != f && (a = f[a], k = null == b || null == a ? a : a[b]), {data: k};
            f || (e.pq_celldata = {});
            b = l.extend(!0,
                e.pq_celldata[a], b);
            e.pq_celldata[a] = b
        }
    };
    c.attr = function (e) {
        var a = e.rowIndx, b = e.dataIndx, d = e.colIndx, b = null != d ? this.colModel[d].dataIndx : b, d = e.attr, k = null == d || "string" == typeof d ? !0 : !1, f = this.rowIndxOffset, c = e.refresh;
        e = e.rowData || this.getRowData(e);
        if (!e)return {attr: null};
        k || !1 === c || null != a || (a = this.getRowIndx({rowData: e}).rowIndx);
        if (null == b) {
            b = e.pq_rowattr;
            if (k) {
                var h;
                null != b && (h = null == d ? b : b[d]);
                return {attr: h}
            }
            d = l.extend(!0, e.pq_rowattr, d);
            e.pq_rowattr = d;
            !1 !== c && null != a && (a = this.getRow({
                rowIndxPage: a -
                f
            })) && (b = n(d), a.attr(b))
        } else {
            var q = e.pq_cellattr;
            if (k)return null != q && (a = q[b], h = null == d || null == a ? a : a[d]), {attr: h};
            q || (e.pq_cellattr = {});
            d = l.extend(!0, e.pq_cellattr[b], d);
            e.pq_cellattr[b] = d;
            !1 !== c && null != a && (a = this.getCell({rowIndxPage: a - f, dataIndx: b})) && (b = n(d), a.attr(b))
        }
    };
    var n = function (e) {
        var a = {}, b;
        for (b in e) {
            var d = e[b];
            if (d)if ("title" == b)d = d.replace(/\"/g, "&quot;"), a[b] = d; else if ("style" == b && "object" == typeof d) {
                var k = [], f, c;
                for (c in d)(f = d[c]) && k.push(c + ":" + f);
                (d = k.join(";") + (k.length ? ";" :
                        "")) && (a[b] = d)
            } else"object" == typeof d && (d = JSON.stringify(d)), a[b] = d
        }
        return a
    };
    c.removeData = function (e) {
        var a = e.dataIndx, b = e.colIndx, a = null != b ? this.colModel[b].dataIndx : a, b = e.data, b = null == b ? [] : b, b = "string" == typeof b ? b.split(" ") : b, d = b.length, k = e.rowData || this.getRowData(e);
        if (k)if (null == a) {
            if (a = k.pq_rowdata) {
                if (d)for (e = 0; e < d; e++) {
                    var f = b[e];
                    delete a[f]
                }
                d && !l.isEmptyObject(a) || delete k.pq_rowdata
            }
        } else if ((k = k.pq_celldata) && k[a]) {
            var c = k[a];
            if (d)for (e = 0; e < d; e++)f = b[e], delete c[f];
            d && !l.isEmptyObject(c) || delete k[a]
        }
    };
    c.removeAttr = function (e) {
        var a = e.rowIndx, b = e.dataIndx, d = e.colIndx, b = null != d ? this.colModel[d].dataIndx : b, k = e.attr, k = null == k ? [] : k, k = "string" == typeof k ? k.split(" ") : k, f = k.length, d = a - this.rowIndxOffset, c = e.refresh, n = e.rowData || this.getRowData(e);
        if (n)if (!1 !== c && null == a && (a = this.getRowIndx({rowData: n}).rowIndx), null == b) {
            if (b = n.pq_rowattr) {
                if (f)for (e = 0; e < f; e++) {
                    var h = k[e];
                    delete b[h]
                } else for (h in b)k.push(h);
                f && !l.isEmptyObject(b) || delete n.pq_rowattr
            }
            !1 !== c && null != a && k.length && (k = k.join(" "),
            (a = this.getRow({rowIndxPage: d})) && a.removeAttr(k))
        } else {
            if ((n = n.pq_cellattr) && n[b]) {
                var u = n[b];
                if (f)for (e = 0; e < f; e++)h = k[e], delete u[h]; else for (h in u)k.push(h);
                f && !l.isEmptyObject(u) || delete n[b]
            }
            !1 !== c && null != a && k.length && (k = k.join(" "), (a = this.getCell({
                rowIndxPage: d,
                dataIndx: b
            })) && a.removeAttr(k))
        }
    };
    c.normalize = function (e) {
        var a = {}, b;
        for (b in e)a[b] = e[b];
        var d = a.rowIndx, k = a.rowIndxPage;
        e = a.dataIndx;
        b = a.colIndx;
        if (null != k || null != d) {
            var f = this.rowIndxOffset, d = null == d ? parseInt(k, 10) + f : d, k = null == k ?
            parseInt(d, 10) - f : k;
            a.rowIndx = d;
            a.rowIndxPage = k;
            a.rowData = a.rowData || this.getRowData(a)
        }
        if (null != b || null != e)d = this.colModel, e = null == e ? d[b] ? d[b].dataIndx : void 0 : e, b = null == b ? this.colIndxs[e] : b, a.column = d[b], a.colIndx = b, a.dataIndx = e;
        return a
    };
    c.addClass = function (e) {
        var a = this.normalize(e), b = a.rowIndxPage, d = a.dataIndx, k = pq.arrayUnique;
        e = a.cls;
        var f = a.refresh, c = a.rowData;
        if (c)if (!1 !== f && null == b && (b = this.getRowIndx({rowData: c}).rowIndxPage), null == d) {
            var d = c.pq_rowcls, n;
            n = k((d ? d + " " + e : e).split(/\s+/)).join(" ");
            c.pq_rowcls = n;
            !1 !== f && null != b && (b = this.getRow({rowIndxPage: b})) && b.addClass(e)
        } else {
            a = [];
            "function" != typeof d.push ? a.push(d) : a = d;
            var h = c.pq_cellcls;
            h || (h = c.pq_cellcls = {});
            for (var c = 0, l = a.length; c < l; c++)d = a[c], n = (n = h[d]) ? n + " " + e : e, n = k(n.split(/\s+/)).join(" "), h[d] = n, !1 !== f && null != b && (d = this.getCell({
                rowIndxPage: b,
                dataIndx: d
            })) && d.addClass(e)
        }
    };
    c.removeClass = function (e) {
        var a = this.normalize(e), b = a.rowIndx, d = a.rowData, k = a.dataIndx;
        e = a.cls;
        a = a.refresh;
        if (d) {
            var f = d.pq_cellcls, c = d.pq_rowcls;
            !1 !== a && null ==
            b && (b = this.getRowIndx({rowData: d}).rowIndx);
            if (null == k)c && (d.pq_rowcls = this._removeClass(c, e), null != b && !1 !== a && (b = this.getRow({rowIndx: b})) && b.removeClass(e)); else if (f) {
                c = [];
                "function" != typeof k.push ? c.push(k) : c = k;
                for (var n = 0, h = c.length; n < h; n++) {
                    var k = c[n], l = f[k];
                    l && (d.pq_cellcls[k] = this._removeClass(l, e), null != b && !1 !== a && (k = this.getCell({
                        rowIndx: b,
                        dataIndx: k
                    })) && k.removeClass(e))
                }
            }
        }
    };
    c.hasClass = function (e) {
        var a = e.dataIndx, b = e.cls;
        e = this.getRowData(e);
        b = new RegExp("\\b" + b + "\\b");
        return e ? null ==
        a ? (a = e.pq_rowcls) && b.test(a) ? !0 : !1 : (e = e.pq_cellcls) && e[a] && b.test(e[a]) ? !0 : !1 : null
    };
    c._removeClass = function (e, a) {
        if (e && a) {
            for (var b = e.split(/\s+/), d = a.split(/\s+/), k = [], f = 0, c = b.length; f < c; f++) {
                for (var n = b[f], h = !1, l = 0, s = d.length; l < s; l++)if (n === d[l]) {
                    h = !0;
                    break
                }
                h || k.push(n)
            }
            return 1 < k.length ? k.join(" ") : 1 === k.length ? k[0] : null
        }
    };
    c.getRowIndx = function (e) {
        var a = e.$tr, b = e.rowData, d = this.rowIndxOffset;
        if (b) {
            var k = this.options.dataModel, a = this.get_p_data(), f = !1;
            e = e.dataUF ? k.dataUF : null;
            k = !1;
            if (a)for (var c =
                0, n = a.length; c < n; c++)if (a[c] == b) {
                k = !0;
                break
            }
            if (!k && e)for (f = !0, c = 0, n = e.length; c < n; c++)if (e[c] == b) {
                k = !0;
                break
            }
            return k ? {rowIndxPage: f ? void 0 : c - d, uf: f, rowIndx: c, rowData: b} : {}
        }
        if (null == a || 0 == a.length)return {};
        b = a.attr("pq-row-indx");
        if (null == b)return {};
        b = parseInt(b);
        return {rowIndxPage: b, rowIndx: b + d}
    };
    c.search = function (e) {
        var a = this.options, b = e.row;
        e = e.first;
        for (var d = [], k = this.rowIndxOffset, f = "remote" == a.pageModel.type, a = a.dataModel.data, c = 0, n = a.length; c < n; c++) {
            var h = a[c], l = !0, s;
            for (s in b)b[s] !== h[s] &&
            (l = !1);
            if (l && (h = this.normalize({rowIndx: f ? c + k : c}), d.push(h), e))break
        }
        return d
    };
    var k = function (e) {
        this.options = e.options;
        this.that = e
    }, d = k.prototype;
    d._incrRowIndx = function (e, a) {
        var b = this.that, d = e;
        a = 1;
        for (var b = b.pdata, k = 0, f = e + 1, c = b.length; f < c && (b[f].pq_hidden || (k++, d = f, k != a)); f++);
        return d
    };
    d._decrRowIndx = function (e, a) {
        var b = e, d = this.that.pdata;
        a = 1;
        for (var k = 0, f = e - 1; 0 <= f && (d[f].pq_hidden || (k++, b = f, k != a)); f--);
        return b
    };
    d._decrRowIndx2 = function (e, a) {
        var b = this.that, d = e + b.rowIndxOffset, k = b.iMerge, b =
            b.pdata;
        if (k.ismergedCell(d, a)) {
            var f = k.getRootCell(d, a, "a"), d = k.getData(d, a, "proxy_cell");
            a = f.colIndx;
            a = d ? d.colIndx : a
        }
        for (d = e - 1; 0 <= d; d--)if (!b[d].pq_hidden) {
            e = d;
            break
        }
        return {rowIndxPage: e, colIndx: a}
    };
    d._incrRowIndx2 = function (a, b) {
        var d = this.that, k = a + d.rowIndxOffset, f = d.iMerge, c, d = d.pdata;
        if (c = f.ismergedCell(k, b)) {
            var n = f.getRootCell(k, b, "a"), k = f.getData(k, b, "proxy_cell");
            b = n.colIndx;
            a = c.rowspan ? a + c.rowspan - 1 : 0;
            b = k ? k.colIndx : b
        }
        k = a + 1;
        for (f = d.length; k < f; k++)if (!d[k].pq_hidden) {
            a = k;
            break
        }
        return {
            rowIndxPage: a,
            colIndx: b
        }
    };
    c.addColumn = function (a) {
        for (var b = a.colList || [{
                colIndx: a.colIndx,
                column: a.column
            }], d = !1 !== a.history, k = this.options.colModel, f = 0; f < b.length; f++) {
            var c = b[f].colIndx, n = b[f].column;
            void 0 == n.dataIndx && (n.dataIndx = Math.random());
            null == c && (c = b.colIndx = k.length);
            k.splice(c, 0, n)
        }
        this.iColModel.init();
        d && (this.iHistory.increment(), b.type = "add", this.iHistory.push({colList: b}));
        this._trigger("addColumn", null, {colList: b});
        !1 !== a.refresh && this.refreshView()
    };
    c.deleteColumn = function (a) {
        for (var b = a.colList ||
            [{colIndx: a.colIndx}], d = !1 !== a.history, k = this.options.colModel, f = b.length - 1; 0 <= f; f--) {
            var c = b[f], n = k.splice(c.colIndx, 1)[0];
            c.column = n
        }
        this.iColModel.init();
        d && (this.iHistory.increment(), b.type = "delete", this.iHistory.push({colList: b}));
        this._trigger("deleteColumn", null, {colList: b});
        !1 !== a.refresh && this.refreshView()
    };
    d._incrIndx = function (a, b, d) {
        var k = this.that, f = k.iMerge, c, n, h, l, u = k.pdata, s = k.rowIndxOffset, w = k[d ? "getLastVisibleRIP" : "getFirstVisibleRIP"](), m = k.colModel, y = m.length;
        if (null == b) {
            if (a ==
                w)return null;
            a = this[d ? "_incrRowIndx" : "_decrRowIndx"](a);
            return {rowIndxPage: a}
        }
        do {
            n = a + s;
            if (k = f.ismergedCell(n, b))!l && (c = f.getData(n, b, "proxy_cell")) && (h = c.rowIndx - s, u[h].pq_hidden || (a = h)), u[a].pq_hidden && (a = f.getRootCell(n, b).rowIndxPage), !l && d && (b += k && k.colspan ? k.colspan - 1 : 0);
            b = d ? b + 1 : b - 1;
            if (d && b >= y || !d && 0 > b) {
                if (a == w)return null;
                a = this[d ? "_incrRowIndx" : "_decrRowIndx"](a);
                b = d ? 0 : y - 1
            }
            l = m[b]
        } while (l && l.hidden);
        return {rowIndxPage: a, colIndx: b}
    };
    d._incrEditIndx = function (a, b, d) {
        var k = this.that, f = k.colModel,
            c = f.length, n = k.iMerge, h, l = k.rowIndxOffset, u = k[d ? "getLastVisibleRIP" : "getFirstVisibleRIP"]();
        do {
            var s = a + l;
            if (h = n.ismergedCell(s, b)) {
                if (s = n.getData(s, b, "proxy_edit_cell"))s = s.rowIndx, a = s - l;
                b = d ? b + h.colspan : b - 1
            } else b = d ? b + 1 : b - 1;
            if (d && b >= c || !d && 0 > b) {
                if (a == u)return null;
                do if (a = this[d ? "_incrRowIndx" : "_decrRowIndx"](a), b = k.isEditableRow({rowIndxPage: a}), a == u && !1 == b)return null; while (!1 == b);
                b = d ? 0 : c - 1
            }
            s = a + l;
            if (h = n.ismergedCell(s, b))a = n.getRootCell(s, b, "o"), n.setData(a.rowIndx, a.colIndx, {
                proxy_edit_cell: {
                    rowIndx: s,
                    colIndx: b
                }
            }), s = a.rowIndx, b = a.colIndx;
            h = f[b];
            var w = k.isEditableCell({
                rowIndx: s,
                colIndx: b,
                checkVisible: !0
            }), m = h.editor, m = "function" == typeof m ? m.call(k, k.normalize({rowIndx: s, colIndx: b})) : m;
            a = s - l
        } while (h && (h.hidden || !1 == w || !1 === m));
        return {rowIndxPage: a, colIndx: b}
    };
    d.getMergeCell = function (a, b) {
        var d = this.that, k = d.options, f = d.iMerge, c, n;
        f.ismergedCell(a, b) && (n = f.getRootCell(a, b, "o"), f.setData(n.rowIndx, n.colIndx, {
            proxy_cell: {
                rowIndx: a,
                colIndx: b
            }
        }), k.virtualY && (c = f.getRootCell(a, b, "a")));
        c || (a = this.getVisibleRowIndx(a),
            b = this.getVisibleColIndx(b), c = d.normalize({rowIndx: a, colIndx: b}));
        return c
    };
    d.getVisibleRowIndx = function (a) {
        for (var b = this.that, d = b.pdata.length, k = a - b.rowIndxOffset, f = b.getRowData({rowIndx: a}); f.pq_hidden && k < d - 1;)k++, a++, f = b.getRowData({rowIndx: a});
        return a
    };
    d.getVisibleColIndx = function (a) {
        for (var b = this.that.colModel, d = b.length, k = b[a]; k.hidden && a < d - 1;)a++, k = b[a];
        return a
    };
    c._onKeyPressDown = function (a) {
        if (0 < l(a.target).closest(".pq-grid-header").length)return !1 == this._trigger("headerKeyDown", a, null) ?
            !1 : !0;
        if (!1 === this.iKeyNav._bodyKeyPressDown(a) || !1 == this._trigger("keyDown", a, null))return !1
    };
    d._saveAndMove = function (a, b) {
        if (null == a)return b.preventDefault(), !1;
        var d = this.that, k = a.rowIndxPage, f = a.colIndx;
        d._blurEditMode = !0;
        if (!1 === d.saveEditCell({evt: b}) || !d.pdata)return d.pdata || d.quitEditMode(b), d._deleteBlurEditMode({
            timer: !0,
            msg: "_saveAndMove saveEditCell"
        }), b.preventDefault(), !1;
        d.quitEditMode(b);
        if (a.incr)var c = this[a.edit ? "_incrEditIndx" : "_incrIndx"](k, f, !b.shiftKey), k = c ? c.rowIndxPage :
            k, f = c ? c.colIndx : f;
        d.scrollRow({rowIndxPage: k});
        d.scrollColumn({colIndx: f});
        this.select({rowIndx: k + d.rowIndxOffset, colIndx: f, evt: b});
        a.edit && d._editCell({rowIndxPage: k, colIndx: f});
        d._deleteBlurEditMode({timer: !0, msg: "_saveAndMove"});
        b.preventDefault();
        return !1
    };
    d._keyPressInEdit = function (a, b) {
        var d = this.that, k = d.options.editModel.indices;
        b = b ? b : {};
        var f = b.FK, c = "Backspace Left Right Up Down Del Home End".split(" "), n = k.column.dataType;
        return a.key && -1 !== l.inArray(a.key, c) ? !0 : !1 === d._trigger("editorKeyPress",
            a, l.extend({}, k)) || f && ("float" == n || "integer" == n) && (d = "float" == n ? "0123456789.-" : "0123456789-", k = (k = a.charCode) ? k : a.keyCode, (k = String.fromCharCode(k)) && -1 == d.indexOf(k)) ? !1 : !0
    };
    d.getValText = function (a) {
        a = a[0].nodeName.toLowerCase();
        var b = "text";
        -1 != l.inArray(a, ["input", "textarea", "select"]) && (b = "val");
        return b
    };
    d._keyUpInEdit = function (a, b) {
        var d = this.that, k = d.options;
        b = b ? b : {};
        var f = b.FK, k = k.editModel, c = k.indices;
        d._trigger("editorKeyUp", a, l.extend({}, c));
        d = c.column.dataType;
        if (f && ("float" == d || "integer" ==
            d)) {
            var f = l(a.target), c = "integer" == d ? k.reInt : k.reFloat, k = this.getValText(f), n = f.data("oldVal"), h = f[k]();
            if (!1 == c.test(h))if (c.test(n))f[k](n); else if (d = "float" == d ? parseFloat(n) : parseInt(n), isNaN(d))f[k](0); else f[k](d)
        }
    };
    d._keyDownInEdit = function (a) {
        var b = this.that, d = b.options, k = d.editModel.indices;
        if (k) {
            var f = l(a.target), c = l.ui.keyCode, n = d.editModel, h = l.extend({}, k), k = h.rowIndxPage, d = h.colIndx, q = h.column.editModel, n = q ? l.extend({}, n, q) : n, q = this.getValText(f);
            f.data("oldVal", f[q]());
            if (!1 == b._trigger("editorKeyDown",
                    a, h))return !1;
            if (a.keyCode == c.TAB || a.keyCode == n.saveKey)return b = a.keyCode == c.TAB ? n.onTab : n.onSave, h = {
                rowIndxPage: k,
                colIndx: d,
                incr: b ? !0 : !1,
                edit: "nextEdit" == b
            }, this._saveAndMove(h, a);
            if (a.keyCode == c.ESCAPE)return b.quitEditMode({evt: a}), b.focus({
                rowIndxPage: k,
                colIndx: d
            }), a.preventDefault(), !1;
            if (a.keyCode == c.PAGE_UP || a.keyCode == c.PAGE_DOWN)return a.preventDefault(), !1;
            if (n.keyUpDown && !a.altKey) {
                if (a.keyCode == c.DOWN)return h = this._incrRowIndx2(k, d), this._saveAndMove(h, a);
                if (a.keyCode == c.UP)return h =
                    this._decrRowIndx2(k, d), this._saveAndMove(h, a)
            }
        }
    };
    d.select = function (a) {
        var b = this.that, d = this, k = a.rowIndx, f = a.colIndx, c = a.evt;
        a = this.getMergeCell(k, f);
        var k = a.rowIndx, f = a.colIndx, n = a.rowIndxPage;
        a = b.options;
        var h = b.iSelection, q = a.selectionModel, u = q.type, s = "row" == u, m = "cell" == u;
        (a.realFocus ? function (a) {
            clearTimeout(d.timeoutID);
            d.timeoutID = setTimeout(function () {
                a()
            }, 0)
        } : function (a) {
            a()
        })(function () {
            b.scrollCell({rowIndx: k, colIndx: f});
            var a = h.address();
            if (c.shiftKey && c.keyCode !== l.ui.keyCode.TAB && q.type &&
                "single" != q.mode && a.length) {
                var e = a[a.length - 1], d = e.firstR, t = e.firstC, u = e.type, E = !1;
                "column" == u ? (e.c1 = t, e.c2 = f, e.r1 = e.r2 = e.type = void 0) : "row" == u ? (e.r1 = d, e.r2 = k, e.c1 = e.c2 = e.type = void 0) : (a = {
                    r1: d,
                    r2: k,
                    c1: t,
                    c2: f,
                    firstR: d,
                    firstC: t
                }, E = !0);
                b.range(a, E).select()
            } else s ? b.range({r1: k, firstR: k}, !1).select() : m && b.range({
                r1: k,
                c1: f,
                firstR: k,
                firstC: f
            }).select();
            b.focus({rowIndxPage: n, colIndx: f})
        })
    };
    d._bodyKeyPressDown = function (a) {
        if (a.keyCode == 27) {//Khanh cheat //Hide sub form when keydown esc
            ////console.log("bound");
            this.options.parentBound.hide();
        }

        var b = this.that, d = b.rowIndxOffset, k, f, c;
        c = this.options;
        var n = b.iMerge, h = b._focusElement,
            q = c.selectionModel, u = c.editModel, s = a.ctrlKey || a.metaKey, m = l.ui.keyCode, x = a.keyCode;
        if (u.indices)b.$div_focus.find(".pq-cell-focus").focus(); else {
            if (h) {
                if (c = document.activeElement, "pq-grid-cont" != c.className && "TD" != c.nodeName.toUpperCase() && "pq-grid-excel" != c.id)return
            } else {
                h = l(a.target);
                if (!h.hasClass("pq-grid-cell"))return;
                h = b.getCellIndices({$td: h})
            }
            var y = b.normalize(h);
            f = y.rowIndxPage;
            k = y.rowIndx;
            c = y.colIndx;

            var D = b.pdata, A = y, h = !0;
            if (null != k && null != c && null != y.rowData) {
                n.ismergedCell(k, c) && (y = A =
                    n.getRootCell(k, c, "o"), f = y.rowIndxPage, k = y.rowIndx, c = y.colIndx, x == m.PAGE_UP || x == m.PAGE_DOWN || x == m.SPACE || x == m.HOME || x == m.END) && (n = n.getData(k, c, "proxy_cell")) && (n = n.rowIndx - d, D[n].pq_hidden || (f = n, k = f + d));
                // luan them
                if (a.keyCode == 13) {
                    ////console.log("keyEnder");
                    var el = this.options.synElement;
                    var rowDT = b.pdata[k];
                    //////console.log(rowDT);

                    for (i = 0; i < el.length; i++) {
                        temDI = el[i].dataIndx;

                        $("#" + el[i].elId).val(rowDT[temDI]);
                    }
                    if (this.options.funcUpdate != null)
                        this.options.funcUpdate.call(null, rowDT);
                    if (this.options.parentBound != undefined){
                        this.options.parentBound.hide();
                    }

                    if (this.options.focusElement != null){
                        ////////console.log("Focus"+this.options.focusElement);
                        $("#" + this.options.focusElement).focus();
                    }


                }
                if (!1 == b._trigger("cellKeyDown", a, A))return !1;
                if (x == m.LEFT || x == m.RIGHT || x == m.UP || x == m.DOWN || q.onTab && x == m.TAB)b = null, x == m.LEFT || x == m.TAB && a.shiftKey ? b = this._incrIndx(f, c, !1) : x == m.RIGHT || x == m.TAB && !a.shiftKey ? b = this._incrIndx(f, c, !0) : x == m.UP ? b = this._decrRowIndx2(f, c) : x == m.DOWN && (b = this._incrRowIndx2(f,
                    c)), b && (k = b.rowIndxPage + d, this.select({
                    rowIndx: k,
                    colIndx: b.colIndx,
                    evt: a
                })); else if (x == m.PAGE_DOWN || x == m.SPACE || x == m.PAGE_UP) {
                    if (b = this[x == m.PAGE_UP ? "pageUp" : "pageDown"](f))f = b.rowIndxPage, null != f && this.select({
                        rowIndx: f + d,
                        colIndx: c,
                        evt: a
                    })
                } else x == m.HOME ? (s ? k = b.getFirstVisibleRIP() + d : c = b.getFirstVisibleCI(), this.select({
                    rowIndx: k,
                    colIndx: c,
                    evt: a
                })) : x == m.END ? (s ? k = b.getLastVisibleRIP() + d : c = b.getLastVisibleCI(), this.select({
                    rowIndx: k,
                    colIndx: c,
                    evt: a
                })) : x == m.ENTER ? (f = A.rowIndxPage, c = A.colIndx, (q = b.getCell({
                    rowIndxPage: f,
                    colIndx: c
                })) && 0 < q.length && (k = f + d, d = b.isEditableRow({rowIndx: k}), m = b.isEditableCell({
                    rowIndx: k,
                    colIndx: c
                }), d && m ? b.editCell({
                    rowIndxPage: f,
                    colIndx: c
                }) : (b = q.find("button"), b.length && l(b[0]).click()))) : s && "65" == x ? (b = b.iSelection, "row" == q.type && "single" != q.mode ? b.selectAll({
                    type: "row",
                    all: q.all
                }) : "cell" == q.type && "single" != q.mode && b.selectAll({
                    type: "cell",
                    all: q.all
                })) : u.pressToEdit && (32 <= x && 127 >= x || 189 == x) && !s ? 46 == x ? b.clear() : (f = A.rowIndxPage, c = A.colIndx, (q = b.getCell({
                    rowIndxPage: f,
                    colIndx: c
                })) && 0 < q.length &&
                (k = f + d, d = b.isEditableRow({rowIndx: k}), m = b.isEditableCell({
                    rowIndx: k,
                    colIndx: c
                }), d && m && b.editCell({rowIndxPage: f, colIndx: c, select: !0})), h = !1) : h = !1;
                h && a.preventDefault()
            }
        }
    };
    d.incrPageSize = function () {
        for (var a = this.that, b = a.$tbl, d = b.children("tbody").children(".pq-grid-row"), b = parseInt(b.css("marginTop")), b = a.iRefresh.getEContHt() - b, k = d.length - 1; 0 <= k; k--) {
            var f = d[k];
            if (f.offsetTop < b)break
        }
        return {rowIndxPage: a.getRowIndx({$tr: l(f)}).rowIndxPage}
    };
    d.pageNonVirtual = function (a, b) {
        var d = this.that, k = d.$cont[0].offsetHeight -
            d._getSBHeight(), f = d.getRow({rowIndxPage: a}), c = 0, n = 0, h = l(f[0])[b]("tr.pq-grid-row"), q = h.length;
        if (0 < q) {
            do {
                f = h[n];
                c += f.offsetHeight;
                if (c >= k)break;
                n++
            } while (n < q);
            n = 0 < n ? n - 1 : n;
            do if (f = l(h[n]), a = d.getRowIndx({$tr: f}).rowIndxPage, null != a)break; else n--; while (0 <= n)
        }
        return a
    };
    d.pageDown = function (a) {
        var b = this.that, d = b.options, k = b.vscroll, f = k.option("cur_pos"), c = k.option("num_eles"), n = k.option("ratio");
        if (d.virtualY) {
            if (f < c - 1) {
                a = this.incrPageSize().rowIndxPage;
                var h = b._calcCurPosFromRowIndxPage(a);
                if (null ==
                    h)return;
                k.option("cur_pos", h);
                k.scroll()
            }
        } else null != a ? a = this.pageNonVirtual(a, "nextAll") : 1 > n && (d = b.iRefresh.getEContHt(), b = b.iMouseSelection, b.updateTableY(-1 * d), b.syncScrollBarVert());
        return {rowIndxPage: a, curPos: h}
    };
    d.pageUp = function (a) {
        var b = this.that, d = b.vscroll;
        if (b.options.virtualY) {
            if (0 < d.option("cur_pos")) {
                a = this.decrPageSize().rowIndxPage;
                var k = b._calcCurPosFromRowIndxPage(a);
                if (null == k)return;
                d.option("cur_pos", k);
                d.scroll()
            }
        } else d = d.option("ratio"), null != a ? a = this.pageNonVirtual(a, "prevAll") :
        0 < d && (d = b.iRefresh.getEContHt(), b = b.iMouseSelection, b.updateTableY(d), b.syncScrollBarVert());
        return {rowIndxPage: a, curPos: k}
    };
    d.decrPageSize = function () {
        var a = this.that, b = a.$tbl.children("tbody").children(".pq-grid-row"), d = a.options.freezeRows, k = a.pdata, f, c = 0;
        if (b.length) {
            var n;
            d ? (n = b.filter("tr.pq-last-frozen-row"), n.length && (n = n.next())) : 2 <= b.length && (n = l(b[1]));
            if (n && n.length)for (f = c = a.getRowIndx({$tr: n}).rowIndxPage, b = 0, a = a.pageSize - 3; 0 <= c && (k[c].pq_hidden || (b++, f = c, !(b >= a))); c--);
        }
        return {rowIndxPage: f}
    };
    c._calcNumHiddenFrozens = function () {
        for (var a = 0, b = this.options.freezeCols, d = 0; d < b; d++)this.colModel[d].hidden && a++;
        return a
    };
    c._calcNumHiddenUnFrozens = function (a) {
        var b = 0;
        a = null != a ? a : this.colModel.length;
        for (var d = this.options.freezeCols; d < a; d++)this.colModel[d].hidden && b++;
        return b
    };
    c._getSBHeight = function () {
        return this.iRefresh.getSBHeight()
    };
    c._getSBWidth = function () {
        return this.iRefresh.getSBWidth()
    };
    c.getFirstVisibleRIP = function (a) {
        var b = this.pdata;
        a = a ? this.initV : 0;
        for (var d = b.length; a < d; a++)if (!b[a].pq_hidden)return a
    };
    c.getLastVisibleRIP = function () {
        for (var a = this.pdata, b = a.length - 1; 0 <= b; b--)if (!a[b].pq_hidden)return b;
        return null
    };
    c.getFirstVisibleCI = function (a) {
        var b = this.colModel, d = b.length;
        for (a = a ? this.initH : 0; a < d; a++)if (!b[a].hidden)return a;
        return null
    };
    c.getLastVisibleCI = function () {
        for (var a = this.colModel, b = a.length - 1; 0 <= b; b--)if (!a[b].hidden)return b;
        return null
    };
    c.getTotalVisibleColumns = function () {
        for (var a = this.colModel, b = a.length, d = 0, k = 0; k < b; k++)a[k].hidden || d++;
        return d
    };
    c._calcCurPosFromRowIndxPage =
        function (a) {
            var b = this.pdata, d = this.options.freezeRows;
            if (a < d)return 0;
            for (var k = 0, f = d, c = b.length; d < c; d++) {
                var n = b[d];
                if (f == a)break;
                f++;
                n.pq_hidden || k++
            }
            return k >= c ? null : k
        };
    c._calcCurPosFromColIndx = function (a) {
        var b = this.colModel, d = this.options.freezeCols;
        if (a < d)return 0;
        for (var k = 0, f = d, c = b.length; d < c; d++) {
            var n = b[d];
            if (f == a)break;
            f++;
            n.hidden || k++
        }
        return k >= c ? null : k
    };
    c.calcWidthCols = function (a, b, d) {
        var k = 0, f = this.options.numberCell, c = this.colModel;
        -1 == a && (f.show && (k = d ? k + 1 * f.width : k + f.outerWidth),
            a = 0);
        if (d)for (; a < b; a++) {
            if ((d = c[a]) && !d.hidden) {
                if (!d._width)throw"assert failed";
                k += d._width + 0
            }
        } else for (; a < b; a++)(d = c[a]) && !d.hidden && (k += d.outerWidth);
        return k
    };
    c.calcHeightFrozenRows = function () {
        var a = this.$tbl, b = 0;
        a && a.length && (a = l(a[0]).find("tr.pq-last-frozen-row")) && a.length && (b = a[0], b = b.offsetTop + b.offsetHeight);
        return b
    };
    c._calcRightEdgeCol = function (a) {
        var b = 0, d = 0, k = this.colModel, f = this.initH, c = this.options, n = c.freezeCols, c = c.numberCell;
        c.show && (b += c.outerWidth, d++);
        for (c = 0; c <= a; c++) {
            c < f &&
            c >= n && (c = f);
            var h = k[c];
            h.hidden || (b += h.outerWidth, d++)
        }
        return {width: b, cols: d}
    };
    c._createHeader = function () {
        this.iHeader.createHeader();
        this.options.showHeader && this._trigger("createHeader")
    };
    c.createTable = function (a) {
        a.other = !0;
        var b = this.iGenerateView;
        b.generateView(a);
        b.scrollView()
    }
})(jQuery);
(function (l) {
    function m(a) {
        this.that = a
    }

    function h(a, b, k) {
        for (var e = 0; b < k; b++)!0 !== a[b].hidden && e++;
        return e
    }

    function c(a) {
        if (a.length)var b = a.css({
            tableLayout: "auto",
            width: ""
        }).addClass("pq-no-wrap").removeClass("pq-wrap").children("tbody").children(".pq-row-hidden").children("td").css("width", "");
        return b || l()
    }

    function a(a, b, k) {
        for (var e, g; k;) {
            e = a[k][b];
            g = a[k - 1][b];
            if (e != g)break;
            k--
        }
        return k
    }

    var f = l.paramquery, b = f._pqGrid.prototype;
    b.getHeadCell = function (a) {
        var b = a.attr("pq-col-indx");
        a = a.attr("pq-row-indx");
        var k, e, g, f;
        null != b && null != a && (b *= 1, a *= 1, e = this.headerCells[a][b]) && (f = e.colModel, g = e.leftPos);
        f && f.length && (k = !0);
        return {col: e, ci: b, o_ci: g, ri: a, isParent: k}
    };
    b.flex = function (a) {
        this.iResizeColumns.flex(a)
    };
    f.cHeader = m;
    b = m.prototype;
    b.createHeader = function () {
        var a = this.that, b = this, k = a.options, e = k.bootstrap, g = (e.on ? e.thead : "") + " pq-grid-header-table ", f = k.ui, c = e.on ? "" : f.header, h = k.hwrap, e = a.pqpanes, r = parseInt(k.freezeCols), p = k.numberCell, f = a.colModel, v = k.sortModel, q = a.depth, m = k.virtualX, s = a.iGenerateView.colDef,
            w = a.initH, x = a.finalH, y = a.headerCells, D = a.$header_o;
        D.empty();
        if (null != x)if (!1 === k.showHeader)D.css("display", "none"); else {
            D.css("display", "");
            k = ["<table class='" + (h ? g + "pq-wrap " : g + "pq-no-wrap ") + "' >"];
            if (1 <= q) {
                k.push("<tr class='pq-row-hidden'>");
                p.show && k.push("<td style='width:" + p.width + "px;' ></td>");
                for (var h = 0, A = s.length; h < A; h++) {
                    var C = s[h], g = C.colIndx;
                    k.push("<td style='width:" + C.column.outerWidth + "px;' pq-col-indx=" + g + "></td>")
                }
                k.push("</tr>")
            }
            for (s = 0; s < q; s++) {
                k.push("<tr class='pq-grid-title-row'>");
                0 == s && p.show && k.push(["<th pq-col-indx='-1' class='pq-grid-number-col' rowspan='", q, "'><div class='pq-td-div'>", p.title ? p.title : "&nbsp;", "</div></th>"].join(""));
                for (g = 0; g <= x; g++) {
                    if (g < w && g >= r && m && (g = w, g > x))throw"initH>finalH";
                    b.createHeaderCell(s, g, y, k, "pq-grid-col ", r, w, q, v)
                }
                k.push("</tr>")
            }
            a.ovCreateHeader(k, "pq-grid-col ");
            k.push("</table>");
            r = k.join("");
            D[0].innerHTML = e.vH ? ["<span class='pq-grid-header pq-grid-header-left ", c, "'><div class='pq-grid-header-inner'>", r, "</div></span><span class='pq-grid-header ",
                c, "'><div class='pq-grid-header-inner'>", r, "</div></span>"].join("") : ["<span class='pq-grid-header ", c, "'><div class='pq-grid-header-inner'>", r, "</div></span>"].join("");
            c = a.$header = D.children(".pq-grid-header");
            D = c.children(".pq-grid-header-inner");
            a.$tbl_header = D.children("table");
            a.$header_left = l(c[0]);
            a.$header_left_inner = l(D[0]);
            e.vH && (a.$header_right = l(c[1]), a.$header_right_inner = l(D[1]));
            c.click(function (a) {
                return b._onHeaderClick(a)
            });
            b._refreshResizeColumn(w, x, f);
            a._trigger("refreshHeader",
                null, null)
        }
    };
    b._onHeaderClick = function (a) {
        var b = this.that, k;
        k = b.iDragColumns;
        if (!k || "stop" == k.status) {
            k = l(a.target);
            if (k.is("input,label"))return !0;
            k = k.closest(".pq-grid-col");
            if (k.length && (k = b.getHeadCell(k), (b = k.col) && !k.isParent))return this._onHeaderCellClick(b, k.ci, a)
        }
    };
    b.createHeaderCell = function (a, b, k, e, g, c, B, l, r) {
        var p = this.that, v = p.options.sheet, q = k[a][b], m = p.colModel, s = q.colSpan;
        if (!(q.hidden || 0 === s || 0 < a && q == k[a - 1][b])) {
            if (0 < b && q == k[a][b - 1]) {
                if (b > B)return;
                a:{
                    k = k[a];
                    for (var w = 0; w < k.length; w++)if (k[w] ==
                        q) {
                        k = w;
                        break a
                    }
                    k = void 0
                }
                if (k < c)return;
                s -= h(m, k, b)
            } else c && b < c && b + s > c && (s -= h(m, c, B), m = h(m, b, c), s = Math.max(s, m));
            m = q.halign || q.align;
            k = q.cls;
            g = [g];
            var w = q.title, x = q.type, w = "function" == typeof w ? w.call(p, {
                column: q,
                colIndx: b,
                dataIndx: q.dataIndx
            }) : w, w = v ? f.toLetter(b) : w, w = null != w ? w : "checkbox" == x && q.cb.header ? "<input type='checkbox'/>" : q.dataIndx;
            q.pqtitle = w;
            m && g.push("pq-align-" + m);
            b == c - 1 && 1 == l && g.push("pq-last-frozen-col");
            b <= c - 1 ? g.push("pq-left-col") : b >= B && g.push("pq-right-col");
            k && g.push(k);
            null != q.colModel &&
            0 != q.colModel.length || g.push("pq-grid-col-leaf");
            c = r.space ? "pq-space" : "";
            e.push(["<th  ", "pq-col-indx=" + b, " ", "pq-row-indx=" + a, "  class='", g.join(" "), "' rowspan=", q.rowSpan, " colspan=", s, "><div class='pq-td-div'>", w, "<span class='pq-col-sort-icon ", c, "'></span>", r.number ? "<span class='pq-col-sort-count " + c + "'></span>" : "", "</div></th>"].join(""))
        }
    };
    b._onHeaderCellClick = function (a, b, k) {
        var e = this.that, g = e.options, f = g.sortModel, c = a.dataIndx;
        !1 !== e._trigger("headerCellClick", k, {column: a, colIndx: b, dataIndx: c}) &&
        (g.selectionModel.column && -1 == k.target.className.indexOf("pq-td-div") ? (g = {
            c1: b,
            firstC: b
        }, a = e.iSelection.address(), k.shiftKey && ((k = a.length) && "column" == a[k - 1].type && (k = a[k - 1], k.c1 = k.firstC, k.c2 = b, k.r1 = k.r2 = k.type = void 0), g = a), e.range(g, !1).select(), e.focus({
            rowIndxPage: e.getFirstVisibleRIP(!0),
            colIndx: b
        })) : f.on && !1 != a.sortable && (f.multiKey && (f.single = !k[f.multiKey]), e.sort({
            sorter: [{dataIndx: c}],
            addon: !0,
            evt: k
        })))
    };
    b._refreshResizeColumn = function (a, b, k) {
        a = this.that;
        k = a.options;
        b = k.filterModel.ficon ?
            !0 : !1;
        var e = k.numberCell;
        k = parseInt(k.freezeCols);
        var g = [], f = [], c = a.pqpanes.vH, h = 0, l = 0;
        e.show && (h = e.outerWidth, e.resizable && g.push("<div pq-col-indx='-1' style='left:", h - 5, "px;'", " class='pq-grid-col-resize-handle'>&nbsp;</div>"));
        for (var e = a.iGenerateView.colDef, p = 0, v = e.length; p < v; p++) {
            var l = e[p], q = l.colIndx, l = l.column, m = l.ficon, s = m || null == m && b, m = g, h = h + l.outerWidth;
            if (!1 !== l.resizable || s)c && q >= k && (m = f), l = h - 5, m.push("<div pq-col-indx='", q, "' style='left:", l, "px;'", " class='pq-grid-col-resize-handle'>&nbsp;</div>")
        }
        f.length &&
        a.$header_right_inner.append(f.join(""));
        a.$header_left_inner.append(g.join(""))
    };
    b.refreshHeaderSortIcons = function () {
        var a = this.that, b = a.options, k = b.bootstrap, b = b.ui, e = a.$header;
        if (e) {
            var g = a.iSort.getSorter(), f = g.length, c = !1;
            a.options.sortModel.number && 1 < f && (c = !0);
            for (var h = 0; h < f; h++) {
                var l = g[h], p = a.getColIndx({dataIndx: l.dataIndx}), v = l.dir, l = k.on ? k.header_active : b.header_active + " pq-col-sort-" + ("up" == v ? "asc" : "desc"), v = k.on ? " glyphicon glyphicon-arrow-" + v : "ui-icon ui-icon-triangle-1-" + ("up" == v ?
                    "n" : "s"), p = e.find(".pq-grid-col-leaf[pq-col-indx=" + p + "]");
                p.addClass(l);
                p.find(".pq-col-sort-icon").addClass(v);
                c && p.find(".pq-col-sort-count").html(h + 1)
            }
        }
    };
    b = function (a) {
        this.that = a;
        var b = this;
        a.$header_o.on({
            mousedown: function (a) {
                if (!a.pq_composed) {
                    var d = l(a.target);
                    b.setDraggables(a);
                    a.pq_composed = !0;
                    a = l.Event("mousedown", a);
                    d.trigger(a)
                }
            }, dblclick: function (a) {
                b.doubleClick(a)
            }
        }, ".pq-grid-col-resize-handle");
        var k = a.options.flex;
        if (k.on && k.one)a.one("ready", function () {
            b.flex()
        })
    };
    f.cResizeColumns =
        b;
    b = b.prototype = new f.cClass;
    b.doubleClick = function (a) {
        var b = this.that.options, k = b.flex;
        a = l(a.target);
        a = parseInt(a.attr("pq-col-indx"));
        isNaN(a) || k.on && this.flex(k.all && !b.scrollModel.autoFit ? {} : {colIndx: [a]})
    };
    b.flex = function (a) {
        a = a || {};
        var b = this.that, k = b.element, e = b.options.numberCell, g = a.colIndx, f, h = a.dataIndx;
        a = null == a.refresh ? !0 : a.refresh;
        var z = !1, r = b.$tbl, p = b.$tbl_header, v = r && r.length ? l(r[0]).clone() : l(), q = b.tables && b.tables.length ? b.tables[0].$tbl : null, q = q ? l(q[0]).clone() : l(), m = p && p.length ?
            l(p[0]).clone() : l();
        v.find(".pq-merge-cell").each(function (a, b) {
            b.innerHTML = l(b).find(".pq-merge-inner")[0].innerHTML;
            b.style.whiteSpace = "noWrap"
        });
        if (null != h)for (g = [], p = 0, r = h.length; p < r; p++) {
            var s = b.colIndxs[h[p]];
            null != s && g.push(s)
        }
        null != g && (g.sort(function (a, b) {
            return a - b
        }), f = g.length);
        m.find("tr.pq-grid-header-search-row").remove();
        var h = c(v), s = c(q), w = c(m), v = l("<div class='pq-grid' style='width:1px;height:1px;position:absolute;left:0px;top:0px;'>").append(m).append(q).append(v);
        v.addClass(k.attr("class"));
        k.parent().append(v);
        k = e.show ? 0 : -1;
        e = b.iGenerateView.colDef;
        p = 0;
        for (r = e.length; p < r; p++) {
            q = e[p];
            m = q.colIndx;
            q = q.column;
            k++;
            if (g)if (g.length)if (g[0] === m)g.splice(0, 1); else continue; else break;
            var m = h[k], x = w[k], y = s[k], m = Math.max(m ? m.offsetWidth : 0, y ? y.offsetWidth : 0, x ? x.offsetWidth : 0) - 0 + 1;
            q._width !== m && (z = !0, q.width = m, 1 === f && (q._resized = !0))
        }
        v.remove();
        z && a && b.refresh({source: "flex"})
    };
    b.setDraggables = function (a) {
        var b = this, k, e, g;
        l(a.target).draggable({
            axis: "x", helper: function (a, e) {
                var d = l(a.target), k =
                    parseInt(d.attr("pq-col-indx"));
                b._setDragLimits(k);
                b._getDragHelper(a, e);
                return d
            }, start: function (a, e) {
                k = e.position.left;
                g = parseInt(b.$cl[0].style.left)
            }, drag: function (a, d) {
                e = d.position.left;
                b.$cl[0].style.left = g + (e - k) + "px"
            }, stop: function (a, e) {
                return b.resizeStop(a, e, k)
            }
        })
    };
    b._getDragHelper = function (a) {
        var b = this.that, k = parseInt(b.options.freezeCols);
        a = l(a.target);
        var e = b.$grid_center;
        a = parseInt(a.attr("pq-col-indx"));
        var g = e.outerHeight();
        this.$cl = l("<div class='pq-grid-drag-bar'></div>").appendTo(e);
        this.$clleft = l("<div class='pq-grid-drag-bar'></div>").appendTo(e);
        this.$cl.height(g);
        this.$clleft.height(g);
        e = l("[pq-col-indx=" + a + "]", b.$header)[0];
        g = e.offsetLeft;
        b.pqpanes.vH ? a >= k && (g -= b.$header[1].scrollLeft) : (g += b.$header[0].offsetLeft, g -= b.$header[0].scrollLeft);
        this.$clleft.css({left: g});
        g += e.offsetWidth;
        this.$cl.css({left: g})
    };
    b._setDragLimits = function (a) {
        if (!(0 > a)) {
            var b = this.that, k = b.colModel[a], e = b.$header_left;
            a >= b.options.freezeCols && b.pqpanes.vH && (e = b.$header_right);
            b = e.find("th[pq-col-indx='" +
                    a + "']").offset().left + k._minWidth;
            k = b + k._maxWidth - k._minWidth;
            e.find("div.pq-grid-col-resize-handle[pq-col-indx=" + a + "]").draggable("option", "containment", [b, 0, k, 0])
        }
    };
    b.resizeStop = function (a, b, k) {
        var e = this.that, g = e.colModel, f = e.options.numberCell;
        this.$clleft.remove();
        this.$cl.remove();
        k = b.position.left - k;
        b = l(b.helper);
        b = parseInt(b.attr("pq-col-indx"));
        if (-1 == b) {
            var g = null, c = parseInt(f.width);
            f.width = c + k
        } else g = g[b], c = parseInt(g.width), g.width = c + k, g._resized = !0;
        e.refresh();
        e._trigger("columnResize",
            a, {colIndx: b, column: g, dataIndx: g ? g.dataIndx : null, oldWidth: c, newWidth: g ? g.width : f.width})
    };
    b = function (a) {
        this.that = a;
        this.$drag_helper = null;
        var b = a.options.dragColumns, k = b.topIcon, e = b.bottomIcon;
        this.status = "stop";
        this.$arrowTop = l("<div class='pq-arrow-down ui-icon " + k + "'></div>").appendTo(a.element);
        this.$arrowBottom = l("<div class='pq-arrow-up ui-icon " + e + "' ></div>").appendTo(a.element);
        this.hideArrows();
        if (b && b.enabled)a.$header_o.on("mousedown", ".pq-grid-col", this.onColMouseDown(this, a))
    };
    f.cDragColumns =
        b;
    b = b.prototype;
    b.onColMouseDown = function (a, b) {
        return function (k) {
            var e, g, f;
            e = l(this);
            k.pq_composed || l(k.target).is("input,select,textarea") || (e = b.getHeadCell(e), f = (g = e.col) ? g.parent : null, !g || g.nodrag || g._nodrag || f && 1 == f.colSpan || !a.setDraggable(k, g, e) || (k.pq_composed = !0, e = l.Event("mousedown", k), l(k.target).trigger(e)))
        }
    };
    b.showFeedback = function (a, b) {
        var k = this.that, e = a[0], g = k.$grid_center[0].offsetTop, f = e.offsetLeft - e.offsetParent.offsetParent.offsetParent.scrollLeft + (b ? 0 : e.offsetWidth) - 8, k = g + k.$header[0].offsetHeight;
        this.$arrowTop.css({left: f, top: g + e.offsetTop - 16, display: ""});
        this.$arrowBottom.css({left: f, top: k, display: ""})
    };
    b.showArrows = function () {
        this.$arrowTop.show();
        this.$arrowBottom.show()
    };
    b.hideArrows = function () {
        this.$arrowTop.hide();
        this.$arrowBottom.hide()
    };
    b.updateDragHelper = function (a) {
        var b = this.that.options.dragColumns, k = b.acceptIcon, b = b.rejectIcon, e = this.$drag_helper;
        e && (a ? (e.children("span.pq-drag-icon").addClass(k).removeClass(b), e.removeClass("ui-state-error")) : (e.children("span.pq-drag-icon").removeClass(k).addClass(b),
            e.addClass("ui-state-error")))
    };
    b.setDraggable = function (a, b, k) {
        a = l(a.currentTarget);
        var e = this, g = e.that;
        if (!a.hasClass("ui-draggable"))return a.draggable({
            distance: 10,
            cursorAt: {top: -18, left: -10},
            zIndex: "1000",
            appendTo: g.element,
            revert: "invalid",
            helper: e.dragHelper(e, g, b),
            start: e.onStart(e, g, b, k),
            drag: e.onDrag(e, g),
            stop: function () {
                e.status = "stop";
                g.$header.find(".pq-grid-col-resize-handle").show();
                e.hideArrows()
            }
        }), !0
    };
    b.onStart = function (a, b, k, e) {
        return function (g) {
            if (!1 === b._trigger("columnDrag",
                    g.originalEvent, {column: k}))return !1;
            a.setDroppables(e)
        }
    };
    b.onDrag = function (a, b) {
        return function (k, e) {
            a.status = "drag";
            var g = l(".pq-drop-hover", b.$header);
            if (0 < g.length) {
                a.showArrows();
                a.updateDragHelper(!0);
                var f = g.width();
                k.clientX - g.offset().left + l(document).scrollLeft() < f / 2 ? (a.leftDrop = !0, a.showFeedback(g, !0)) : (a.leftDrop = !1, a.showFeedback(g, !1))
            } else a.hideArrows(), l(".pq-drop-hover", b.$top).length ? a.updateDragHelper(!0) : a.updateDragHelper()
        }
    };
    b.dragHelper = function (a, b, k) {
        var e = b.options.dragColumns.rejectIcon;
        return function () {
            a.status = "helper";
            b.$header.find(".pq-grid-col-resize-handle").hide();
            var g = l("<div class='pq-col-drag-helper ui-widget-content ui-corner-all panel panel-default' ><span class='pq-drag-icon ui-icon " + e + " glyphicon glyphicon-remove'></span>" + k.pqtitle + "</div>");
            a.$drag_helper = g;
            return g[0]
        }
    };
    b._columnIndexOf = function (a, b) {
        for (var k = 0, e = a.length; k < e; k++)if (a[k] == b)return k;
        return -1
    };
    b.setDroppables = function (a) {
        var b = this.that, k = a.col, e = a.ri;
        a = a.o_ci;
        var g = a + k.o_colspan, f, c, h, r, p;
        c =
            b.$header_left;
        var v, q = {
            hoverClass: "pq-drop-hover ui-state-highlight",
            accept: ".pq-grid-col",
            tolerance: "pointer",
            drop: this.onDrop()
        }, m = c.find(".pq-left-col");
        c = b.pqpanes.v || b.pqpanes.vH ? b.$header_right.find(".pq-right-col") : c.find(".pq-right-col");
        m = m.add(c);
        for (v = m.length; v--;)r = l(m[v]), p = r.hasClass("ui-droppable"), f = b.getHeadCell(r), h = f.col, c = f.ri, f = f.ci, h == k || h.nodrop || h._nodrop || e < c && f >= a && f < g ? p && r.droppable("destroy") : p || r.droppable(q)
    };
    b.onDrop = function () {
        var a = this, b = this.that;
        return function (k,
                         e) {
            if (!a.dropPending) {
                var g = 1 * e.draggable.attr("pq-col-indx"), f = 1 * e.draggable.attr("pq-row-indx"), c = l(this), h = 1 * c.attr("pq-col-indx"), c = 1 * c.attr("pq-row-indx"), r = a.moveColumn(g, h, a.leftDrop, f, c);
                a.dropPending = !0;
                window.setTimeout(function () {
                    b.iColModel.init();
                    !1 !== b._trigger("columnOrder", null, {
                        dataIndx: r.dataIndx,
                        column: r,
                        oldcolIndx: g,
                        colIndx: b.getColIndx({column: r})
                    }) && b.refresh();
                    a.dropPending = !1
                }, 0)
            }
        }
    };
    b.moveColumn = function (b, f, k, e, g) {
        var c = this.that, h = c.options.colModel, l = c.headerCells, c = c.depth -
            1;
        e = null == e ? a(l, b, c) : e;
        g = null == g ? a(l, f, c) : g;
        var c = l[g][f], r = e ? l[e - 1][b].colModel : h;
        f = g ? l[g - 1][f].colModel : h;
        b = this._columnIndexOf(r, l[e][b]);
        k = k ? 1 : 0;
        b = r.splice(b, 1)[0];
        k = this._columnIndexOf(f, c) + 1 - k;
        f.splice(k, 0, b);
        return b
    }
})(jQuery);
(function (l) {
    function m(c, a) {
        this.that = c;
        var f = this, b = c.options;
        this.type = "detail";
        this.refreshComplete = !0;
        this.detachView = !1;
        c.on("cellClick", function (a, b) {
            return f.toggle(a, b)
        }).on("cellKeyDown", function (a, b) {
            if (a.keyCode == l.ui.keyCode.ENTER)return f.toggle(a, b)
        }).on("refresh", function (a, b) {
            return f.aftertable()
        }).on("beforeTableView", function (a, b) {
            return f.beforeTableView(a, b)
        }).on("tableWidthChange", function (a, b) {
            return f.tableWidthChange(a, b)
        });
        a._render = function (a) {
            var f = b.detailModel, k = a.cellData;
            a = a.rowData;
            if (!a.pq_gsummary && !a.pq_gtitle)return f = k && k.show ? f.expandIcon : f.collapseIcon, "<div class='ui-icon " + f + "'></div>"
        }
    }

    l.paramquery.cHierarchy = m;
    var h = m.prototype = new l.paramquery.cClass;
    h.tableWidthChange = function () {
        if (this.refreshComplete) {
            this.refreshComplete = !1;
            for (var c = this.that.$tbl.children("tbody").children("tr.pq-detail-child").children("td.pq-detail-child"), a = 0, f = c.length; a < f; a++)for (var b = l(c[a]).find(".pq-grid"), d = 0, n = b.length; d < n; d++) {
                var k = l(b[d]);
                k.is(":visible") && k.pqGrid("onWindowResize")
            }
            this.refreshComplete = !0
        }
    };
    h.aftertable = function (c) {
        var a = this.that, f = a.options.detailModel.init, b = a.pdata;
        if (this.refreshComplete) {
            this.refreshComplete = !1;
            c = c ? c : a.$tbl.children("tbody").children("tr.pq-detail-child");
            for (var d = 0, n = c.length; d < n; d++) {
                var k = l(c[d]), e = k.attr("pq-row-indx"), g = b[e], e = !1, h = g.pq_detail.child;
                h || "function" != typeof f || (e = !0, h = f.call(a.element[0], {rowData: g}), g.pq_detail.child = h, g.pq_detail.height = 25);
                k = k.children("td.pq-detail-child");
                k.append(h);
                k = k.find(".pq-grid");
                h = 0;
                for (g = k.length; h < g; h++) {
                    var B =
                        l(k[h]);
                    e ? B.hasClass("pq-pending-refresh") && B.is(":visible") && (B.removeClass("pq-pending-refresh"), B.pqGrid("refresh")) : B.is(":visible") && B.pqGrid("onWindowResize")
                }
            }
            this.refreshComplete = !0;
            this.detachView = !1
        }
    };
    h.beforeTableView = function (c, a) {
        this.detachView || (this.detachInitView(), this.detachView = !0)
    };
    h.detachInitView = function (c) {
        var a = this.that.$tbl;
        if (a && a.length)for (c = c ? c : a.children("tbody").children("tr.pq-detail-child"), a = 0; a < c.length; a++)l(c[a]).children("td.pq-detail-child").children().detach()
    };
    h.toggle = function (c, a) {
        var f = this.that, b = a.column, d = a.rowData, n = a.rowIndx, k = this.type;
        d.pq_gtitle || d.pq_gsummary || !b || b.type !== k || (b = {
            rowIndx: n,
            focus: !0
        }, null == d.pq_detail ? f.rowExpand(b) : !1 === d.pq_detail.show ? f.rowExpand(b) : this.rowCollapse(b))
    };
    h.rowExpand = function (c) {
        this.normalize(c);
        var a = this.that, f = c.rowData, b = c.rowIndx, d = c.rowIndxPage, n = a.options.detailModel;
        if (null != f) {
            if (!1 === a._trigger("beforeRowExpand", null, c))return !1;
            null == f.pq_detail ? f.pq_detail = {show: !0} : !1 === f.pq_detail.show && (f.pq_detail.show = !0);
            n.cache || this.rowInvalidate(c);
            a.refreshRow({rowIndx: b});
            n = [];
            a.iGenerateView._generateDetailRow(f, d, n);
            f = a.getRow({rowIndxPage: d});
            f.after(n.join(""));
            this.aftertable(f.next());
            c.focus && a.getCell({rowIndx: b, dataIndx: "pq_detail"}).attr("tabindex", "0").focus();
            c.scrollRow && this.scrollRow({rowIndx: b})
        }
    };
    h.rowInvalidate = function (c) {
        c = this.that.getRowData(c);
        var a = c.pq_detail;
        if (a = a ? a.child : null)a.remove(), c.pq_detail.child = null, c.pq_detail.height = 0
    };
    h.normalize = function (c) {
        var a = this.that, f = c.rowIndx,
            b = c.rowIndxPage, d = a.rowIndxOffset;
        c.rowIndx = null == f ? b + d : f;
        c.rowIndxPage = null == b ? f - d : b;
        c.rowData = a.getRowData(c)
    };
    h.rowCollapse = function (c) {
        this.normalize(c);
        var a = this.that, f = a.options, b = c.rowData, d = c.rowIndx, n = c.rowIndxPage, k = f.detailModel;
        null != b && null != b.pq_detail && !0 === b.pq_detail.show && (k.cache || this.rowInvalidate(c), b.pq_detail.show = !1, f.virtualY ? a.refresh() : (f = a.getRow({rowIndxPage: n}).next("tr.pq-detail-child"), f.length && (this.detachInitView(f), f.remove(), a.refreshRow({rowIndx: d})), c.focus &&
        a.getCell({
            rowIndx: d,
            dataIndx: "pq_detail"
        }).attr("tabindex", "0").focus()), c.scrollRow && (d = c.rowIndx, this.scrollRow({rowIndx: d})))
    }
})(jQuery);
(function (l) {
    var m = function (h) {
        var c = this;
        c.that = h;
        h.on("dataReadyDone", function () {
            c.calcVisibleV()
        }).on("CMInit", function () {
            c.calcVisibleH()
        }).on("refresh", function () {
            c.summaryTable()
        })
    };
    l.paramquery.cRefresh = m;
    m = m.prototype;
    m._computeOuterWidths = function () {
        for (var h = this.that, c = h.options.numberCell, h = h.colModel, a = h.length, f = 0; f < a; f++) {
            var b = h[f];
            b.outerWidth = b._width + 0
        }
        c.show && (c.outerWidth = c.width)
    };
    m.autoFit = function () {
        var h = this.that, c = h.colModel, a = c.length, h = h.calcWidthCols(-1, a, !0), f = this.contWd -
            this.getSBWidth();
        if (h !== f) {
            for (var h = h - f, b, f = [], d = 0; d < a; d++) {
                var n = c[d], k = n._percent, e = n._resized;
                n.hidden || k || e || (0 > h ? (k = n._maxWidth - n._width) && f.push({
                    availWd: -1 * k,
                    colIndx: d
                }) : (k = n._width - n._minWidth) && f.push({availWd: k, colIndx: d}));
                e && (b = n, delete n._resized)
            }
            f.sort(function (a, b) {
                return a.availWd > b.availWd ? 1 : a.availWd < b.availWd ? -1 : 0
            });
            d = 0;
            for (a = f.length; d < a; d++) {
                var n = f[d], k = n.availWd, n = n.colIndx, e = Math.round(h / (a - d)), n = c[n], g;
                g = n._width;
                Math.abs(k) > Math.abs(e) ? (g -= e, h -= e) : (g -= k, h -= k);
                n.width =
                    n._width = g
            }
            0 != h && b && (g = b._width - h, g > b._maxWidth ? g = b._maxWidth : g < b._minWidth && (g = b._minWidth), b.width = b._width = g)
        }
    };
    m.autoLastColumn = function () {
        var h = this.that, c = h.colModel, a = c.length, f = h.options.freezeCols, b = this.contWd - this.getSBWidth(), d = h.calcWidthCols(-1, f, !0), b = b - d, d = !1, h = h.getLastVisibleCI();
        if (null != h && (h = c[h], !h._percent)) {
            for (var n = h._width, k, e = h._minWidth, g = h._maxWidth, a = a - 1; a >= f; a--) {
                var t = c[a];
                if (!t.hidden && (t = t._width + 0, b -= t, 0 > b)) {
                    d = !0;
                    k = n + b >= e ? n + b : n + t + b;
                    break
                }
            }
            d || (k = n + b);
            k > g ? k = g : k < e &&
            (k = e);
            h.width = h._width = k
        }
    };
    m.numericVal = function (h, c) {
        var a;
        a = -1 < (h + "").indexOf("%") ? parseInt(h) * c / 100 : parseInt(h);
        return Math.round(a)
    };
    m.refreshColumnWidths = function (h) {
        h = h || {};
        var c = this.that, a = c.options, f = a.numberCell, b = "flex" === a.width, d = c.colModel, n = a.scrollModel, k = n.lastColumn, n = n.autoFit, e = this.contWd, g = d.length, t = this.getSBWidth(), l = a._minColWidth, z = a._maxColWidth, r = 0;
        f.show && (f.width < f.minWidth && (f.width = f.minWidth), r = f.outerWidth = f.width);
        f = b ? null : e - t - r;
        l = Math.floor(this.numericVal(l, f));
        z = Math.ceil(this.numericVal(z, f));
        e = 0;
        if (!b && 5 > f || isNaN(f)) {
            if (a.debug)throw"availWidth N/A";
        } else {
            delete c.percentColumn;
            for (t = 0; t < g; t++)if (r = d[t], !r.hidden) {
                var p = r.width, m = -1 < (p + "").indexOf("%") ? !0 : null, q = r.minWidth, u = r.maxWidth, q = q ? this.numericVal(q, f) : l, u = u ? this.numericVal(u, f) : z;
                u < q && (u = q);
                if (void 0 != p) {
                    var s = 0;
                    !b && m ? (c.percentColumn = !0, r.resizable = !1, r._percent = !0, p = this.numericVal(p, f) - 0, s = Math.floor(p), e += p - s, 1 <= e && (s += 1, e -= 1)) : p && (s = parseInt(p));
                    s < q ? s = q : !b && s > u && (s = u);
                    r._width = s
                } else r._width =
                    q;
                m || (r.width = r._width);
                r._minWidth = q;
                r._maxWidth = b ? 1E3 : u
            }
            !1 === b && !1 !== h.refreshWidth && (n && this.autoFit(), "auto" === k && a.virtualX && this.autoLastColumn());
            this._computeOuterWidths()
        }
    };
    m.estRowsInViewPort = function () {
        var h = Math.ceil(this.contHt / this.rowHt);
        return this.that.pageSize = h
    };
    m._refreshFrozenLine = function () {
        var h = this.that, c = h.options, a = c.numberCell, f = h.$cont_o, b = c.freezeBorders, d = c.freezeCols, c = c.freezeRows;
        this.$freezeLine && this.$freezeLine.remove();
        this.$freezeLineH && this.$freezeLineH.remove();
        b && (d && (b = h.calcWidthCols(-1, d), isNaN(b) || 0 === b || 0 < b && a.show && b === a.width || (this.$freezeLine = l(["<div class='pqg-vert-frozen-line'  style = 'left:", b - 1, "px;' ></div>"].join("")).appendTo(f))), c && (h = h.$tbl)) && (h = h.children("tbody").children(".pq-last-frozen-row")[0]) && (this.$freezeLineH = l("<div class='pqg-horiz-frozen-line' style='top:" + (h.offsetTop + h.offsetHeight - 1 - 1) + "px;' ></div>").appendTo(f))
    };
    m.setScrollVNumEles = function (h) {
        var c = this.that;
        h = c.vscroll;
        var a = c.options;
        if (!a.maxHeight && "flex" ===
            a.height)return h.option("num_eles", 0), 0;
        var a = c.iHierarchy ? !0 : !1, f = parseInt(h.option("num_eles")), f = parseInt(h.option("cur_pos")), b = this.getEContHt(), d = c.pdata ? c.totalVisibleRows : 0, n, k = 0;
        c.$tbl && 0 < c.$tbl.length && (n = c.$tbl[c.$tbl.length - 1], k = n.scrollHeight, n = l(n));
        if (0 < k) {
            n = n.children().children("tr");
            for (var e = 0, c = 0, f = 1; f < n.length; f++)if (k = n[f], e += k.offsetHeight, e >= b) {
                a && l(k).hasClass("pq-detail-child") && (c = 1 < c ? c - 1 : 1);
                break
            } else a ? !1 === l(k).hasClass("pq-detail-child") && c++ : c++;
            f = d - c + 1
        } else f += 1;
        f > d && (f = d);
        e > b && a && f++;
        h.option("num_eles", f);
        return f
    };
    m._setScrollVLength = function (h) {
        h = this.that;
        var c = h.options;
        if ("flex" !== c.height || c.maxHeight) {
            var c = this.getSBHeight(), a = this.contHt - c + this.headerHt - 2;
            h.vscroll.widget().css("bottom", c);
            h.vscroll.option("length", a)
        }
    };
    m.setHeaderHeight = function () {
        var h = this.that, c = h.$header, a, f, b;
        if (c && c.length) {
            if (1 < c.length) {
                if (a = c[0].scrollHeight, f = c[1].scrollHeight, b = Math.max(a, f), a !== f) {
                    var d = l(c[0]).find(".pq-grid-header-search-row"), n = l(c[1]).find(".pq-grid-header-search-row");
                    d.length && (d.css("height", ""), n.css("height", ""), a = c[0].scrollHeight, f = c[1].scrollHeight, b = Math.max(a, f), a < b ? d.height(n[0].scrollHeight) : n.height(d[0].scrollHeight))
                }
            } else b = a = c[0].scrollHeight;
            h.$header_o.height(b - 3);
            this.headerHt = b - 1
        } else h.$header_o.height(0), this.headerHt = 0
    };
    m.initContHeight = function () {
        var h = this.that, c = h.options;
        if ("flex" != c.height || c.maxHeight)this.contHt = this.height - (c.showHeader ? this.rowHt : 0) - (c.showTop ? h.$top[0].offsetHeight : 0) - (c.showBottom ? h.$bottom[0].offsetHeight : 0)
    };
    m.initContWidth = function () {
        this.contWd = this.width
    };
    m.setContHeight = function (h) {
        h = this.that;
        var c = h.$top, a = this.height - h.$header_o[0].offsetHeight, f;
        if (h.options.showTop) {
            f = c[0].offsetHeight;
            var b = parseInt;
            c = c[0];
            window.getComputedStyle ? c = getComputedStyle(c).marginTop : (c = c.currentStyle.marginTop, c = "auto" == c ? 0 : c);
            f += b(c)
        } else f = 0;
        a = a - f - h.$bottom[0].offsetHeight + 1;
        a = 0 <= a ? a : "";
        h.$cont.height(a);
        this.contHt = a
    };
    m.setContAndGridHeightForFlex = function () {
        var h = this.that, c = h.hscroll.widget();
        if (this.vscroll)c.css("position",
            ""); else {
            c.css("position", "relative");
            var c = h.$cont, a = h.options.cls, f = c.children("." + a.cont_inner_b);
            c.height("");
            f.length || (f = c.children("." + a.cont_inner));
            f.height("");
            h.element.height("");
            h.$grid_center.height("")
        }
    };
    m.setContAndGridWidthForFlex = function () {
        var h = this.that, c = h.options.maxWidth, a = this.maxWidthPixel, f = h.calcWidthCols(-1, h.colModel.length), h = h.element, b = this.getSBWidth(), f = f + b;
        c && f >= a && (f = a);
        this.contWd = f;
        h.width(f + "px")
    };
    m.getTotalVisibleRows = function (h, c, a) {
        var f = this.that, b = this.vrows,
            d = this.estRowsInViewPort(), n = 0, k = a ? a.length : 0, e = c, g = 0, t = 0, l = null, z = f.iHierarchy ? !0 : !1, f = f.options.detailModel.offset, r = 0, p = this.rowHt, m = z ? this.contHt : void 0;
        if (null == a || 0 == k)return {initV: null, finalV: null, tvRows: n, lastFrozenRow: null};
        for (var q = 0, u = k > c ? c : k; q < u; q++) {
            var s = a[q], w = s.pq_hidden;
            w || (l = q, n++, z && ((s = s.pq_detail) && s.show ? (s = s.height || 0, s > f && (s = f), r += s + p) : r += p))
        }
        if (k < c)return {initV: l, finalV: l, tvRows: n, lastFrozenRow: l};
        d -= n;
        e = g = b[h];
        t = 0;
        q = e;
        for (u = k; q < u; q++) {
            s = a[q];
            if (w = s.pq_hidden)g++; else if (t ===
                d)break; else g++, t++;
            if (z && !w && ((s = s.pq_detail) && s.show ? (s = s.height || 0, s > f && (s = f), r += s + p) : r += p, r > m))break
        }
        n += b.length;
        e = e >= k ? k - 1 : e;
        g = g >= k ? k - 1 : g;
        return {initV: e, finalV: g < e ? e : g, tvRows: n, lastFrozenRow: l}
    };
    m.setInitH = function (h, c) {
        var a = this.that;
        a.initH = h;
        a.finalH = c
    };
    m.setInitV = function (h, c) {
        var a = this.that, f;
        (null == h || null == c) && (f = this.vrows) && f.length && (h = c = f[f.length - 1]);
        a.initV = h;
        a.finalV = c
    };
    m.calcVisibleV = function () {
        for (var h = this.that, c = h.pdata || [], a = c.length, f = [], b = 0, h = h.options.freezeRows; h < a; h++)c[h].pq_hidden ||
        (f[b++] = h);
        this.vrows = f
    };
    m.calcVisibleH = function () {
        for (var h = this.that, c = [], a = 0, f = h.colModel, h = h.options.freezeCols, b = f.length; h < b; h++)f[h].hidden || (c[a++] = h);
        this.vcols = c
    };
    m.calcInitFinal = function () {
        var h = this.that, c = h.options, a = c.virtualY, f = c.freezeRows, b = "flex" === c.height, d = h.pdata;
        if (null == d || 0 === d.length)f = this.getTotalVisibleRows(n, f, d), h.totalVisibleRows = f.tvRows, a = f.initV, c = f.finalV, h.lastFrozenRow = f.lastFrozenRow; else if (a) {
            var n = parseInt(h.vscroll.option("cur_pos"));
            if (isNaN(n) || 0 > n)throw"cur_pos NA";
            h.scrollCurPos = n;
            f = this.getTotalVisibleRows(n, f, d);
            h.totalVisibleRows = f.tvRows;
            a = f.initV;
            h.lastFrozenRow = f.lastFrozenRow;
            c = b && !c.maxHeight ? d.length - 1 : f.finalV
        } else f = this.getTotalVisibleRows(0, f, d), h.lastFrozenRow = f.lastFrozenRow, h.totalVisibleRows = f.tvRows, a = 0, c = d.length - 1;
        this.setInitV(a, c)
    };
    m.calcInitFinalH = function () {
        var h = this.that, c = h.options, a, f = h.colModel, b = f.length;
        if (c.virtualX) {
            a = parseInt(h.hscroll.option("cur_pos"));
            var d = parseInt(c.freezeCols), n = "flex" === c.width, k = this.vcols;
            k || (this.calcVisibleH(),
                k = this.vcols);
            a = k[a];
            a > b - 1 && (a = b - 1);
            0 > a && (a = 0);
            if (n && !c.maxWidth)c = b - 1; else {
                h = h.calcWidthCols(-1, d);
                d = this.getEContWd();
                for (n = a; n < b; n++)if (k = f[n], !k.hidden) {
                    k = k.outerWidth;
                    if (!k && c.debug)throw"outerwidth N/A";
                    h += k;
                    if (h > d)break
                }
                c = n;
                c > b - 1 && (c = b - 1)
            }
        } else a = 0, c = b - 1;
        this.setInitH(a, c)
    };
    m._calcOffset = function (h) {
        return (h = /(-|\+)([0-9]+)/.exec(h)) && 3 === h.length ? parseInt(h[1] + h[2]) : 0
    };
    m.setMax = function (h) {
        var c = this.that, a = c.element;
        (c = c.options[h]) ? (c == parseInt(c) && (c += "px"), a.css(h, c)) : a.css(h, "")
    };
    m.refreshGridWidthAndHeight =
        function () {
            var h = this.that, c = h.options, a, f, b = -1 < (c.width + "").indexOf("%") ? !0 : !1, d = -1 < (c.height + "").indexOf("%") ? !0 : !1, n = -1 < (c.maxHeight + "").indexOf("%") ? !0 : !1, k = "flex" == c.height, e = n && k, g = -1 < (c.maxWidth + "").indexOf("%") ? !0 : !1, t = "flex" == c.width, B = g && t, h = h.element;
            if (b || d || e || B) {
                var z = h.parent();
                if (!z.length)return;
                var r;
                z[0] == document.body || "fixed" == h.css("position") ? (r = l(window).width(), z = window.innerHeight ? window.innerHeight : l(window).height()) : (r = z.width(), z = z.height());
                var p = this._calcOffset, m =
                    b ? p(c.width) : 0, p = d ? p(c.height) : 0;
                B ? a = parseInt(c.maxWidth) * r / 100 : b && (a = parseInt(c.width) * r / 100 + m);
                e ? f = parseInt(c.maxHeight) * z / 100 : d && (f = parseInt(c.height) * z / 100 + p)
            }
            a || (t && c.maxWidth ? g || (a = c.maxWidth) : b || (a = c.width));
            c.maxWidth && (this.maxWidthPixel = a);
            f || (k && c.maxHeight ? n || (f = c.maxHeight) : d || (f = c.height));
            parseFloat(a) == a ? (a = a < c.minWidth ? c.minWidth : a, h.css("width", a)) : "auto" === a && h.width(a);
            parseFloat(f) == f && (f = f < c.minHeight ? c.minHeight : f, h.css("height", f));
            this.width = Math.round(h.width());
            this.height =
                Math.round(h.height())
        };
    m.decidePanes = function () {
        var h = this.that, c = h.pqpanes = {
            v: !1,
            h: !1,
            vH: !1
        }, a = h.options, h = a.virtualX, f = a.virtualY, b = "flex" == a.height && !a.maxHeight, d = "flex" == a.width && !a.maxWidth, n = a.numberCell, k = a.freezeRows, a = a.freezeCols;
        !k || b || !a && !n.show || d ? k && !b ? f || (c.h = !0) : !a && !n.show || d || h || (c.v = !0, c.vH = !0) : (f || (c.h = !0), h || (c.v = !0, c.vH = !0))
    };
    m._storeColumnWidths = function (h) {
        for (var c = this.that, a = c.options, f = c.colModel, b = a.virtualX, a = a.freezeCols, d = c.initH, c = h ? f.length - 1 : c.finalH, n = [], k = 0; k <=
        c; k++)!h && b && k < d && k >= a && (k = d), n[k] = {outerWidth: f[k].outerWidth};
        return n
    };
    m._isColumnWidthChanged = function (h) {
        for (var c = this.that, a = c.colModel, c = c.iGenerateView.colDef, f = 0, b = c.length; f < b; f++) {
            var d = c[f].colIndx;
            if (a[d].outerWidth !== h[d].outerWidth)return !0
        }
        return !1
    };
    m.softRefresh = function () {
        var h = this.that, c = h.options;
        this.refreshScrollbars();
        h.iGenerateView.setPanes();
        h._saveDims();
        h.iMouseSelection.syncScrollBarVert();
        "flex" == c.height && this.setContAndGridHeightForFlex();
        "flex" == c.width && this.setContAndGridWidthForFlex();
        this._refreshFrozenLine()
    };
    m.refreshScrollbars = function (h) {
        h = h || {};
        var c = this.that, a = c.options, f = c.iGenerateView, b, d = "flex" === a.height;
        b = "flex" === a.width;
        if ((d || this.contHt) && (b || this.contWd) && null !== c.totalVisibleRows) {
            c = this.setScrollVNumEles(h);
            c = 1 < c ? !0 : !1;
            if ((!d || a.maxHeight) && c !== this.vscroll)if (this.vscroll = c, a.scrollModel.autoFit || a.virtualX || b) {
                if (a = this._storeColumnWidths(), this.refreshColumnWidths(), this._isColumnWidthChanged(a) || b)this.ignoreTResize = !0, this._refreshTableWidths(a, {
                    table: !0,
                    header: !0
                }), delete this.ignoreTResize, this.setHeaderHeight(), this.setContHeight(), f.setPanes(), c = this.setScrollVNumEles(!0), this.vscroll = 1 < c ? !0 : !1
            } else f.setPanes();
            c = this.setScrollHNumEles();
            b = 1 < c ? !0 : !1;
            this.hscroll != b && (this.hscroll = b, f.setPanes());
            this._setScrollHLength();
            this._setScrollVLength(h);
            this._setScrollHVLength()
        }
    };
    m._setScrollHVLength = function () {
        var h = this.that;
        this.vscroll && this.hscroll || h.$hvscroll.css("visibility", "hidden")
    };
    m._setScrollHLength = function () {
        var h = this.that, c = h.hscroll.widget(),
            a = h.$hvscroll;
        if (h.options.scrollModel.horizontal) {
            c.css("visibility", "");
            a.css("visibility", "");
            var a = this.contWd, f = this.getSBWidth();
            c.css("right", 0 === f ? 0 : "");
            h.hscroll.option("length", a - f)
        } else c.css("visibility", "hidden"), a.css("visibility", "hidden")
    };
    m.estVscroll = function () {
        var h = this.that, c = !0;
        null == h.totalVisibleRows || null == this.contHt ? c = !1 : h.totalVisibleRows * this.rowHt < this.contHt && (c = !1);
        this.vscroll = c
    };
    m.getSBWidth = function () {
        null == this.vscroll && this.estVscroll();
        return this.vscroll ? 17 :
            0
    };
    m.estHscroll = function () {
        var h = this.that;
        if (null == this.contWd)throw"failed";
        var c = !1;
        1 < this.calcColsOutsideCont(h.colModel) + 1 && (c = !0);
        this.hscroll = c
    };
    m.getSBHeight = function () {
        null == this.hscroll && this.estHscroll();
        return this.hscroll ? 17 : 0
    };
    m.getEContHt = function () {
        if (null == this.contHt)throw"contHt N/A";
        return this.contHt - this.getSBHeight()
    };
    m.getEContWd = function () {
        if (null == this.contWd)throw"contWd N/A";
        return this.contWd - this.getSBWidth()
    };
    m.calcColsOutsideCont = function (h) {
        var c = this.that.options,
            a = c.numberCell, c = c.freezeCols, f = this.contWd - this.getSBWidth(), b = 0;
        a.show && (b += a.outerWidth);
        for (a = 0; a < h.length; a++) {
            var d = h[a];
            d.hidden || (b += d.outerWidth)
        }
        var n = 0, k = 0, d = Math.round(b);
        d > f && k++;
        for (a = c; a < h.length; a++)if (d = h[a], !d.hidden)if (n += d.outerWidth, d = b - n, d > f)k++; else break;
        return k
    };
    m.setScrollHNumEles = function () {
        var h = this.that, c = h.options, a = h.colModel, f = c.scrollModel, b = 0;
        if ("flex" !== c.width || c.maxWidth)b = "fullScroll" === f.lastColumn ? a.length - c.freezeCols - h._calcNumHiddenUnFrozens() : this.calcColsOutsideCont(a) +
        1;
        h.hscroll.option("num_eles", b);
        return b
    };
    m.init = function () {
        var h = this.that, c = h.options;
        this.hscroll = this.vscroll = this.contHt = this.contWd = null;
        h.initH = h.initV = h.finalH = h.finalV = null;
        h.totalVisibleRows = h.lastFrozenRow = null;
        this.rowHt = c.rowHeight;
        this.headerHt = 0;
        this.height = null
    };
    m.refresh = function (h) {
        h = h || {};
        var c = this.that, a = h.header, f = h.table, b = h.pager, d, n = c.iGenerateView;
        d = c.element;
        if (d[0].offsetWidth) {
            h.toolbar && c.refreshToolbar();
            c.iMouseSelection.resetMargins();
            this.init();
            d = c.options;
            this.decidePanes();
            d.collapsible._collapsed = !1;
            this.setMax("maxHeight");
            this.setMax("maxWidth");
            this.refreshGridWidthAndHeight();
            this.initContHeight();
            this.initContWidth();
            this.calcInitFinal();
            if (!1 === a || !1 === f)var k = this._storeColumnWidths(!0);
            this.refreshColumnWidths();
            this.calcInitFinalH();
            n.createColDefs();
            !1 !== a ? c._createHeader() : this._isColumnWidthChanged(k) && this._refreshTableWidths(k, {header: !0});
            c._refreshHeaderSortIcons();
            !1 !== b && c._refreshPager();
            this.setHeaderHeight();
            this.setContHeight();
            !1 !== f ? n.generateView({source: h.source}) :
                (this._refreshTableWidths(k, {table: !0}), n.setPanes());
            c._saveDims();
            n.scrollView();
            this.refreshScrollbars();
            "flex" == d.height && this.setContAndGridHeightForFlex();
            "flex" == d.width && this.setContAndGridWidthForFlex();
            this._refreshFrozenLine();
            c._createCollapse();
            d.dataModel.postDataOnce = void 0
        } else d.addClass("pq-pending-refresh")
    };
    m.summaryTable = function () {
        var h = this.$summary, c = this.that, a = c.options.summaryData;
        a ? (h || (h = this.$summary = l("<div class='pq-grid-summary'></div>").prependTo(c.$bottom)), h = {
            data: a,
            $cont: h
        }, c.createTable(h)) : h && h[0].innerHTML && h.empty()
    };
    m.refreshVscroll = function (h) {
        h = this.that;
        var c = h.iGenerateView, a = h.options;
        if (a.virtualY && !a.scrollModel.smooth) {
            var f = h.initV, b = h.finalV;
            this.calcInitFinal();
            var d = f - h.initV, n = b - h.finalV;
            a.fullrefreshOnScroll || a.detailModel.init || h._mergeCells || 1 != Math.abs(d) || 1 != Math.abs(n) ? f == h.initV && b == h.finalV || c.generateView() : -1 == d ? (c.removeTopRow(1), c.appendRow(h.finalV - b)) : 1 == d && (c.prependRow(), c.removeBottomRow(b - h.finalV));
            h._saveDims();
            c.scrollView();
            1 >= this.setScrollVNumEles() && this.refreshScrollbars()
        }
    };
    m._refreshTableWidths = function (h, c) {
        var a = this.that, f = a.$tbl_header, b = c.header && f, d = a.$tbl, n = c.table && d, f = b ? f.children().children(".pq-row-hidden") : null, k = b ? a.$header.find(".pq-grid-col-resize-handle") : null, d = n && d ? d.children().children(".pq-row-hidden") : null, e, g = !1, t = 0;
        n && a.tables.length && (n = a.tables[0].$tbl.children().children(".pq-row-hidden"), d = d ? d.add(n) : n);
        for (var n = a.iGenerateView.colDef, l = 0, z = n.length; l < z; l++) {
            var r = n[l], p = r.colIndx, m =
                h[p].outerWidth, r = r.column.outerWidth;
            r !== m && (b && (e = f.find("td[pq-col-indx=" + p + "]"), e.width(r)), d && (e = d.find("td[pq-col-indx=" + p + "]"), e.length && (g = !0, e.width(r))));
            t += r - m;
            b && 0 !== t && (p = k.filter("[pq-col-indx=" + p + "]"), m = parseInt(p.css("left")), p.css("left", m + t))
        }
        g && a._trigger("tableWidthChange");
        a._saveDims()
    }
})(jQuery);
(function (l) {
    function m(a, b, d) {
        for (var f = 0, c = a.length; f < c; f++) {
            for (var n = a[f], h = {}, l = 0, m = b.length; l < m; l++) {
                var q = b[l];
                h[q] = n[q]
            }
            d.push(h)
        }
    }

    function h(a) {
        var b = this;
        b.that = a;
        b.findformulas();
        a.on("columnChange", function () {
            b.findformulas()
        }).on("dataAvailable", function () {
            b._onDA()
        }).on(!0, "change", function (a, d) {
            b._onchange(d)
        }).on("dataReady changeDone", function () {
            b.summaryData()
        })
    }

    var c = l.paramquery, a = c.cClass;
    l.widget("paramquery.pqGrid", c._pqGrid, {
        options: {
            flex: {on: !0, one: !1, all: !0},
            detailModel: {
                cache: !0,
                offset: 100,
                expandIcon: "ui-icon-triangle-1-se glyphicon glyphicon-minus",
                collapseIcon: "ui-icon-triangle-1-e glyphicon glyphicon-plus"
            },
            dragColumns: {
                enabled: !0,
                acceptIcon: "ui-icon-check glyphicon-ok",
                rejectIcon: "ui-icon-closethick glyphicon-remove",
                topIcon: "ui-icon-circle-arrow-s glyphicon glyphicon-circle-arrow-down",
                bottomIcon: "ui-icon-circle-arrow-n glyphicon glyphicon-circle-arrow-up"
            },
            track: null,
            mergeModel: {flex: !1},
            realFocus: !0,
            sortModel: {
                on: !0, type: "local", multiKey: "shiftKey", number: !0, single: !0,
                cancel: !0, sorter: [], useCache: !0, ignoreCase: !1
            },
            filterModel: {on: !0, type: "local", mode: "AND", header: !1}
        }, _create: function () {
            var a = this, b = a.options;
            a.listeners = {};
            a._queueATriggers = {};
            a.iHistory = new c.cHistory(a);
            a.iGroupView = new c.cGroupView(a);
            c.cMerge && (a.iMerge = new c.cMerge(a));
            a.iFilterData = new c.cFilterData(a);
            a.iSelection = new f.Selection(a);
            a.iHeaderSearch = new d(a);
            a.iUCData = new c.cUCData(a);
            a.iMouseSelection = new c.cMouseSelection(a);
            a._super();
            new h(a);
            a.iDragColumns = new c.cDragColumns(a);
            a.refreshToolbar();
            "remote" === b.dataModel.location && a.refresh({table: !0});
            a.on("dataAvailable", function () {
                a.one("refreshDone", function () {
                    a._trigger("ready");
                    setTimeout(function () {
                        a.element && a._trigger("complete")
                    }, 0)
                })
            });
            a.refreshDataAndView({header: !0})
        }
    });
    l.widget.extend = function () {
        var a = Array.prototype.shift, b = l.isPlainObject, d = l.isArray, f = l.widget.extend, c = a.apply(arguments), n;
        "boolean" == typeof c && (n = c, c = a.apply(arguments));
        var h = arguments, p = 0, m = h.length, q, u, s;
        for (null == n && (n = 1 < m ? !0 : !1); p < m; p++)for (u in q = h[p],
            q)s = q[u], void 0 !== s && (a = 0 < p ? !1 : !0, b(s) ? (c[u] = c[u] || {}, f(a, c[u], s)) : d(s) ? c[u] = n && a ? s.slice() : s : c[u] = s);
        return c
    };
    var f = window.pq = window.pq || {};
    f.grid = function (a, b) {
        var d = l(a).pqGrid(b);
        return d.data("paramqueryPqGrid") || d.data("paramquery-pqGrid")
    };
    c.pqGrid.regional = {};
    var b = c.pqGrid.prototype;
    c.pqGrid.defaults = b.options;
    b.focus = function (a) {
        a = a || {};
        var b = a.$td, d = a.rowIndxPage;
        a = a.colIndx;
        if (b) {
            if (null == d || null == a)a = this.getCellIndices({$td: b}), d = a.rowIndxPage, a = a.colIndx
        } else {
            if (null == d || null == a) {
                if ((d =
                        document.activeElement) && d != document.body && "pq-grid-excel" != d.id && "pq-grid-cont" != d.className || !(b = this._focusElement))return;
                d = b.rowIndxPage, a = b.colIndx
            }
            var b = this.iMerge, f = d + this.rowIndxOffset;
            b.ismergedCell(f, a) && (b = b.getRootCell(f, a, "o"), d = b.rowIndxPage, a = b.colIndx);
            b = this.getCell({rowIndxPage: d, colIndx: a})
        }
        if (this.options.realFocus) {
            this._focusElement = {$ele: b, rowIndxPage: d, colIndx: a};
            var c;
            b[0] && (c = b[0]) && "TD" == c.nodeName.toUpperCase() ? (c.setAttribute("tabindex", 0), c.focus()) : (d = this.options.dataModel.data) &&
            d.length || this.$cont.focus()
        } else {
            if (c = this._focusElement)this.removeClass({
                rowIndxPage: c.rowIndxPage,
                colIndx: c.colIndx,
                cls: "pq-focus",
                refresh: !1
            }), this.element.find(".pq-focus").removeClass("pq-focus");
            b && (this.addClass({rowIndxPage: d, colIndx: a, cls: "pq-focus"}), this._focusElement = {
                $ele: b,
                rowIndxPage: d,
                colIndx: a
            });
            d = this.$cont;
            document.activeElement != d[0] && d[0].focus()
        }
    };
    b.onfocus = function () {
        if (!this.options.realFocus) {
            var a = this._focusElement;
            a && this.addClass({
                rowIndxPage: a.rowIndxPage, colIndx: a.colIndx,
                cls: "pq-focus"
            })
        }
    };
    b.onblur = function () {
        if (!this.options.realFocus) {
            var a = this._focusElement;
            a && this.removeClass({rowIndxPage: a.rowIndxPage, colIndx: a.colIndx, cls: "pq-focus"})
        }
    };
    b.range = function (a, b) {
        return new f.Range(this, a, "range", b)
    };
    b.rowExpand = function (a) {
        this.iHierarchy.rowExpand(a)
    };
    b.rowInvalidate = function (a) {
        this.iHierarchy.rowInvalidate(a)
    };
    b.rowCollapse = function (a) {
        this.iHierarchy.rowCollapse(a)
    };
    b.saveState = function (a) {
        a = a || {};
        var b = this.element, d = l.extend, f = this.options, c = d(!0, {}, {sorter: f.sortModel.sorter}),
            n = f.pageModel, n = {rPP: n.rPP, curPage: n.curPage}, h = this.colModel, p = [], m, q, u = 0, s = h.length;
        q = f.groupModel;
        d = d(!0, {}, {
            dataIndx: q.dataIndx,
            dir: q.dir,
            collapsed: q.collapsed,
            merge: q.merge,
            grandSummary: q.grandSummary
        });
        for (b = b[0].id; u < s; u++) {
            m = h[u];
            q = {width: m.width, dataIndx: m.dataIndx, hidden: m.hidden};
            if (m = m.filter)q.filter = {value: m.value, value2: m.value2, on: m.on};
            p[u] = q
        }
        f = {
            colModel: p,
            height: f.height,
            datestamp: Date.now(),
            width: f.width,
            groupModel: d,
            pageModel: n,
            sortModel: c,
            freezeRows: f.freezeRows,
            freezeCols: f.freezeCols
        };
        !1 !== a.stringify && (f = JSON.stringify(f), !1 !== a.save && "undefined" !== typeof Storage && localStorage.setItem("pq-grid" + (b ? b : ""), f));
        return f
    };
    b.loadState = function (a) {
        a = a || {};
        var b;
        b = l.widget.extend;
        var d = l.extend, f = this.element[0].id;
        if (f = a.state || ("undefined" === typeof Storage ? void 0 : localStorage.getItem("pq-grid" + (f ? f : ""))))"string" == typeof f && (f = JSON.parse(f)); else return !1;
        for (var c = f.colModel, n, h, p = [], m = [], q = [], u = [], s = this.options, w = 1 < this.depth, x = w ? this.colModel : s.colModel, y = 0, D = c.length; y < D; y++)n =
            c[y], h = n.dataIndx, m[h] = y, p[h] = n.width, q[h] = n.filter, u[h] = n.hidden;
        w || x.sort(function (a, b) {
            return m[a.dataIndx] - m[b.dataIndx]
        });
        y = 0;
        for (D = x.length; y < D; y++)c = x[y], h = c.dataIndx, c.width = p[h] || c.width, c.filter = d(c.filter, q[h]), u[h] && (c.hidden = !0);
        this.iColModel.init();
        b(s.sortModel, f.sortModel);
        b(s.pageModel, f.pageModel);
        b = f.groupModel;
        b.refresh = !1;
        this.groupOption(b);
        b = {freezeRows: f.freezeRows, freezeCols: f.freezeCols};
        isNaN(1 * s.height) || isNaN(1 * f.height) || (b.height = f.height);
        isNaN(1 * s.width) || isNaN(1 *
            f.width) || (b.width = f.width);
        this.option(b);
        !1 !== a.refresh && this.refreshDataAndView();
        return !0
    };
    var d = function (a) {
        function b(e, d, f) {
            a.filter({data: [{dataIndx: e, value: d, value2: f}]})
        }

        this.that = a;
        var d = this;
        this.dataHS = {};
        a.on("headerKeyDown", function (a, b) {
            var e = l(a.originalEvent.target);
            return e.hasClass("pq-grid-hd-search-field") ? d.onKeyDown(a, b, e) : !0
        });
        a.on("createHeader", function (a, b) {
            return d._onCreateHeader()
        });
        this.changeListener = {
            change: function (a, d) {
                b(d.dataIndx, d.value, d.value2)
            }
        };
        this.keyupListener =
        {
            keyup: function (a, d) {
                b(d.dataIndx, d.value, d.value2)
            }
        };
        this.clickListener = {
            click: function (a, d) {
                b(d.dataIndx, d.value)
            }
        }
    }, a = d.prototype = new a;
    a.get$Ele = function (a, b) {
        var d = this.that, f = d.options.freezeCols, c = l(d.$tbl_header[0]), n = ".pq-grid-hd-search-field[name='" + b + "']", d = l(d.$tbl_header[2 == d.$tbl_header.length ? 1 : 0]);
        return a >= f ? d.find(n) : c.find(n)
    };
    a.onKeyDown = function (a, b, d) {
        b = this.that;
        if (a.keyCode === l.ui.keyCode.TAB) {
            var f = d.attr("name"), c = b.getColIndx({dataIndx: f}), n = b.colModel, h, p = a.shiftKey, m =
                n[c];
            if ("between" == m.filter.condition && (b.scrollColumn({colIndx: c}), f = this.get$Ele(c, f), f[0] == d[0] ? p || (h = f[1]) : p && (h = f[0]), h))return h.focus(), a.preventDefault(), !1;
            do {
                p ? c-- : c++;
                if (0 > c || c >= n.length)break;
                m = n[c];
                d = m.filter;
                if (!m.hidden && d) {
                    b.scrollColumn({colIndx: c});
                    f = m.dataIndx;
                    h = this.get$Ele(c, f);
                    "between" == d.condition && (h = p ? l(h[1]) : l(h[0]));
                    if (h)return h.focus(), a.preventDefault(), !1;
                    break
                }
            } while (1)
        } else return !0
    };
    a._bindFocus = function () {
        function a(k) {
            k = l(k.target).closest(".pq-grid-hd-search-field").attr("name");
            if (b.scrollColumn({dataIndx: k})) {
                var f = b.getColIndx({dataIndx: k});
                d.get$Ele(f, k).focus()
            }
        }

        for (var b = this.that, d = this, f = b.$header.find(".pq-grid-header-search-row"), c = 0; c < f.length; c++)l(f[c]).on("focusin", a)
    };
    a._onCreateHeader = function () {
        var a = this.that, b = a.options;
        if (b.filterModel.header) {
            this._bindFocus();
            var d = a.colModel, b = b.freezeCols, f = a.$tbl_header, c = l(f[0]), n = l(f[1]), h = "input,select";
            if (1 < f.length) {
                c.find(h).css("visibility", "hidden");
                for (var p = 0; p < b; p++) {
                    var m = d[p], h = "*[name='" + m.dataIndx +
                        "']";
                    c.find(h).css("visibility", "visible");
                    n.find(h).css("visibility", "hidden")
                }
            }
            d = a.iGenerateView.colDef;
            p = 0;
            for (h = d.length; p < h; p++) {
                var q = d[p], u = q.colIndx, m = q.column, s = m.filter;
                if (s) {
                    var q = m.dataIndx, w = c;
                    u >= b && 1 < f.length && (w = n);
                    u = w.find("*[name='" + q + "']");
                    if (0 != u.length) {
                        var w = s.type, x = s.value, y = s.value2;
                        "checkbox" == w && "triple" == s.subtype ? u.pqval({val: x}) : "select" == w && null != x && u.val(x);
                        (w = s.init) && w.call(u, {dataIndx: q, column: m});
                        if (m = s.listeners)for (s = 0; s < m.length; s++) {
                            w = m[s];
                            "string" == typeof w &&
                            (w = this[w + "Listener"]);
                            for (var D in w)(function (b, e, d) {
                                b.bind(D, function (f) {
                                    var g = a.getColumn({dataIndx: d}), c = g.filter;
                                    "checkbox" == c.type ? x = "triple" == c.subtype ? b.pqval({incr: !0}) : b.is(":checked") ? !0 : !1 : "between" == c.condition ? (x = l(b[0]).val(), y = l(b[1]).val()) : x = b.val();
                                    return e.call(this, f, {column: g, dataIndx: d, value: x, value2: y})
                                })
                            })(u, w[D], q)
                        }
                    }
                }
            }
        }
    };
    var n = function (a, b) {
        return ["<div class='pq-from-div'>", a, "</div><span class='pq-from-to-center'>-</span><div class='pq-to-div'>", b, "</div>"].join("")
    };
    a.createDOM = function (a, b) {
        var d = this.that, f = d.options, h = f.bootstrap.on ? " " : " ui-corner-all", f = f.numberCell;
        a.push("<tr class='pq-grid-header-search-row'>");
        f.show && a.push("<td pq-col-indx='-1' class='pq-grid-number-col' rowspan='1'><div class='pq-td-div'>&nbsp;</div></td>");
        for (var f = d.iGenerateView.colDef, l = 0, m = f.length; l < m; l++) {
            var p = f[l].column, v = b, q = p.halign;
            q || (q = p.align);
            "right" == q ? v += " pq-align-right" : "center" == q && (v += " pq-align-center");
            (q = p.cls) && (v = v + " " + q);
            if (q = p.filter) {
                var u = p.dataIndx,
                    s = q.type, w = q.value, x = q.condition, y = q.cls, y = "pq-grid-hd-search-field " + (y ? y : ""), D = q.style, D = D ? D : "", A = q.attr, A = A ? A : "", C = "";
                if ("between" == x)var E = q.value2, E = null != E ? E : "";
                "textbox" === s ? (w = w ? w : "", y = y + " pq-search-txt" + h, C = "between" == x ? n(this._input(u, w, y + " pq-from", D, A), this._input(u, E, y + " pq-to", D, A)) : this._input(u, w, y, D, A)) : "textarea" === s ? (w = w ? w : "", y = y + " pq-search-txt" + h, C = "between" == x ? n(this._textarea(u, w, y + " pq-from", D, A), this._textarea(u, E, y + " pq-to", D, A)) : this._textarea(u, w, y, D, A)) : "select" === s ? q.cache ?
                    C = q.cache : (s = q.options, "function" === typeof s && (s = s.call(d, {
                    column: p,
                    value: w,
                    dataIndx: u,
                    cls: y,
                    style: D,
                    attr: A
                })), y += h, p = ["name='", u, "' class='", y, "' style='", D, "' ", A].join(""), C = c.select({
                    options: s,
                    attr: p,
                    prepend: q.prepend,
                    valueIndx: q.valueIndx,
                    labelIndx: q.labelIndx,
                    groupIndx: q.groupIndx
                }), q.cache = C) : "checkbox" == s ? C = ["<input ", null == w || !1 == w ? "" : "checked=checked", " name='", u, "' type=checkbox class='" + y + "' style='" + D + "' " + A + "/>"].join("") : "string" == typeof s ? C = s : "function" == typeof s && (C = s.call(d, {
                    width: p.outerWidth,
                    value: w, value2: E, column: p, dataIndx: u, cls: y, attr: A, style: D
                }));
                a.push(["<td class='", v, "'><div class='pq-td-div' >", C, "</div></td>"].join(""))
            } else a.push(["<td class='", v, "'><div class='pq-td-div' >&nbsp;</div></td>"].join(""))
        }
        a.push("</tr>")
    };
    a._input = function (a, b, d, f, c) {
        return ['<input value="', b, "\" name='", a, "' type=text style='" + f + "' class='" + d + "' " + c + " />"].join("")
    };
    a._textarea = function (a, b, d, f, c) {
        return ["<textarea name='", a, "' style='" + f + "' class='" + d + "' " + c + " >", b, "</textarea>"].join("")
    };
    b.refreshToolbar = function () {
        var a = this.options, b = a.toolbar, d;
        this._toolbar && (d = this._toolbar, d.destroy());
        if (b) {
            var c = b.cls, n = b.style, h = b.attr, b = b.items, c = l("<div class='" + (c ? c : "") + "' style='" + (n ? n : "") + "' " + (h ? h : "") + " ></div>");
            d ? d.widget().replaceWith(c) : this.$top.append(c);
            d = f.toolbar(c, {items: b, gridInstance: this, bootstrap: a.bootstrap});
            a.showToolbar || c.css("display", "none");
            this._toolbar = d
        }
    };
    b.isLeftOrRight = function (a) {
        return a > this.freezeCols ? "right" : "left"
    };
    b.ovCreateHeader = function (a, b) {
        this.options.filterModel.header &&
        this.iHeaderSearch.createDOM(a, b)
    };
    b.filter = function (a) {
        //console.log(a);
        var b = this, d = this.options, f = void 0 === a.apply ? !0 : a.apply, c = void 0 === a.sort ? !0 : a.sort, n = d.dataModel, d = d.filterModel;
        if (void 0 != a) {

            var h = "replace" == a.oper ? !0 : !1;
            a = a.data;

            for (var p = this.colModel, p = f ? p : l.extend(!0, [], p), m = 0, q = p.length, u = a.length, s = 0; s < q; s++) {
                for (var w = p[s], x = !1, y = 0; y < u && m != u; y++) {
                    var D = a[y];
                    if (D.dataIndx == w.dataIndx) {
                        x = !0;
                        m++;
                        var y = w.filter, A = D.condition, C = D.value;
                        y ? y.on = !0 : y = w.filter = {on: !0};
                        A && (y.condition = A);
                        A = y.condition;
                        y.value =
                            C;
                        if ("between" == A)y.value2 = D.value2; else if ("range" == A) {
                            D = [];
                            if (C)if ("string" == typeof C) {
                                var A = y.options, E = C.indexOf('"'), F = C.lastIndexOf('"'), C = C.substr(E, F + 1), C = JSON.parse("[" + C + "]");
                                if (A)for (E = 0, F = A.length; E < F; E++) {
                                    var K = A[E];
                                    -1 != l.inArray(K, C) && D.push(K)
                                } else D = C.split(",s*")
                            } else"function" == typeof C.push && (D = C);
                            y.value = D
                        }
                        break
                    }
                }
                h && !x && w.filter && (w.filter.on = !1)
            }
        }
        var L = {header: !1, apply: f, sort: c, CM: p};
        if ("remote" == n.location && "local" != d.type)this.remoteRequest({
            apply: f, CM: p, callback: function () {
                return b._onDataAvailable(L)
            }
        });
        else return L.source = "filter", L.trigger = !1, b._onDataAvailable(L)
    };
    b._initTypeColumns = function () {
        for (var a = this.colModel, b = 0, d = a.length; b < d; b++) {
            var f = a[b], n = f.type;
            "checkBoxSelection" === n || "checkbox" == n ? (f.type = "checkbox", new c.cCheckBoxColumn(this, f)) : "detail" === n && (f.dataIndx = "pq_detail", this.iHierarchy = new c.cHierarchy(this, f))
        }
    };
    b.refreshHeader = function () {
        this._createHeader();
        this.iGenerateView.setPanes();
        this._refreshHeaderSortIcons()
    };
    b._refreshHeaderSortIcons = function () {
        this.iHeader.refreshHeaderSortIcons()
    };
    b.getLargestRowCol = function (a) {
        for (var b = 0; b < a.length; b++);
    };
    b.bringCellToView = function (a) {
        this._bringCellToView(a)
    };
    b._setUrl = function (a) {
        this.options.dataModel.getUrl = function () {
            return {url: this.url + (null != a ? a : "")}
        }
    };
    b.pageData = function () {
        return this.pdata
    };
    b.getData = function (a) {
        a = a || {};
        var b = a.dataIndx, d = b ? b.length : 0, f = a.data;
        a = this.options.dataModel;
        var c = a.data, n = a.dataUF;
        a = [];
        if (d)f ? m(f, b, a) : (c && m(c, b, a), n && m(n, b, a)); else return c.concat(n ? n : []);
        f = [];
        for (c = 0; c < d; c++) {
            var n = b[c], h = this.getColumn({dataIndx: n});
            f.push({dataIndx: n, dir: "up", dataType: h.dataType, sortType: h.sortType})
        }
        a = this.iSort._sortLocalData(f, a);
        b = [];
        d = void 0;
        f = 0;
        for (c = a.length; f < c; f++)n = a[f], h = JSON.stringify(n), h !== d && (b.push(n), d = h);
        return b
    };
    b.get_p_data = function () {
        var a = this.options, b = "remote" == a.pageModel.type, d = a.dataModel.data, f = this.pdata, c = this.rowIndxOffset, a = a.groupModel, n = c && b ? Array(c) : [];
        return a.on && a.dataIndx.length ? c ? (b || (n = d.slice(0, c)), n.concat(f)) : f : c && b ? n.concat(f) : d
    };
    b._onDataAvailable = function (a) {
        a = a || {};
        var b = this.options,
            d = null == a.apply ? !0 : a.apply, f = a.source, c = a.sort, n = [], n = b.filterModel, h = b.dataModel, b = b.sortModel, l = h.location;
        !1 !== d && !1 !== a.trigger && this._trigger("dataAvailable", a.evt, {source: f});
        n = n && n.on && ("local" == l && "remote" != n.type || "remote" == l && "local" == n.type) ? this.iFilterData.filterLocalData(a).data : h.data;
        "local" == b.type && !1 !== c && (d ? this.sort({refresh: !1}) : n = this.iSort.sortLocalData(n));
        if (!1 === d)return n;
        h.data = n;
        this.refreshView(a)
    };
    b.sort = function (a) {
        a = a || {};
        var b = this, d = this.options, f = d.dataModel.data,
            c = d.sortModel.type;
        if (f && f.length || "local" != c) {
            var n = d.editModel, d = this.iSort, h = d.getSorter(), l, m = a.evt, q = null == a.single ? d.readSingle() : a.single;
            l = d.readCancel();
            a.sorter ? a.addon ? (a.single = q, a.cancel = l, l = d.refreshSorter(a)) : l = a.sorter : l = d.readSorter();
            if (l.length || h.length)n.indices && b.blurEditor({force: !0}), n = {
                dataIndx: l.length ? l[0].dataIndx : null,
                oldSorter: h,
                sorter: l,
                source: a.source,
                single: q
            }, !1 === b._trigger("beforeSort", m, n) ? d.cancelSort() : (d.resumeSort(), "local" == c && d.saveOrder(), d.setSorter(l),
                d.setSingle(q), d.writeSorter(l), d.writeSingle(q), "local" == c ? (d.sortLocalData(f), this._queueATriggers.sort = {
                evt: m,
                ui: n
            }, !1 !== a.refresh && this.refreshView()) : "remote" == c && (this._queueATriggers.sort = {
                evt: m,
                ui: n
            }, a.initByRemote || this.remoteRequest({
                initBySort: !0, callback: function () {
                    b._onDataAvailable()
                }
            })))
        }
    };
    b.reset = function (a) {
        a = a || {};
        var b = a.sort, d, f = 0, c;
        d = this.options;
        c = l.extend;
        var n, h = a.filter, m = a.group;
        if (b || h || m) {
            b && (n = !0 === b ? {sorter: []} : b, c(d.sortModel, n));
            if (h)for (d = this.getColModel(), c = d.length; f <
            c; f++)if (n = d[f].filter)n.value = null, n.value2 = null, n.cache = null;
            m && (f = !0 === m ? {dataIndx: []} : m, f.refresh = !1, this.groupOption(f));
            !1 !== a.refresh && (h ? (this.filter({
                oper: "replace",
                data: []
            }), this.refreshHeader()) : b ? this.sort() : this.refreshView())
        }
    };
    b._trigger = c._trigger;
    b.on = c.on;
    b.one = c.one;
    b.off = c.off;
    b.pager = function () {
        return this.pagerW
    };
    b.vscrollbar = function () {
        return this.vscroll
    };
    b.hscrollbar = function () {
        return this.hscroll
    };
    b.toolbar = function () {
        return this._toolbar.element
    };
    b = h.prototype;
    b.callRow =
        function (a, b, d) {
            if (a)for (; d--;) {
                var f = b[d], c = f.column;
                a[c.dataIndx] = f.formula.call(this.that, {rowData: a, column: c})
            }
        };
    b._onDA = function () {
        var a = this.formulas.length;
        if (a)for (var b = this.that.options.dataModel.data, d = b.length, f = this.formulas; d--;)this.callRow(b[d], f, a)
    };
    b.summaryData = function () {
        var a = this.formulas, b = a.length, d, f;
        if (b)for (d = this.that.options.summaryData || [], f = d.length; f--;)this.callRow(d[f], a, b)
    };
    b._onchange = function (a) {
        var b = this.formulas.length;
        if (b) {
            a = a.rowList;
            for (var d = this.formulas,
                     f = a.length; f--;)this.callRow(a[f].rowData, d, b)
        }
    };
    b.findformulas = function () {
        for (var a = this.that.colModel, b, d, f = [], c = a.length; c--;)b = a[c], (d = b.formula) && f.push({
            formula: d,
            column: b
        });
        this.formulas = f
    };
    b = c.cColModel = b = function (a) {
        this.that = a;
        this.init()
    };
    b = b.prototype;
    b.extend = function (a, b) {
        for (var d, f, c = l.extend, n = a.length; n--;) {
            var h = a[n];
            for (d in b)void 0 === h[d] && (f = b[d], h[d] = f && "object" == typeof f ? c(!0, {}, f) : f)
        }
    };
    b.init = function () {
        var a = this.that, b = a.options, d = b.columnTemplate, f;
        f = b.colModel;
        f || (this._autoGenColumns(),
            f = b.colModel);
        b = this.nestedCols(f);
        a.depth = b.depth;
        b = a.colModel = b.colModel;
        f = b.length;
        d && this.extend(b, d);
        this.getHeadersCells();
        this.alignColumns(b, f);
        this.assignRowSpan();
        this._refreshDataIndices();
        a._trigger("CMInit")
    };
    b.alignColumns = function (a, b) {
        for (var d = 0; d < b; d++) {
            var f = a[d];
            if (!f.align) {
                var c = f.dataType;
                !c || "integer" != c && "float" != c || (f.align = "right")
            }
        }
    };
    b.nestedCols = function (a, b, d, f) {
        var c = a.length, n = [];
        null == b && (b = 1);
        for (var h = b, l = 0, m = 0, q = 0, u = 0; u < c; u++) {
            var s = a[u];
            s.parent = f ? f : void 0;
            !0 ===
            d && (s.hidden = d);
            var w = s.colModel;
            w && w.length ? (w = this.nestedCols(w, b + 1, s.hidden, s), n = n.concat(w.colModel), 0 < w.colSpan ? (w.depth > h && (h = w.depth), s.colSpan = w.colSpan, l += w.colSpan) : s.colSpan = 0, q += w.o_colspan, s.o_colspan = w.o_colspan, s.childCount = w.childCount, m += w.childCount) : (s.hidden ? s.colSpan = 0 : (s.colSpan = 1, l++), q++, s.o_colspan = 1, s.childCount = 0, m++, n.push(s))
        }
        return {depth: h, colModel: n, colSpan: l, width: 0, childCount: m, o_colspan: q}
    };
    b.getHeadersCells = function () {
        for (var a = this.that, b = a.options.colModel, d = a.colModel.length,
                 f = a.depth, c = [], n = 0; n < f; n++) {
            c[n] = [];
            for (var h = 0, l = 0, m = 0; m < d; m++) {
                var q;
                if (0 == n)q = b[h]; else {
                    var u = c[n - 1][m];
                    if ((q = u.colModel) && 0 != q.length) {
                        for (var u = m - u.leftPos, s = 0, w = 0, x = 0; x < q.length; x++)if (s += 0 < q[x].childCount ? q[x].childCount : 1, u < s) {
                            w = x;
                            break
                        }
                        q = q[w]
                    } else q = u
                }
                u = q.childCount ? q.childCount : 1;
                m == l ? (q.leftPos = m, c[n][m] = q, l += u, b[h + 1] && h++) : c[n][m] = c[n][m - 1]
            }
        }
        return a.headerCells = c
    };
    b.getDataType = function () {
        var a = this.colModel;
        if (a && a[0])return "string" == typeof a[0].dataIndx ? "JSON" : "ARRAY"
    };
    b.assignRowSpan =
        function () {
            for (var a = this.that, b = a.colModel.length, d = a.headerCells, a = a.depth, f = 0; f < b; f++)for (var c = 0; c < a; c++) {
                var n = d[c][f];
                if (!(0 < f && n == d[c][f - 1] || 0 < c && n == d[c - 1][f])) {
                    for (var h = 1, l = c + 1; l < a; l++)n == d[l][f] && h++;
                    n.rowSpan = h
                }
            }
            return d
        };
    b._autoGenColumns = function () {
        var a = this.that.options, b = a.columnTemplate || {}, d = b.dataType, c = b.title, n = b.width, b = a.dataModel.data, h = f.validation, m = [];
        b && b.length && l.each(b[0], function (a, b) {
            var e = "string";
            h.isInteger(b) ? e = -1 < b + -1 ? "float" : "integer" : h.isDate(b) ? e = "date" : h.isFloat(b) &&
            (e = "float");
            m.push({dataType: d ? d : e, dataIndx: a, title: c ? c : a, width: n ? n : 100})
        });
        a.colModel = m
    };
    b._refreshDataIndices = function () {
        for (var a = this.that, b = "JSON" == this.getDataType() ? !0 : !1, d = {}, f = {}, c = {}, n = a.colModel, h = n.length, l = 0; l < h; l++) {
            var m = n[l], q = m.dataIndx;
            null == q && (q = "detail" == m.type ? "pq_detail" : b ? "dataIndx_" + l : l, "pq_detail" == q && (m.dataType = "object"), m.dataIndx = q);
            d[q] = m;
            f[q] = l;
            m.validations && (c[q] = c)
        }
        a.columns = d;
        a.colIndxs = f;
        a.validations = c
    }
})(jQuery);
(function (l) {
    var m = l.paramquery, h = m._pqGrid.prototype;
    h.exportExcel = function (a) {
        a = a || {};
        a.format = "xlsx";
        return this.exportData(a)
    };
    h.exportCsv = function (a) {
        a = a || {};
        a.format = "csv";
        return this.exportData(a)
    };
    h.exportData = function (a) {
        return (new c(this, a)).Export(a)
    };
    var c = m.cExport = function (a, f) {
            this.that = a;
            this.templates = {
                content_types: '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types"><Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml"/><Override PartName="/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml"/><Override PartName="/worksheet.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml"/></Types>',
                workbook: ['<?xml version="1.0" encoding="UTF-8" standalone="yes"?><workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"><sheets><sheet name="', f.sheetName ? f.sheetName : "ParamQuery Pro", '" sheetId="1" r:id="rId1"/></sheets></workbook>'].join(""),
                worksheet: '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"><%=content%></worksheet>',
                rels: '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="workbook.xml"/></Relationships>',
                workbook_rels: '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheet.xml"/></Relationships>'
            }
        },
        h = c.prototype;
    h.getTitle = function (a, f) {
        var b = a.title;
        b ? "function" == typeof b && (b = b.call(this.that, {
            colIndx: f,
            column: a,
            dataIndx: a.dataIndx,
            Export: !0
        })) : b = "";
        return b
    };
    h.getRenderVal = function (a, f, b) {
        var d = a.column, c = d.exportRender;
        return (f && !1 !== c || c) && (d.render || d._render || d.format) ? b.renderCell(a) : a.rowData[a.dataIndx]
    };
    h.getXlsMergeCells = function (a, f, b, d) {
        a = a.concat(b.getMergeCells(f, this.curPage, d));
        f = [];
        b = m.toLetter;
        d = a.length;
        f.push('<mergeCells count="' + d + '">');
        for (var c = 0; c < d; c++) {
            var k = a[c],
                k = b(k.c1) + (k.r1 + 1) + ":" + b(k.c2) + (k.r2 + 1);
            f.push('<mergeCell ref="', k, '"/>')
        }
        f.push("</mergeCells>");
        return d ? f.join("") : ""
    };
    h.getXlsCols = function (a, f) {
        var b = [];
        b.push("<cols>");
        for (var d = 0; d < f; d++) {
            var c = a[d], k = d + 1, e = c.hidden ? "1" : "0", g = c._width;
            g || (g = parseInt(c.width)) || (g = 100);
            b.push('<col min="', k, '" max="', k, '" hidden="', e, '" customWidth="1" width="', g / 7, '"/>')
        }
        b.push("</cols>");
        return b.join("")
    };
    h.getXlsHeader = function (a, f, b) {
        for (var d = [], c = 0; c < f; c++) {
            var k = a[c];
            d.push("<row>");
            for (var e = 0, g =
                k.length; e < g; e++) {
                var h = k[e];
                if (!1 !== h.copy) {
                    var l = h.o_colspan, m = h.rowSpan, r = this.getTitle(h, e);
                    0 < c && h == a[c - 1][e] ? r = "" : 0 < e && h == a[c][e - 1] ? r = "" : (1 < l || 1 < m) && b.push({
                        r1: c,
                        c1: e,
                        r2: c + m - 1,
                        c2: e + l - 1
                    });
                    d.push('<c t="inlineStr"><is><t><![CDATA[' + r + "]]\x3e</t></is></c>")
                }
            }
            d.push("</row>")
        }
        return d.join("")
    };
    h.getXlsBody = function (a, f, b, d, c, k, e, g, h) {
        var l = [], m, r, p, v, q, u, s = {integer: "Number", "float": "Number", bool: "bool"};
        for (m = 0; m < d; m++) {
            q = b[m];
            r = q.pq_hidden ? 'hidden="1"' : "";
            u = c ? m + k : m;
            p = u - k;
            q = {
                rowIndx: u, rowIndxPage: p,
                rowData: q, Export: !0
            };
            l.push("<row " + r + ">");
            for (r = 0; r < f; r++)v = a[r], !1 !== v.copy && (p = void 0, e.ismergedCell(u, r) && (e.isRootCell(u, r, "o") || (p = null)), void 0 === p && (q.colIndx = r, q.column = v, q.dataIndx = v.dataIndx, p = this.getRenderVal(q, g, h)), v = (v = null == p ? null : s[v.dataType]) ? v : "String", "Number" == v && (isNaN(1 * p) ? v = "String" : p *= 1), p = null == p ? "" : p, "String" == v ? l.push('<c t="inlineStr"><is><t><![CDATA[' + p + "]]\x3e</t></is></c>") : "Number" == v ? l.push("<c><v>" + p + "</v></c>") : "bool" == v ? (p = p ? "1" : "0", l.push('<c t="b"><v>' + p + "</v></c>")) :
                l.push("<c><v>" + p + "</v></c>"));
            l.push("</row>")
        }
        return l.join("\n")
    };
    h.getXlsContent = function (a, f, b, d, c, k, e, g, h, l, m, r) {
        var p = '<sheetViews><sheetView tabSelected="1" workbookViewId="0"><pane ySplit="<%=a%>" topLeftCell="A<%=b%>" activePane="bottomLeft" state="frozen"/></sheetView></sheetViews>', v = this.getXlsCols(a, f), q = [], u = r ? d : 0, p = p.replace("<%=a%>", u), p = p.replace("<%=b%>", u + 1);
        b = r ? this.getXlsHeader(b, d, q) : "";
        a = this.getXlsBody(a, f, c, k, e, g, h, l, m);
        return [p, v, "<sheetData>", b, a, "</sheetData>", this.getXlsMergeCells(q,
            r ? d : 0, h, k)].join("")
    };
    h.getHtmlHeader = function (a, f) {
        for (var b = [], d, c, k, e, g = 0; g < f; g++) {
            var h = a[g], l = null;
            b.push("<tr>");
            for (var m = 0, r = h.length; m < r; m++)d = h[m], c = d.colSpan, !d.hidden && c && !1 !== d.copy && (k = d.rowSpan, 0 < g && d == a[g - 1][m] || l && 0 < m && d == l || (e = this.getTitle(d, m), l = d, d = (d = d.halign || d.align) ? "align=" + d : "", b.push("<th colspan=", c, " rowspan=", k, " ", d, ">", e, "</th>")));
            b.push("</tr>")
        }
        return b.join("")
    };
    h.getHtmlBody = function (a, f, b, d, c, k, e, g, h) {
        var l = [], m, r, p, v, q, u, s;
        for (m = 0; m < d; m++)if (r = b[m], !r.pq_hidden) {
            s =
                c ? m + k : m;
            u = s - k;
            u = {rowIndx: s, rowIndxPage: u, rowData: r, Export: !0};
            l.push("<tr>");
            for (r = 0; r < f; r++)if (p = a[r], !p.hidden && !1 !== p.copy) {
                q = "";
                if (e.ismergedCell(s, r)) {
                    if (q = e.isRootCell(s, r))v = e.getRootCell(s, r, "o"), v.Export = !0, v = this.getRenderVal(v, g, h); else continue;
                    q = "rowspan=" + q.rowspan + " colspan=" + q.colspan + " "
                } else u.colIndx = r, u.column = p, u.dataIndx = p.dataIndx, v = this.getRenderVal(u, g, h);
                p = p.align;
                q += p ? "align=" + p : "";
                v = null == v ? "" : v;
                l.push("<td ", q, ">", v, "</td>")
            }
            l.push("</tr>")
        }
        return l.join("")
    };
    h.getHtmlContent =
        function (a, f, b, d, c, k, e, g, h, l, m, r, p) {
            var v = a.cssRules || "", q = this.that.element.find(".pq-grid-table"), u = q.css("font-family"), q = q.css("font-size"), s = [];
            s.push("<!DOCTYPE html><html><head>", '<meta charset="utf-8" />', "<title>", a.title ? a.title : "ParamQuery Pro", "</title>", "</head><body>", "<style>", "table{empty-cells:show;font-family:" + u + ";font-size:" + q + ";border-collapse:collapse;}", "td,th{padding: 5px;border:1px solid #ccc;}", v, "</style>", "<table>");
            s.push(p ? this.getHtmlHeader(d, c, f) : "");
            s.push(this.getHtmlBody(f,
                b, k, e, g, h, l, m, r));
            s.push("</table></body></html>");
            return s.join("")
        };
    h.getCsvHeader = function (a, f, b, d) {
        for (var c = [], k = [], e, g, h = 0; h < f; h++) {
            for (var l = a[h], m = null, r = 0, p = l.length; r < p; r++)e = b[r], e.hidden || !1 === e.copy || (e = l[r], 0 < h && e == a[h - 1][r] ? c.push("") : m && 0 < r && e == m ? c.push("") : (g = (g = this.getTitle(e, r)) ? g.replace(/\"/g, '""') : "", m = e, c.push('"' + g + '"')));
            k.push(c.join(d));
            c = []
        }
        return k
    };
    h.getCSVContent = function (a, f, b, d, c, k, e, g, h, l, m, r, p) {
        var v, q;
        a = a.separator || ",";
        var u, s = [];
        p = p ? this.getCsvHeader(d, c, f, a) :
            [];
        for (d = 0; d < e; d++)if (q = k[d], !q.pq_hidden) {
            c = g ? d + h : d;
            u = c - h;
            u = {rowIndx: c, rowIndxPage: u, rowData: q, Export: !0};
            for (q = 0; q < b; q++)v = f[q], v.hidden || !1 === v.copy || (l.ismergedCell(c, q) ? l.isRootCell(c, q) ? (v = l.getRootCell(c, q, "o"), v.Export = !0, v = this.getRenderVal(v, m, r)) : v = "" : (u.colIndx = q, u.column = v, u.dataIndx = v.dataIndx, v = this.getRenderVal(u, m, r)), v = (null == v ? "" : v) + "", v = v.replace(/\"/g, '""'), s.push('"' + v + '"'));
            p.push(s.join(a));
            s = []
        }
        return p.join("\n")
    };
    h.getJsonContent = function (a, f) {
        function b(a, b) {
            return 0 ===
            (a + "").indexOf("pq_") ? void 0 : b
        }

        return a.nostringify ? f : JSON.stringify(f, a.nopqdata ? b : null, a.nopretty ? null : 2)
    };
    h.postRequest = function (a) {
        var f = a.format, b, d = a.url, c = a.filename || "pqGrid";
        a.zip && "xlsx" != f ? (f = new JSZip, f.file(c + "." + a.format, a.data), a = f.generate({
            type: "base64",
            compression: "DEFLATE"
        }), b = !0, f = "zip") : (b = a.decodeBase ? !0 : !1, a = a.data);
        d && l.ajax({
            url: d,
            type: "POST",
            cache: !1,
            data: {pq_ext: f, pq_data: a, pq_decode: b, pq_filename: c},
            success: function (a) {
                d += (0 < d.indexOf("?") ? "&" : "?") + "pq_filename=" + a;
                l(document.body).append("<iframe height='0' width='0' frameborder='0' src=\"" +
                    d + '"></iframe>')
            }
        });
        return a
    };
    h.Export = function (a) {
        var f = this.that, b = f.options, d, c, k, e = this.templates, g = b.groupModel;
        c = "remote" == b.pageModel.type;
        d = f.rowIndxOffset;
        var h = f.iGenerateView, l = f.iMerge, m = f.colModel, r = m.length, p = f.headerCells, v = p.length, g = (this.curPage = g.on && g.dataIndx.length || c) ? f.pdata : b.dataModel.data, g = b.summaryData ? g.concat(b.summaryData) : g, q = g.length, b = a.url, u = a.render, s = !a.noheader, w = a.format;
        f._trigger("beforeExport", null, a);
        "xlsx" == w ? (d = this.getXlsContent(m, r, p, v, g, q, c, d, l, u, h,
            s), c = new JSZip, c.file("[Content_Types].xml", e.content_types), c.file("workbook.xml", e.workbook), c.file("worksheet.xml", e.worksheet.replace("<%=content%>", d)), d = c.folder("_rels"), d.file(".rels", e.rels), d.file("workbook.xml.rels", e.workbook_rels), b ? (a.data = c.generate({
            type: "base64",
            compression: "DEFLATE"
        }), a.decodeBase = !0) : k = c.generate({
            type: "blob",
            compression: "DEFLATE"
        })) : a.data = "json" == w ? this.getJsonContent(a, g) : "csv" == w ? this.getCSVContent(a, m, r, p, v, g, q, c, d, l, u, h, s) : this.getHtmlContent(a, m, r, p, v, g,
            q, c, d, l, u, h, s);
        k = k ? k : this.postRequest(a);
        f._trigger("exportData", null, a);
        return k
    }
})(jQuery);
(function (l) {
    var m = l.paramquery, h = {options: {items: [], gridInstance: null}};
    l.widget("paramquery.pqToolbar", h);
    h = m.pqToolbar.prototype;
    h.refresh = function () {
        this.element.empty();
        this._create()
    };
    h._create = function () {
        var c = this.options, a = c.gridInstance, f = {
            button: "click",
            select: "change",
            checkbox: "change",
            textbox: "change"
        }, b, d, n = c.bootstrap, k = n.on, e = a.colModel, c = c.items, g = this.element;
        g.addClass("pq-toolbar");
        for (var h = 0, B = c.length; h < B; h++) {
            var z = c[h], r = z.type, p = z.value, v = z.icon, q = z.options || {}, u = z.label,
                s = (d = z.listener) ? [d] : z.listeners, s = s || [function () {
                    }];
            d = (d = z.cls) ? d : "";
            d = (d = k && "button" == r ? n.btn + " " + d : d) ? "class='" + d + "'" : "";
            var w = z.style, w = w ? "style='" + w + "'" : "", x = z.attr, y = x ? x : "", x = u && "button" != r ? [d, y] : [d, y, w], x = x.join(" "), D;
            z.options = q;
            "textbox" == r ? D = l([u ? "<label " + w + ">" + u : "", "<input type='text' " + x + ">", u ? "</label>" : ""].join("")) : "textarea" == r ? D = l([u ? "<label " + w + ">" + u : "", "<textarea " + x + "></textarea>", u ? "</label>" : ""].join("")) : "checkbox" == r ? D = l([u ? "<label " + w + ">" : "", "<input type='checkbox' ", p ?
                "checked='checked' " : "", x, ">", u ? u + "</label>" : ""].join("")) : "separator" == r ? D = l("<span class='pq-separator' " + [y, w].join(" ") + "></span>") : "button" == r ? (D = "", k && (D = v ? "<span class='glyphicon " + v + "'></span>" : ""), D = l("<button type='button' " + x + ">" + D + u + "</button>"), l.extend(q, {
                label: u ? u : !1,
                icons: {primary: k ? "" : v}
            }), D.button(q)) : "select" == r ? ("function" === typeof q && (q = q.call(a, {colModel: e})), q = q || [], D = m.select({
                options: q,
                attr: x,
                prepend: z.prepend,
                groupIndx: z.groupIndx,
                valueIndx: z.valueIndx,
                labelIndx: z.labelIndx
            }),
                D = l([u ? "<label " + w + ">" + u : "", D, u ? "</label>" : ""].join(""))) : "string" == typeof r ? D = l(r) : "function" == typeof r && (D = r.call(a, {
                colModel: e,
                cls: d
            }), D = l(D));
            D.appendTo(g);
            "checkbox" !== r && void 0 !== p && (u ? l(D[0].children[0]).val(p) : D.val(p));
            p = 0;
            for (u = s.length; p < u; p++)for (b in d = s[p], v = {}, "function" == typeof d ? v[f[r]] = d : v = d, v)D.on(b, this._onEvent(a, v[b], z))
        }
    };
    h._onEvent = function (c, a, f) {
        return function (b) {
            f.value = "checkbox" == f.type ? l(b.target).prop("checked") : l(b.target).val();
            a.call(c, b)
        }
    };
    h._destroy = function () {
        this.element.empty().removeClass("pq-toolbar").enableSelection()
    };
    h._disable = function () {
        null == this.$disable && (this.$disable = l("<div class='pq-grid-disable'></div>").css("opacity", .2).appendTo(this.element))
    };
    h._enable = function () {
        this.$disable && (this.element[0].removeChild(this.$disable[0]), this.$disable = null)
    };
    h._setOption = function (c, a) {
        "disabled" == c && (!0 == a ? this._disable() : this._enable())
    };
    pq.toolbar = function (c, a) {
        var f = l(c).pqToolbar(a);
        return f.data("paramqueryPqToolbar") || f.data("paramquery-pqToolbar")
    }
})(jQuery);
(function (l) {
    var m = l.paramquery, h = m.pqGrid.prototype.options, c = {on: !1, dirtyClass: "pq-cell-dirty"};
    h.trackModel = h.trackModel || c;
    h = (m.cUCData = function (a) {
        this.that = a;
        this.udata = [];
        this.ddata = [];
        this.adata = [];
        this.options = a.options;
        var f = this;
        a.on("dataAvailable", function (a, d) {
            "filter" != d.source && (f.udata = [], f.ddata = [], f.adata = [])
        })
    }).prototype = new m.cClass;
    h.add = function (a) {
        var f = this.that, b = this.adata, d = this.ddata;
        a = a.rowData;
        for (var c = this.options.trackModel.dirtyClass, k = f.getRecId({rowData: a}), e =
            0, g = b.length; e < g; e++) {
            var h = b[e];
            if (null != k && h.recId == k)throw"primary key violation";
            if (h.rowData == a)throw"same data can't be added twice.";
        }
        e = 0;
        for (g = d.length; e < g; e++)if (a == d[e].rowData) {
            d.splice(e, 1);
            return
        }
        var d = [], l;
        for (l in a)d.push(l);
        f.removeClass({rowData: a, dataIndx: d, cls: c});
        a = {recId: k, rowData: a};
        b.push(a)
    };
    h.update = function (a) {
        var f = this.that, b = this.options.trackModel.dirtyClass, d = a.rowData || f.getRowData(a), c = f.getRecId({rowData: d}), k = a.dataIndx, e = a.refresh, g = f.columns, h = f.getValueFromDataType;
        a = a.row;
        var m = this.udata, z = m.slice(0), r = !1;
        if (null != c) {
            for (var p = 0, v = m.length; p < v; p++) {
                var q = m[p], u = q.oldRow;
                if (q.rowData == d) {
                    r = !0;
                    for (k in a)m = g[k].dataType, v = a[k], v = h(v, m), q = u[k], q = h(q, m), u.hasOwnProperty(k) && q === v ? (m = {
                        rowData: d,
                        dataIndx: k,
                        refresh: e,
                        cls: b
                    }, f.removeClass(m), delete u[k]) : (m = {
                        rowData: d,
                        dataIndx: k,
                        refresh: e,
                        cls: b
                    }, f.addClass(m), u.hasOwnProperty(k) || (u[k] = d[k]));
                    l.isEmptyObject(u) && z.splice(p, 1);
                    break
                }
            }
            if (!r) {
                u = {};
                for (k in a)u[k] = d[k], m = {rowData: d, dataIndx: k, refresh: e, cls: b}, f.addClass(m);
                m = {rowData: d, recId: c, oldRow: u};
                z.push(m)
            }
            this.udata = z
        }
    };
    h["delete"] = function (a) {
        var f = this.that, b = a.rowIndx, d = a.rowIndxPage, c = f.rowIndxOffset, b = null == b ? d + c : b, d = "remote" == f.options.pageModel.type ? null == d ? b - c : d : b, c = this.adata, k = this.ddata;
        a = f.getRowData(a);
        for (var f = 0, e = c.length; f < e; f++)if (c[f].rowData == a) {
            c.splice(f, 1);
            return
        }
        k.push({indx: d, rowData: a, rowIndx: b})
    };
    h.isDirty = function (a) {
        var f = this.udata, b = this.adata, d = this.ddata, c = !1;
        if (a = this.that.getRowData(a))for (b = 0; b < f.length; b++) {
            if (a == f[b].rowData) {
                c = !0;
                break
            }
        } else if (f.length || b.length || d.length)c = !0;
        return c
    };
    h.getChangesValue = function (a) {
        a = a || {};
        var f = this.that;
        a = a.all;
        for (var b = this.udata, d = this.adata, c = this.ddata, k = [], e = [], g = [], h = [], m = [], z = [], r = 0, p = c.length; r < p; r++) {
            var v = c[r], q = v.rowData, u = {};
            m.push(q);
            for (var s in q)0 != s.indexOf("pq_") && (u[s] = q[s]);
            z.push(u)
        }
        r = 0;
        for (p = b.length; r < p; r++)if (v = b[r], c = v.oldRow, q = v.rowData, -1 == l.inArray(q, m) && -1 == l.inArray(q, k)) {
            u = {};
            if (!1 !== a)for (s in q)0 != s.indexOf("pq_") && (u[s] = q[s]); else {
                for (s in c)u[s] =
                    q[s];
                u[f.options.dataModel.recIndx] = v.recId
            }
            k.push(q);
            e.push(u);
            g.push(c)
        }
        r = 0;
        for (p = d.length; r < p; r++) {
            v = d[r];
            q = v.rowData;
            u = {};
            for (s in q)0 != s.indexOf("pq_") && (u[s] = q[s]);
            h.push(u)
        }
        return {updateList: e, addList: h, deleteList: z, oldList: g}
    };
    h.getChanges = function () {
        for (var a = this.udata, f = this.adata, b = this.ddata, d = l.inArray, c = [], k = [], e = [], g = [], h = 0, m = b.length; h < m; h++) {
            var z = b[h], z = z.rowData;
            g.push(z)
        }
        h = 0;
        for (m = a.length; h < m; h++)z = a[h], b = z.oldRow, z = z.rowData, -1 == d(z, g) && -1 == d(z, c) && (c.push(z), k.push(b));
        h = 0;
        for (m = f.length; h < m; h++)z = f[h], z = z.rowData, e.push(z);
        return {updateList: c, addList: e, deleteList: g, oldList: k}
    };
    h.getChangesRaw = function () {
        var a = this.adata, f = this.ddata, b = {updateList: [], addList: [], deleteList: []};
        b.updateList = this.udata;
        b.addList = a;
        b.deleteList = f;
        return b
    };
    h.commitAdd = function (a, f) {
        for (var b = this.that, d = b.colModel, c = d.length, k = this.adata, e = l.inArray, g = k.length, h = b.getValueFromDataType, b = [], m = a.length, z = [], r = 0; r < m; r++)for (var p = a[r], v = 0; v < g; v++) {
            var q = k[v].rowData, u = !0;
            if (-1 == e(q, z)) {
                for (var s =
                    0; s < c; s++) {
                    var w = d[s], x = w.dataType, y = w.dataIndx;
                    if (!w.hidden && y != f && (w = q[y], w = h(w, x), y = p[y], y = h(y, x), w !== y)) {
                        u = !1;
                        break
                    }
                }
                if (u) {
                    v = {};
                    u = {};
                    v[f] = p[f];
                    u[f] = q[f];
                    b.push({type: "update", rowData: q, oldRow: u, newRow: v});
                    z.push(q);
                    break
                }
            }
        }
        d = [];
        for (v = 0; v < g; v++)q = k[v].rowData, -1 == e(q, z) && d.push(k[v]);
        this.adata = d;
        return b
    };
    h.commitUpdate = function (a, f) {
        for (var b = this.that, d = this.options.trackModel.dirtyClass, c = this.udata, k = c.length, e = a.length, g = [], h = 0; h < k; h++) {
            var m = c[h], z = m.rowData, m = m.oldRow;
            if (-1 == l.inArray(z,
                    g))for (var r = 0; r < e; r++)if (z[f] == a[r][f]) {
                g.push(z);
                for (var p in m)b.removeClass({rowData: z, dataIndx: p, cls: d})
            }
        }
        b = [];
        for (h = 0; h < k; h++)z = c[h].rowData, -1 == l.inArray(z, g) && b.push(c[h]);
        this.udata = b;
        return []
    };
    h.commitDelete = function (a, f) {
        for (var b = this.ddata, d = b.length, c = this.udata, k, e, g; d--;) {
            k = b[d].rowData;
            e = k[f];
            g = a.length;
            if (!g)break;
            for (; g--;)if (e == a[g][f]) {
                a.splice(g, 1);
                b.splice(d, 1);
                for (e = c.length; e--;)c[e].rowData == k && c.splice(e, 1);
                break
            }
        }
    };
    h.commitUpdateAll = function () {
        for (var a = this.that, f = this.options.trackModel.dirtyClass,
                 b = this.udata, d = 0, c = b.length; d < c; d++) {
            var k = b[d], e = k.oldRow, k = k.rowData, g;
            for (g in e)a.removeClass({rowData: k, dataIndx: g, cls: f})
        }
        this.udata = []
    };
    h.commitAddAll = function () {
        this.adata = []
    };
    h.commitDeleteAll = function () {
        for (var a = this.ddata, f = this.udata, b = f.length, d, c = a.length, k = 0; 0 < b && k < c; k++) {
            for (d = a[k].rowData; b--;)f[b].rowData == d && f.splice(b, 1);
            b = f.length
        }
        a.length = 0
    };
    h.commit = function (a) {
        var f = this.that, b = a ? a.history : null, b = null == b ? !1 : b, d = [], d = [], c = [], k = f.options.dataModel.recIndx;
        if (null == a)this.commitAddAll(),
            this.commitUpdateAll(), this.commitDeleteAll(); else {
            var e = a.type;
            a = a.rows;
            "add" == e ? a ? d = this.commitAdd(a, k) : this.commitAddAll() : "update" == e ? a ? c = this.commitUpdate(a, k) : this.commitUpdateAll() : "delete" == e && (a ? this.commitDelete(a, k) : this.commitDeleteAll())
        }
        d = d.concat(c);
        d.length && (f._digestData({
            source: "commit",
            checkEditable: !1,
            track: !1,
            history: b,
            rowList: d
        }), f.refreshView())
    };
    h.rollbackAdd = function (a, f) {
        for (var b = this.adata, d = [], c = 0, k = b.length; c < k; c++)d.push({
            type: "delete",
            rowData: b[c].rowData
        });
        this.adata =
            [];
        return d
    };
    h.rollbackDelete = function (a, f) {
        for (var b = this.ddata, d = [], c = b.length - 1; 0 <= c; c--) {
            var k = b[c];
            d.push({type: "add", rowIndx: k.rowIndx, newRow: k.rowData})
        }
        this.ddata = [];
        return d
    };
    h.rollbackUpdate = function (a, f) {
        for (var b = this.that, d = this.options.trackModel.dirtyClass, c = this.udata, k = [], e = 0, g = c.length; e < g; e++) {
            var h = c[e], l = h.rowData, m = {}, r = h.oldRow;
            if (null != h.recId) {
                var h = [], p;
                for (p in r)m[p] = l[p], h.push(p);
                b.removeClass({rowData: l, dataIndx: h, cls: d, refresh: !1});
                k.push({
                    type: "update", rowData: l, newRow: r,
                    oldRow: m
                })
            }
        }
        this.udata = [];
        return k
    };
    h.rollback = function (a) {
        var f = this.that, b = f.options.pageModel, d = a && null != a.refresh ? a.refresh : !0;
        a = a && null != a.type ? a.type : null;
        var c = [], c = [], k = [], e = [], g = f.options.dataModel.data;
        if (null == a || "update" == a)k = this.rollbackUpdate(b, g);
        if (null == a || "delete" == a)c = this.rollbackDelete(b, g);
        if (null == a || "add" == a)e = this.rollbackAdd(b, g);
        c = c.concat(e, k);
        f._digestData({history: !1, allowInvalid: !0, checkEditable: !1, source: "rollback", track: !1, rowList: c});
        d && f.refreshView()
    };
    m = m.pqGrid.prototype;
    m.getChanges = function (a) {
        this.blurEditor({force: !0});
        if (a) {
            var f = a.format;
            if (f) {
                if ("byVal" == f)return this.iUCData.getChangesValue(a);
                if ("raw" == f)return this.iUCData.getChangesRaw()
            }
        }
        return this.iUCData.getChanges()
    };
    m.rollback = function (a) {
        this.blurEditor({force: !0});
        this.iUCData.rollback(a)
    };
    m.isDirty = function (a) {
        return this.iUCData.isDirty(a)
    };
    m.commit = function (a) {
        this.iUCData.commit(a)
    };
    m.updateRow = function (a) {
        for (var f = a.rowList || [{
                    rowIndx: a.rowIndx,
                    newRow: a.newRow || a.row,
                    rowData: a.rowData,
                    rowIndxPage: a.rowIndxPage
                }],
                 b = [], d = 0, c = f.length; d < c; d++) {
            var k = this.normalize(f[d]), e = k.newRow, g = k.rowData, h = {};
            if (g) {
                for (var l in e)h[l] = g[l];
                k.oldRow = h;
                k.type = "update";
                b.push(k)
            }
        }
        if (!b.length || !1 === this._digestData({
                source: a.source || "update",
                history: a.history,
                checkEditable: a.checkEditable,
                track: a.track,
                allowInvalid: a.allowInvalid,
                rowList: b
            }))return !1;
        !1 !== a.refresh && (1 < b.length ? this.refresh() : this.refreshRow({rowIndx: b[0].rowIndx}))
    };
    m.getRecId = function (a) {
        a.dataIndx = this.options.dataModel.recIndx;
        a = this.getCellData(a);
        return null ==
        a ? null : a
    };
    m.getCellData = function (a) {
        var f = a.rowData || this.getRowData(a);
        a = a.dataIndx;
        return f ? f[a] : null
    };
    m.getRowData = function (a) {
        if (!a)return null;
        var f = a.rowData;
        if (null != f)return f;
        f = a.recId;
        if (null == f) {
            var f = a.rowIndx, f = null != f ? f : a.rowIndxPage + this.rowIndxOffset, b = this.get_p_data()[f];
            return b
        }
        b = this.options.dataModel;
        a = b.recIndx;
        for (var d = b.data, c = 0, k = d.length; c < k; c++)if (b = d[c], b[a] == f)return b;
        return null
    };
    m.deleteRow = function (a) {
        for (var f = a.rowList || [{rowIndx: a.rowIndx, rowIndxPage: a.rowIndxPage}],
                 b = [], d = 0, c = f.length; d < c; d++) {
            var k = this.normalize(f[d]);
            k.oldRow = k.rowData;
            k.type = "delete";
            b.push(k)
        }
        if (!b.length)return !1;
        this._digestData({source: a.source || "delete", history: a.history, track: a.track, rowList: b});
        !1 !== a.refresh && this.refreshView()
    };
    m.addRow = function (a) {
        var f = a.rowList || [{
                rowIndx: a.rowIndx,
                rowIndxPage: a.rowIndxPage,
                newRow: a.newRow || a.rowData
            }], b = [], d = this.options.dataModel, c = d.data;
        null == c && (d.data = [], c = d.data);
        for (var d = 0, k = f.length; d < k; d++) {
            var e = this.normalize(f[d]);
            e.type = "add";
            b.push(e)
            //console.log(e);
        }
        if (!b.length || !1 === this._digestData({
                source: a.source || "add",
                history: a.history,
                track: a.track,
                checkEditable: a.checkEditable,
                rowList: b
            }))return !1;
        !1 !== a.refresh && this.refreshView();
        a = b[0].rowIndx;
        return null == a ? c.length - 1 : a
    }
})(jQuery);
(function (l) {
    var m = function (a) {
        this.focusSelection = null
    };
    m.prototype.inViewRow = function (a) {
        var f = this.that, b = f.finalV;
        return a < f.options.freezeRows ? !0 : a >= f.initV && a <= b
    };
    var h = function (a) {
        this.that = a;
        this.options = a = a.options;
        this.selection = [];
        this.hclass = " pq-state-select " + (a.bootstrap.on ? "" : "ui-state-highlight")
    };
    l.paramquery.cRows = h;
    var c = function (a) {
        var f = a.options;
        this.that = a;
        this.selection = [];
        this.hclass = "pq-state-select " + (f.bootstrap.on ? "" : "ui-state-highlight")
    };
    l.paramquery.cCells = c;
    c = c.prototype =
        new m;
    m = h.prototype = new m;
    m.isSelected = function (a) {
        return (a = a.rowData || this.that.getRowData(a)) ? !0 === a.pq_rowselect : null
    };
    m.selectRange = function (a) {
        var f = a.range, b = f.r1, f = f.r2;
        a = a.evt;
        var d = [];
        if (b > f)var c = b, b = f, f = c;
        for (; b <= f; b++)d.push({rowIndx: b});
        this.add({rows: d, evt: a})
    };
    c.removeAll = function (a) {
        var f = this.that;
        a = f.get_p_data();
        var b = this.hclass;
        if (a && a.length)for (f.$tbl && f.$tbl.children().children().children().removeClass(b), f = 0, b = a.length; f < b; f++) {
            var d = a[f];
            d && delete d.pq_cellselect
        }
    };
    m.removeAll =
        function (a) {
            a = a || {};
            var f = this.that, b = a.all, d = this.hclass, c = f.get_p_data();
            if (c && c.length)for (a.refresh && f.$tbl && f.$tbl.children().children().removeClass(d), c = b ? c : f.pdata, a = 0, f = c.length; a < f; a++)(b = c[a]) && delete b.pq_rowselect
        };
    c.isSelected = function (a) {
        var f = this.that, b = a.rowData || f.getRowData(a), d = a.dataIndx;
        a = a.colIndx;
        if (null == a && null == d || null == b)return null;
        d = null == d ? f.colModel[a].dataIndx : d;
        return !0 == (b.pq_cellselect && b.pq_cellselect[d])
    };
    m.getSelection = function () {
        for (var a = this.that, f = a.selection().address(),
                 b = [], d = 0, c = f.length; d < c; d++) {
            var k = f[d];
            if ("row" == k.type)for (var e = k.r2, k = k.r1; k <= e; k++) {
                var g = a.getRowData({rowIndx: k});
                b.push({rowIndx: k, rowData: g})
            }
        }
        return b
    };
    c.getSelection = function () {
        for (var a = this.that, f = a.selection(), b = a.colModel, f = f.address(), d = [], c = 0, k = f.length; c < k; c++) {
            var e = f[c], g = e.type;
            if ("block" == g || "cell" == g || "column" == g)for (var g = e.r2, h = e.c1, l = e.c2, e = e.r1; e <= g; e++)for (var m = a.getRowData({rowIndx: e}), r = h; r <= l; r++)d.push({
                rowIndx: e,
                rowData: m,
                colIndx: r,
                dataIndx: b[r].dataIndx
            })
        }
        return d
    };
    c.inViewCell = function (a, f) {
        var b = this.that, d = b.options.freezeCols;
        return this.inViewRow(a) ? f < d || f >= b.initH && f <= b.finalH : !1
    };
    c._add = function (a) {
        var f = this.that;
        a = f.normalize(a);
        var b = a.rowIndxPage, d = a.rowData, c, k = a.colIndx, e = a.dataIndx, g = this.isSelected({
            rowData: d,
            dataIndx: e
        });
        if (null == g)return !1;
        var h = f.iMerge.ismergedCell(a.rowIndx, k) || this.inViewCell(b, k);
        !1 === g && (h && (f = f.getCell({
            rowIndxPage: b,
            colIndx: k
        })) && f.addClass(this.hclass), c = (d.pq_cellselect = d.pq_cellselect || {})[e] = !0);
        if (c)return a
    };
    m._add =
        function (a) {
            var f = this.that, b = f.normalize(a), d = b.rowIndxPage;
            a = b.rowData;
            var c = this.isSelected({rowData: a});
            b.rowIndxPage = d;
            if (null == c)return !1;
            b = this.inViewRow(d);
            !1 === c && (!a.pq_hidden && b && (f = f.getRow({rowIndxPage: d}), f.length && f.addClass(this.hclass)), a.pq_rowselect = !0)
        };
    c.add = function (a) {
        this._add(a)
    };
    m.add = function (a) {
        var f = a.rows;
        if (f && "function" == typeof f.push) {
            a = 0;
            for (var b = f.length; a < b; a++) {
                var d = f[a];
                d.trigger = !1;
                this._add(d)
            }
        } else this._add(a)
    };
    m._remove = function (a) {
        var f = this.that, b = f.normalize(a);
        a = b.rowIndx;
        var d = b.rowIndxPage, c = b.rowData, b = b.$tr;
        if (this.isSelected({rowData: c}))return this.inViewRow(d) && (b = f.getRow({rowIndxPage: d})) && (b.removeClass(this.hclass), b.removeAttr("tabindex")), c.pq_rowselect = !1, {
            rowIndx: a,
            rowData: c
        }
    };
    m.remove = function (a) {
        var f = a.rows;
        if (f && "function" == typeof f.push) {
            a = 0;
            for (var b = f.length; a < b; a++) {
                var d = f[a];
                d.trigger = !1;
                this._remove(d)
            }
        } else this._remove(a)
    };
    c.selectBlock = function (a) {
        var f = this.that, b = this.hclass, d = a.range, c = d.r1, k = d.c1, e = d.r2, d = d.c2, g = f.initH,
            h = f.finalH, m = f.options.freezeCols, z = [], r = f.colModel, p = [];
        a = a.remove ? !0 : !1;
        for (var v = k; v <= d; v++)z[v] = r[v].dataIndx;
        for (; c <= e; c++)if (r = f.normalize({rowIndx: c}), v = r.rowData, r = r.rowIndxPage, v) {
            var q = v.pq_cellselect = v.pq_cellselect || {};
            if (this.inViewRow(r))for (v = k; v <= d; v++) {
                var u = z[v];
                if (a && q[u] || !a && !q[u]) {
                    if (v < m || v >= g && v <= h) {
                        var s = f.getCell({rowIndxPage: r, colIndx: v});
                        s.length && p.push(s[0])
                    }
                    q[u] = a ? void 0 : !0
                }
            } else for (v = k; v <= d; v++)u = z[v], q[u] = a ? void 0 : !0
        }
        if (p.length)l(p)[a ? "removeClass" : "addClass"](b)
    }
})(jQuery);
(function (l) {
    var m = !0;
    l(function () {
        var c = l("<input type='checkbox' style='position:fixed;left:-50px;top:-50px;'/>").appendTo(document.body);
        c[0].indeterminate = !0;
        c.on("change", function () {
            m = !1
        });
        c.click();
        c.remove()
    });
    var h = (l.paramquery.cCheckBoxColumn = function (c, a) {
        var f = this;
        this.that = c;
        this.options = c.options;
        this.column = a;
        a.cb = l.extend({}, {all: !1, header: !1, select: !1, check: !0, uncheck: !1}, a.cb);
        a._render = function (b) {
            var d = b.rowData;
            if (!d.pq_gtitle && !d.pq_gsummary)return "<input type='checkbox' " +
                (a.cb.check === b.cellData ? "checked" : "") + " />"
        };
        this.dataIndx = a.dataIndx;
        var b = c.element, d = c.eventNamespace;
        c.on("dataAvailable", function () {
            c.one("dataReady", function () {
                return f._onDataReady()
            })
        }).on("dataReady", function () {
            f.setValCBox()
        });
        b.on("change" + d, function (a) {
            var b = a.target;
            if ("checkbox" == b.type && l(b).closest(".pq-grid")[0] == this)return f.onCheckBoxChange(a)
        });
        c.on("cellKeyDown", function (a, b) {
            return f.onCellKeyDown(a, b)
        });
        c.on("refreshHeader", function (a, b) {
            return f.refreshHeader(a, b)
        })
    }).prototype =
        new l.paramquery.cClass;
    h.hasHeaderChkBox = function () {
        return this.column.cb.header
    };
    h.setValCBox = function () {
        if (this.hasHeaderChkBox()) {
            var c = this.that, a = this.options, f = this.dataIndx, b = this.column.cb, d = b.all, h = c.rowIndxOffset, h = "remote" != a.pageModel.type && d ? 0 : h, a = d ? a.dataModel.data : c.pdata, d = null, k = 0, e = 0;
            if (a) {
                for (var g = 0, l = 0, m = a.length; l < m; l++) {
                    var z = a[l], r = l + h;
                    c.isEditableRow({rowIndx: r}) && c.isEditableCell({
                        rowIndx: r,
                        dataIndx: f
                    }) && (g++, z[f] === b.check ? k++ : e++)
                }
                k == g && g ? d = !0 : e == g && (d = !1);
                this.$inp &&
                this.$inp.pqval({val: d})
            }
        }
    };
    h.onHeaderChange = function (c) {
        for (var a = l(c.target), f = this.that, b = this.column, d = b.dataIndx, h = f.options, k = b.cb, e = k.all, g = e ? h.dataModel.data : f.pdata, m = f.rowIndxOffset, m = "remote" != h.pageModel.type && e ? 0 : m, h = [], b = {
            column: b,
            dataIndx: d,
            source: "header"
        }, a = a[0].checked, e = 0, B = g.length; e < B; e++) {
            var z = e + m, r = g[e], p = {}, v = {};
            p[d] = a ? k.check : k.uncheck;
            v[d] = r[d];
            h.push({rowIndx: z, rowData: r, newRow: p, oldRow: v, type: "update"})
        }
        d = {rowList: h, source: "checkbox"};
        d.history = d.track = k.select ? !1 : null;
        b.check = a;
        b.rows = h;
        if (!1 === f._trigger("beforeCheck", c, b) || !1 === f._digestData(d))return f.refreshHeader(), !1;
        f.refresh({header: !1});
        h = b.rows = d.rowList;
        f._trigger("check", c, b);
        k.select && f.selection({type: "row", method: a ? "add" : "remove", rows: h})
    };
    h.refreshHeader = function (c, a) {
        var f = this;
        if (this.hasHeaderChkBox()) {
            var b = this.that;
            if (b.pdata && (b = b.getCellHeader({dataIndx: this.dataIndx}))) {
                var d = this.$inp = b.find("input");
                this.setValCBox();
                if (m)d.on("click", function (a) {
                    null == d.data("pq_value") && (d[0].checked = !0, d.data("pq_value", !0), f.onHeaderChange(a))
                });
                d.on("change", function (a) {
                    f.onHeaderChange(a)
                })
            }
        }
    };
    h._onDataReady = function () {
        var c = this.that, a = this.options, f = a.dataModel.data, a = "remote" == a.pageModel.type ? c.rowIndxOffset : 0, b = this.column, d = b.cb, h = b.dataIndx;
        if (null != h && f) {
            for (var k = [], e = 0, g = f.length; e < g; e++) {
                var l = f[e];
                l[h] === d.check && k.push({rowIndx: e + a, rowData: l})
            }
            if (!1 !== c._trigger("check", null, {
                    rows: k,
                    column: b,
                    dataIndx: h,
                    source: "dataAvailable"
                }) && d.select) {
                for (e = 0; e < g; e++)l = f[e], l[h] === d.check &&
                (l.pq_rowselect = !0);
                c.selection().refresh()
            }
        }
        this.setValCBox()
    };
    h.rowSelect = function (c, a) {
        var f = this.that, b = a.rows, d = a.rowData, h = this.dataIndx;
        if (b)for (var k = 0, e = b.length; k < e; k++) {
            var d = b[k], g = d.rowIndx, d = d.rowData;
            d[h] = !0;
            f.refreshCell({rowIndx: g, dataIndx: h})
        } else d && (d[h] = !0, g = a.rowIndx, f.refreshCell({rowIndx: g, dataIndx: h}));
        this.setValCBox()
    };
    h.rowUnSelect = function (c, a) {
        var f = this.that, b = a.rows, d = a.rowData, h = this.dataIndx;
        if (b)for (var k = 0, e = b.length; k < e; k++) {
            var d = b[k], g = d.rowIndx, d = d.rowData;
            d[h] = !1;
            f.refreshCell({rowIndx: g, dataIndx: h})
        } else d && (d[h] = !1, g = a.rowIndx, f.refreshCell({rowIndx: g, dataIndx: h}));
        this.setValCBox()
    };
    h.onCheckBoxChange = function (c) {
        var a = this.that, f = this.column.cb, b = l(c.target), d = b.closest(".pq-grid-cell");
        if (d.length) {
            var d = a.getCellIndices({$td: d}), d = a.normalize(d), h = d.rowData, k = d.rowIndx, e = d.dataIndx;
            if (e == this.dataIndx) {
                var b = b[0].checked, g = {}, m = {};
                g[e] = b ? f.check : f.uncheck;
                m[e] = h[e];
                h = [{rowData: h, rowIndx: k, oldRow: m, newRow: g, type: "update"}];
                d.check = b;
                d.rows = h;
                if (!1 === a._trigger("beforeCheck", c, d))return a.refreshCell({rowIndx: k, dataIndx: e}), !1;
                h = {source: "checkbox", rowList: h};
                h.history = h.track = f.select ? !1 : null;
                if (!1 === a._digestData(h))return a.refreshCell({rowIndx: k, dataIndx: e}), !1;
                a.refreshRow({rowIndx: k});
                h = d.rows = h.rowList;
                a._trigger("check", c, d);
                f.select && a.selection({type: "row", method: b ? "add" : "remove", rows: h});
                this.setValCBox()
            }
        }
    };
    h.onCellKeyDown = function (c, a) {
        if (a.dataIndx == this.dataIndx && (13 == c.keyCode || 32 == c.keyCode))return l(c.originalEvent.target).find("input").click(),
            !1
    }
})(jQuery);
(function () {
    for (var l = 0, m = ["moz", "webkit"], h = 0; !window.requestAnimationFrame && h < m.length; h++)window.requestAnimationFrame = window[m[h] + "RequestAnimationFrame"], window.cancelAnimationFrame = window[m[h] + "CancelAnimationFrame"] || window[m[h] + "CancelRequestAnimationFrame"];
    window.requestAnimationFrame || (window.requestAnimationFrame = function (c) {
        var a = (new Date).getTime(), a = Math.max(0, 16 - (a - l));
        return window.setTimeout(function () {
            l = (new Date).getTime();
            c()
        }, a)
    });
    window.cancelAnimationFrame || (window.cancelAnimationFrame =
        function (c) {
            clearTimeout(c)
        })
})();
(function (l) {
    function m(c) {
        this.that = c;
        var a = this;
        this.borderBottomExtra = this.borderBottom = this.borderLeftExtra = this.borderLeft = this.borderTopExtra = this.borderTop = this.borderRightExtra = this.borderRight = this.scrollLeft = this.scrollTop = 0;
        this.maxBorder = 5E3;
        this.rowht = c.options.rowHeight;
        this.colwd = 60;
        c.on("contMouseDown", function (f, b) {
            return a._onContMouseDown(f, b)
        }).on("mouseDrag", function (f, b) {
            return a._onMouseDrag(f, b)
        }).on("mouseStop", function (f, b) {
            return a._onMouseStop(f, b)
        }).on("mousePQUp", function (f,
                                     b) {
            return a._onMousePQUp(f, b)
        }).on("rowMouseDown", function (f, b) {
            return a._onRowMouseDown(f, b)
        }).on("cellMouseDown", function (f, b) {
            return a._onCellMouseDown(f, b)
        }).on("refresh", function (a, b) {
            setTimeout(function () {
                c.element && c.focus()
            }, 0)
        }).on("cellMouseEnter", function (f, b) {
            return a._onCellMouseEnter(f, b)
        }).on("rowMouseEnter", function (f, b) {
            return a._onRowMouseEnter(f, b)
        })
    }

    l.paramquery.cMouseSelection = m;
    var h = m.prototype = new l.paramquery.cClass;
    h.inViewPort = function (c) {
        var a = this.that.iRefresh, f = a.getEContHt(),
            a = a.getEContWd() + 1;
        c = c[0];
        var b = this.scrollLeft;
        if (f >= c.offsetTop + c.offsetHeight + this.marginTop)if ("TD" == c.nodeName.toUpperCase()) {
            if (a >= c.offsetLeft + c.offsetWidth + b)return !0
        } else return !0
    };
    h._onCellMouseDown = function (c, a) {
        var f = this.that, b = a.rowIndx, d = f.iSelection, h = a.colIndx, k = f.options.selectionModel, e = k.mode;
        if ("cell" != k.type)f.focus(a); else if (null != h)return d = d.address()[0], c.shiftKey && "single" != e && d ? (e = d.firstR, d = d.firstC, f.range({
            r1: e,
            c1: d,
            r2: b,
            c2: h,
            firstR: e,
            firstC: d
        }).select()) : (this.mousedown =
        {r1: b, c1: h}, f.range({r1: b, c1: h, firstR: b, firstC: h}).select()), f.focus(a), !0
    };
    h._onCellMouseEnter = function (c, a) {
        var f = this.that, b = f.options.selectionModel, d = b.type, b = b.mode;
        if (this.mousedown && "single" != b) {
            if ("cell" == d) {
                var d = this.mousedown, b = d.r1, h = d.c1, k = a.rowIndx, e = a.colIndx;
                if (b == k && h == e || d.r2 == k && d.c2 == e)return;
                this.mousedown.r2 = k;
                this.mousedown.c2 = e;
                f.scrollCell({rowIndx: k, colIndx: e});
                f.range({r1: b, c1: h, r2: k, c2: e, firstR: b, firstC: h}).select()
            }
            f.focus(a)
        }
    };
    h._onRowMouseEnter = function (c, a) {
        var f =
            this.that, b = f.options.selectionModel, d = b.mode;
        "row" == b.type && this.mousedown && "single" != d && (b = this.mousedown.r1, d = a.rowIndx, b == d ? f.range({
            r1: b,
            firstR: b
        }, !1).select() : this.mousedown.r2 != d && (this.mousedown.r2 = d, f.scrollRow({rowIndx: d}), f.range({
            r1: b,
            r2: d,
            firstR: b
        }, !1).select()))
    };
    h._onRowMouseDown = function (c, a) {
        var f = this.that, b = a.rowIndx, d = f.iSelection, h;
        h = f.options.selectionModel;
        var k = l(c.originalEvent.target).hasClass("pq-grid-number-cell"), e = h.mode;
        if (("row" == h.type || h.row && k) && null != b)return h =
            f.iSelection.address(), c.shiftKey && "single" != e ? ((d = h.length) && "row" == h[d - 1].type && (d = h[d - 1], d.r1 = d.firstR, d.r2 = b, d.c1 = d.c2 = d.type = void 0), f.range(h).select()) : (c.ctrlKey || c.metaKey) && "single" != e ? (h = f.iRows.isSelected({rowIndx: b}), d[h ? "removeRow" : "add"]({
            r1: b,
            firstR: b
        })) : (this.mousedown = {r1: b, y1: c.pageY, x1: c.pageX}, f.range({
            r1: b,
            firstR: b
        }, !1).select()), k && setTimeout(function () {
            f.focus({rowIndxPage: a.rowIndxPage, colIndx: f.getFirstVisibleCI(!0)})
        }, 0), !0
    };
    h._onContMouseDown = function (c, a) {
        this.that.options.swipeModel.on &&
        (this._stopSwipe(!0), this.swipedown = {x: c.pageX, y: c.pageY});
        return !0
    };
    h._onMousePQUp = function (c, a) {
        this.mousedown = null
    };
    h._stopSwipe = function (c) {
        c && (this.swipedownPrev = this.swipedown = null);
        window.clearInterval(this.intID);
        window.cancelAnimationFrame(this.intID);
        this.intID = null
    };
    h._onMouseStop = function (c, a) {
        var f = this, b = this.that;
        if (this.swipedownPrev) {
            var d = b.options.swipeModel, b = this.swipedownPrev, h = b.ts, k = (new Date).getTime() - h, e = c.pageX, g = c.pageY, l = e - b.x, m = g - b.y;
            if (Math.sqrt(l * l + m * m) / k > d.ratio) {
                var z =
                    0, r = d.repeat;
                f._stopSwipe();
                var p = function () {
                    z += d.speed;
                    r--;
                    f._onMouseDrag({pageX: e + z * l / k, pageY: g + z * m / k});
                    0 < r ? f.intID = window.requestAnimationFrame(p) : f._stopSwipe(!0)
                };
                p()
            } else f.swipedown = null, f.swipedownPrev = null
        }
    };
    h._onMouseDrag = function (c, a) {
        var f = this.that.options;
        if (this.swipedown) {
            var b = this.swipedown, d = b.x, h = b.y, k = c.pageX, e = c.pageY;
            this.swipedownPrev = {x: d, y: h, ts: (new Date).getTime()};
            var g = f.scrollModel.smooth;
            if (!f.virtualY || g)this.scrollVertSmooth(h, e), this.syncScrollBarVert();
            if (!f.virtualX ||
                g)this.scrollHorSmooth(d, k), this.syncScrollBarHor();
            b.x = k;
            b.y = e
        }
        return !0
    };
    h.updateTableY = function (c) {
        if (0 == c)return !1;
        var a = this.that, f = this.getTableForVertScroll(), a = a.iRefresh.getEContHt();
        if (!f || !f.length)return !1;
        var b = f.data("offsetHeight") - 1, d = this.scrollTop - c;
        this.setScrollTop(0 > d ? 0 : 0 > c && 0 < a - b + d ? b - a : d, f, a);
        return !0
    };
    h.setScrollTop = function (c, a, f) {
        0 <= c && (this.scrollTop = c = Math.round(c), a.parent("div").scrollTop(c))
    };
    h.getScrollLeft = function (c) {
        return this.scrollLeft
    };
    h.getScrollTop = function (c) {
        return this.scrollTop
    };
    h.setScrollLeft = function (c, a, f, b) {
        0 <= c && (this.scrollLeft = c = Math.round(c), f = f ? f.parent() : l(), f = f.add(a ? a.parent("div") : l()), f.scrollLeft(c))
    };
    h.scrollVertSmooth = function (c, a) {
        c != a && this.updateTableY(a - c)
    };
    h.scrollHorSmooth = function (c, a) {
        if (c != a) {
            var f = this.that, b = f.options, d = a - c, h = this.getTableForHorScroll(), k = this.getTableHeaderForHorScroll(), f = f.iRefresh.getEContWd();
            if (h || k) {
                var e = h ? h : k, b = b.virtualX ? this.getScrollWidth(e) : e.data("scrollWidth"), d = this.scrollLeft - d;
                this.setScrollLeft(0 > d ? 0 : 0 > b - f -
                d ? b - f : d, h, k, f)
            }
        }
    };
    h.syncViewWithScrollBarVert = function (c) {
        if (null != c) {
            var a = this.that, f = this.getTableForVertScroll();
            if (f && f.length) {
                a.options.editModel.indices && a.blurEditor({force: !0});
                var b = f.data("offsetHeight"), a = a.iRefresh.getEContHt();
                if ((c *= b - a) || 0 === c)0 > c && (c = 0), this.setScrollTop(c, f, a)
            }
        }
    };
    h.syncViewWithScrollBarHor = function (c) {
        if (null != c) {
            var a = this.that, f = this.getTableForHorScroll(), b = this.getTableHeaderForHorScroll();
            if (f || b) {
                var d = a.options;
                d.editModel.indices && a.blurEditor({force: !0});
                var h = f ? f : b, d = d.virtualX ? this.getScrollWidth(h) : h.data("scrollWidth"), a = a.iRefresh.getEContWd();
                c *= d - a;
                d && a && (0 > c && (c = 0), this.setScrollLeft(c, f, b, a))
            }
        }
    };
    h.resetMargins = function () {
        this.scrollTop = this.scrollLeft = 0
    };
    h.syncHeaderViewWithScrollBarHor = function (c) {
        if (null != c) {
            var a = this.that, f = this.getTableHeaderForHorScroll();
            if (f) {
                var b = a.options, d = b.freezeCols;
                b.editModel.indices && a.blurEditor({force: !0});
                var b = f.data("scrollWidth"), h = a.iRefresh.getEContWd();
                c = a.calcWidthCols(d, c + d);
                b && h && (0 > c && (c = 0),
                    f.css("marginLeft", -c))
            }
        }
    };
    h.syncScrollBarVert = function () {
        var c = this.that, a = this.getTableForVertScroll();
        if (a && a.length) {
            var a = a.data("offsetHeight"), f = c.iRefresh.getEContHt(), a = this.scrollTop / (a - f);
            0 <= a && 1 >= a && c.vscroll.widget().hasClass("pq-sb-vert") && c.vscroll.option("ratio", a)
        }
    };
    h.syncScrollBarHor = function () {
        var c = this.that, a = c.options, f = this.getTableForHorScroll(), b = this.getTableHeaderForHorScroll();
        if (f || b)f = f ? f : b, a = a.virtualX ? this.getScrollWidth(f) : f.data("scrollWidth"), f = c.iRefresh.getEContWd(),
            a = this.scrollLeft / (a - f), 0 <= a && 1 >= a && c.hscroll.widget().hasClass("pq-sb-horiz") && c.hscroll.option("ratio", a)
    };
    h.getTableForVertScroll = function () {
        var c = this.that, a = c.pqpanes;
        if ((c = c.$tbl) && c.length)return a.h && a.v ? c = l([c[2], c[3]]) : a.v ? c = l([c[0], c[1]]) : a.h && (c = l(c[1])), c
    };
    h.getTableForHorScroll = function () {
        var c = this.that, a = c.pqpanes, f = [], b = c.$tbl;
        if (b && b.length)return a.h && a.v ? f.push(b[1], b[3]) : a.v ? f.push(b[1]) : a.h ? f.push(b[0], b[1]) : f.push(b[0]), c.tables.length && (c = c.tables[0].$tbl, a.v ? f.push(c[1]) :
            f.push(c[0])), l(f)
    };
    h.getTableHeaderForHorScroll = function () {
        var c = this.that, a = c.pqpanes;
        if ((c = c.$tbl_header) && c.length)return c = a.vH ? l(c[1]) : l(c[0]), c.parent()
    };
    h.scrollRowNonVirtual = function (c) {
        var a = this.that, f = a.options, b = c.rowIndxPage, d = c.rowIndx;
        c = a.iRefresh.getEContHt();
        b = null == b ? d - a.rowIndxOffset : b;
        f = parseInt(f.freezeRows);
        if (!(b < f)) {
            var f = a.get$Tbl(b), h = a.getRow({rowIndxPage: b})[0];
            h && (a = f[0].offsetTop + 1, b = h.offsetHeight, d = this.getScrollTop(), h = h.offsetTop - 1, 0 > a + h - d ? (a = a + h + -1, this.setScrollTop(0 >
            a ? 0 : a, f, c), this.syncScrollBarVert()) : h + b - d > c && (this.setScrollTop(b + h - c, f, c), this.syncScrollBarVert()))
        }
    };
    h.scrollColumnNonVirtual = function (c) {
        var a = this.that, f = c.colIndx, f = null == f ? a.getColIndx({dataIndx: c.dataIndx}) : f, b = a.options.freezeCols;
        if (!(f < b)) {
            c = a._calcRightEdgeCol(f).width;
            var f = a._calcRightEdgeCol(f - 1).width, b = a._calcRightEdgeCol(b - 1).width, d = this.getTableForHorScroll(), h = this.getTableHeaderForHorScroll(), a = a.iRefresh.getEContWd(), k = this.scrollLeft;
            c - k > a ? (this.setScrollLeft(c - a, d, h, a), this.syncScrollBarHor()) :
            f - b < k && (this.setScrollLeft(f - b, d, h, a), this.syncScrollBarHor())
        }
    }
})(jQuery);
(function (l) {
    var m = null, h = !1, c = "", a = l.paramquery.pqGrid.prototype, f = a.options, b = {
        on: !0,
        header: !0,
        zIndex: 1E4
    }, d = {on: !0}, n = {on: !0, compare: "byVal", select: !0, validate: !0, allowInvalid: !0, type: "replace"};
    f.pasteModel = f.pasteModel || n;
    f.copyModel = f.copyModel || b;
    f.cutModel = f.cutModel || d;
    a._setGlobalStr = function (a) {
        c = a
    };
    a.canPaste = function () {
        return c ? !0 : !1
    };
    a.copy = function () {
        m = new k(this);
        m.copy();
        m = null
    };
    a.paste = function (a) {
        m = new k(this);
        m.paste(a);
        m = null
    };
    a.cut = function () {
        m = new k(this);
        m.copy({cut: !0, source: "cut"});
        m = null
    };
    a.clear = function () {
        this.iSelection.clear()
    };
    var k = function (a, b) {
        this.that = a
    }, a = k.prototype;
    a.createClipBoard = function () {
        var a = l("#pq-grid-excel-div"), a = this.that.options.copyModel, b = l("#pq-grid-excel");
        0 == b.length && (a = l("<div id='pq-grid-excel-div'  style='position:fixed;top:20px;left:20px;height:1px;width:1px;overflow:hidden;z-index:" + a.zIndex + ";'/>").appendTo(document.body), b = l("<textarea id='pq-grid-excel' autocomplete='off' spellcheck='false' style='overflow:hidden;height:10000px;width:10000px;opacity:0' />").appendTo(a),
            b.css({opacity: 0}));
        b.select()
    };
    a.destroyClipBoard = function () {
        this.clearClipBoard();
        var a = this.that, b = l(window).scrollTop(), d = l(window).scrollLeft();
        a.focus();
        var a = l(window).scrollTop(), e = l(window).scrollLeft();
        b == a && d == e || window.scrollTo(d, b)
    };
    a.clearClipBoard = function () {
        l("#pq-grid-excel").val("")
    };
    a.copy = function (a) {
        return this.that.iSelection.copy(a)
    };
    a.paste = function (a) {
        a = a || {};
        var b = this.that, d = a.dest, e = a.clip, f = e ? e.length ? e.val() : "" : c, f = f.replace(/\n$/, ""), e = f.split("\n"), k = e.length, h, n = b.colModel,
            m = b.readCell, s = b.options.pasteModel, w = "row", x = !1, y = n.length;
        if (s.on && 0 != f.length && 0 != k) {
            f = {rows: e};
            if (!1 === b._trigger("beforePaste", null, f))return !1;
            var D = s.type, A, C, E, w = (d ? b.range(d) : b.selection())._areas;
            (E = w.length ? w[0] : null) && b.getRowData({rowIndx: E.r1}) ? (w = "row" == E.type ? "row" : "cell", A = E.r1, C = E.r2, d = E.c1, E = E.c2) : (w = "cell", E = d = C = A = 0);
            var F, K;
            "replace" == D ? (F = A, K = C - A + 1 < k ? "extend" : "repeat") : "append" == D ? (F = C + 1, K = "extend") : "prepend" == D && (F = A, K = "extend");
            var L, k = "extend" == K ? k : C - A + 1, N;
            A = 0;
            a = a.rowList ||
                [];
            for (var H = C = 0; H < k; H++) {
                var G = e[A], O = H + F, I = "replace" == D ? b.getRowData({rowIndx: O}) : null, J = I ? {} : null, P = {};
                void 0 === G && "repeat" === K && (A = 0, G = e[A]);
                A++;
                var M = G.split("\t");
                if (!h)if ("cell" == w) {
                    h = M.length;
                    L = E - d + 1 < M.length ? "extend" : "repeat";
                    h = "extend" == L ? h : E - d + 1;
                    if (isNaN(h))throw"lenH NaN. assert failed.";
                    h + d > y && (h = y - d)
                } else h = y, d = 0;
                var U = 0, Q = 0, G = 0;
                N = h;
                for (var V = M.length, Q = 0; Q < N; Q++) {
                    U >= V && (U = 0);
                    var T = n[Q + d], W = M[U], R = T.dataIndx;
                    !1 === T.copy ? (G++, "extend" == L && N + d < y && N++) : (U++, P[R] = W, J && (J[R] = m(I, T)))
                }
                !1 ==
                l.isEmptyObject(P) && (M = "update", null == I && (x = !0, M = "add"), a.push({
                    newRow: P,
                    rowIndx: O,
                    rowData: I,
                    oldRow: J,
                    type: M
                }), C++)
            }
            b._digestData({rowList: a, source: "paste", allowInvalid: s.allowInvalid, validate: s.validate});
            b[x ? "refreshView" : "refresh"]();
            s.select && ("cell" == w ? b.range({
                r1: F,
                c1: d,
                r2: F + C - 1,
                c2: "extend" == L ? d + h - 1 + G : E
            }).select() : b.range({r1: F, r2: F + C - 1}).select());
            b._trigger("paste", null, f)
        }
    };
    l(document).unbind(".pqExcel").bind("keydown.pqExcel", function (a) {
        if (a.ctrlKey || a.metaKey) {
            var b = l(a.target);
            if (b.hasClass("pq-grid-row") ||
                b.hasClass("pq-grid-cell") || b.is("#pq-grid-excel") || b.hasClass("pq-grid-cont")) {
                var d = b.closest(".pq-grid");
                if (m || b.length && d.length) {
                    if (!m) {
                        try {
                            var f = d.pqGrid("getInstance").grid;
                            if (f.option("selectionModel.native"))return !0
                        } catch (c) {
                            return !0
                        }
                        m = new k(f, b);
                        m.createClipBoard()
                    }
                    "67" == a.keyCode || "99" == a.keyCode ? m.copy({clip: l("#pq-grid-excel")}) : "88" == a.keyCode ? m.copy({
                        cut: !0,
                        clip: l("#pq-grid-excel")
                    }) : "86" == a.keyCode || "118" == a.keyCode ? (h = !0, m.clearClipBoard(), window.setTimeout(function () {
                        m && (m.paste({clip: l("#pq-grid-excel")}),
                            m.destroyClipBoard(), m = null);
                        h = !1
                    }, 0)) : (b = l("#pq-grid-excel"), b.length && document.activeElement == b[0] && m.that._onKeyPressDown(a))
                }
            }
        } else if (b = a.keyCode, d = l.ui.keyCode, b == d.UP || b == d.DOWN || b == d.LEFT || b == d.RIGHT || b == d.PAGE_UP || b == d.PAGE_DOWN) {
            if (e)return !1;
            b = l(a.target);
            if (b.hasClass("pq-grid-row") || b.hasClass("pq-grid-cell"))e = !0
        }
    }).bind("keyup.pqExcel", function (a) {
        var b = a.keyCode;
        h || !m || a.ctrlKey || a.metaKey || -1 == l.inArray(b, [17, 91, 93, 224]) || (m.destroyClipBoard(), m = null);
        e && (a = l(a.target), a.hasClass("pq-grid-row") ||
        a.hasClass("pq-grid-cell") || (e = !1))
    });
    var e = !1
})(jQuery);
(function (l) {
    var m = l.paramquery.pqGrid.prototype.options, h = {
        on: !0,
        checkEditable: !0,
        checkEditableAdd: !1,
        allowInvalid: !0
    };
    m.historyModel = m.historyModel || h;
    m = (l.paramquery.cHistory = function (c) {
        var a = this;
        this.that = c;
        this.options = c.options;
        this.records = [];
        this.id = this.counter = 0;
        c.on("keyDown", function (f, b) {
            return a._onKeyDown(f, b)
        }).on("dataAvailable", function (f, b) {
            "filter" != b.source && a.reset()
        })
    }).prototype = new l.paramquery.cClass;
    m._onKeyDown = function (c, a) {
        var f = c.ctrlKey || c.metaKey;
        if (f && "90" == c.keyCode)return this.undo(),
            !1;
        if (f && "89" == c.keyCode)return this.redo(), !1
    };
    m.resetUndo = function () {
        if (0 == this.counter)return !1;
        this.counter = 0;
        this.that._trigger("history", null, {
            type: "resetUndo",
            num_undo: 0,
            num_redo: this.records.length - this.counter,
            canUndo: !1,
            canRedo: !0
        })
    };
    m.reset = function () {
        if (0 == this.counter && 0 == this.records.length)return !1;
        this.records = [];
        this.id = this.counter = 0;
        this.that._trigger("history", null, {num_undo: 0, num_redo: 0, type: "reset", canUndo: !1, canRedo: !1})
    };
    m.increment = function () {
        var c = this.records, a = c.length;
        this.id = a ? c[a - 1].id + 1 : 0
    };
    m.push = function (c) {
        var a = this.canRedo(), f = this.records, b = this.counter;
        f.length > b && f.splice(b, f.length - b);
        f[b] = l.extend({id: this.id}, c);
        this.counter++;
        c = this.that;
        var d, h;
        1 == this.counter && (d = !0);
        a && this.counter == f.length && (h = !1);
        c._trigger("history", null, {type: "add", canUndo: d, canRedo: h, num_undo: this.counter, num_redo: 0})
    };
    m.canUndo = function () {
        return 0 < this.counter ? !0 : !1
    };
    m.canRedo = function () {
        return this.counter < this.records.length ? !0 : !1
    };
    m.processCol = function (c, a) {
        var f = this.that;
        if (c.length) {
            var b = "add" == c.type;
            f[(a ? b : !b) ? "addColumn" : "deleteColumn"]({colList: c, history: !1})
        }
    };
    m.undo = function () {
        var c = this.canRedo(), a = this.that, f = !1, b = this.options.historyModel, d = this.records;
        if (0 < this.counter)this.counter--; else return !1;
        for (var h = d[this.counter], d = (d = h.rowList) ? d : [], h = (h = h.colList) ? h : [], k = [], e = 0, g = d.length; e < g; e++) {
            var l = d[e], m = l.newRow, z = l.rowData, r = l.type, p = l.oldRow, l = l.rowIndx;
            "update" == r ? (l = a.getRowIndx({rowData: z}).rowIndx, k.push({
                type: r,
                rowIndx: l,
                rowData: z,
                oldRow: m,
                newRow: p
            })) :
                "add" == r ? (f = !0, k.push({
                    type: "delete",
                    rowData: m
                })) : "delete" == r && (f = !0, k.push({type: "add", rowIndx: l, newRow: z}))
        }
        h.length ? this.processCol(h) : (a._digestData({
            history: !1,
            source: "undo",
            checkEditable: b.checkEditable,
            checkEditableAdd: b.checkEditableAdd,
            allowInvalid: b.allowInvalid,
            rowList: k
        }), a[f ? "refreshView" : "refresh"]({source: "undo"}));
        var v, q;
        !1 === c && (v = !0);
        0 == this.counter && (q = !1);
        a._trigger("history", null, {
            canUndo: q,
            canRedo: v,
            type: "undo",
            num_undo: this.counter,
            num_redo: this.records.length - this.counter
        });
        return !0
    };
    m.redo = function () {
        var c = this.canUndo(), a = this.that, f = this.options.historyModel, b = this.counter, d = this.records;
        if (b == d.length)return !1;
        for (var h = !1, k = d[b], b = (b = k.rowList) ? b : [], k = (k = k.colList) ? k : [], e = [], g = 0, l = b.length; g < l; g++) {
            var m = b[g], z = m.newRow, r = m.rowData, p = m.type, v = m.oldRow, m = m.rowIndx;
            "update" == p ? (m = a.getRowIndx({rowData: r}).rowIndx, e.push({
                type: p,
                rowIndx: m,
                rowData: r,
                oldRow: v,
                newRow: z
            })) : "add" == p ? (h = !0, e.push({
                type: "add",
                rowIndx: m,
                newRow: z
            })) : "delete" == p && (h = !0, e.push({
                type: "delete",
                rowData: r
            }))
        }
        k.length ? this.processCol(k, !0) : (a._digestData({
            history: !1,
            source: "redo",
            checkEditable: f.checkEditable,
            checkEditableAdd: f.checkEditableAdd,
            allowInvalid: f.allowInvalid,
            rowList: e
        }), a[h ? "refreshView" : "refresh"]({source: "redo"}));
        this.counter < d.length && this.counter++;
        var q, u;
        !1 == c && (q = !0);
        this.counter == this.records.length && (u = !1);
        a._trigger("history", null, {
            canUndo: q,
            canRedo: u,
            type: "redo",
            num_undo: this.counter,
            num_redo: this.records.length - this.counter
        });
        return !0
    };
    l.paramquery.pqGrid.prototype.history =
        function (c) {
            return this.iHistory[c.method](c)
        }
})(jQuery);
(function (l) {
    var m = l.paramquery;
    m.filter = function () {
        var a = {
            begin: {text: "Begins With", TR: !0, string: !0},
            between: {text: "Between", TR: !0, string: !0, date: !0, number: !0},
            notbegin: {text: "Does not begin with", TR: !0, string: !0},
            contain: {text: "Contains", TR: !0, string: !0},
            notcontain: {text: "Does not contain", TR: !0, string: !0},
            equal: {text: "Equal To", TR: !0, string: !0, bool: !0},
            notequal: {text: "Not Equal To", TR: !0, string: !0},
            empty: {text: "Empty", TR: !1, string: !0, bool: !0},
            notempty: {text: "Not Empty", TR: !1, string: !0, bool: !0},
            end: {text: "Ends With", TR: !0, string: !0},
            notend: {text: "Does not end with", TR: !0, string: !0},
            less: {text: "Less Than", TR: !0, number: !0, date: !0},
            lte: {text: "Less than or equal", TR: !0, number: !0, date: !0},
            range: {TR: !0, string: !0, number: !0, date: !0},
            regexp: {TR: !0, string: !0, number: !0, date: !0},
            great: {text: "Great Than", TR: !0, number: !0, date: !0},
            gte: {text: "Greater than or equal", TR: !0, number: !0, date: !0}
        };
        return {
            conditions: a, getAllConditions: function () {
                var f = [], b;
                for (b in a)f.push(b);
                return f
            }(), getConditions: function (f) {
                var b =
                    [], d;
                for (d in a)a[d][f] && b.push(d);
                return b
            }, getTRConditions: function () {
                var f = [], b;
                for (b in a)a[b].TR && f.push(b);
                return f
            }(), getWTRConditions: function () {
                var f = [], b;
                for (b in a)a[b].TR || f.push(b);
                return f
            }()
        }
    }();
    m.filter.rules = {};
    m.filter.rules.en = {
        begin: "Begins With",
        between: "Between",
        notbegin: "Does not begin with",
        contain: "Contains",
        notcontain: "Does not contain",
        equal: "Equal To",
        notequal: "Not Equal To",
        empty: "Empty",
        notempty: "Not Empty",
        end: "Ends With",
        notend: "Does not end with",
        less: "Less Than",
        lte: "Less than or equal",
        great: "Great Than",
        gte: "Greater than or equal"
    };
    var h = function (a) {
        this.that = a;
        a.on("load", function () {
            var f = a.options.dataModel.dataUF;
            f && (f.length = 0)
        })
    };
    m.cFilterData = h;
    var c = h.prototype;
    h.conditions = {
        equal: function (a, f, c, t) {
            // if (t=='date')//THANHHUYEN b? sung ki?m tra do ki?u date ko so s�nh ???c
            //     if (a.getTime() == f.getTime())return !0
            if (a == f)return !0
        }, contain: function (a, f) {
            if (-1 != a.indexOf(f))return !0
        }, notcontain: function (a, f) {
            if (-1 == a.indexOf(f))return !0
        }, empty: function (a) {
            if (0 == a.length)return !0
        }, notempty: function (a) {
            if (0 < a.length)return !0
        }, begin: function (a, f) {
            if (0 == (a + "").indexOf(f))return !0
        },
        notbegin: function (a, f) {
            if (0 != a.indexOf(f))return !0
        }, end: function (a, f) {
            var b = a.lastIndexOf(f);
            if (-1 != b && b + f.length == a.length)return !0
        }, notend: function (a, f) {
            var b = a.lastIndexOf(f);
            if (-1 == b || b + f.length != a.length)return !0
        }, regexp: function (a, f) {
            if (f.test(a))return f.lastIndex = 0, !0
        }, notequal: function (a, f) {
            if (a != f)return !0
        }, great: function (a, f) {
            if (a > f)return !0
        }, gte: function (a, f) {
            if (a >= f)return !0
        }, between: function (a, f, b) {
            if (a >= f && a <= b)return !0
        }, range: function (a, f) {
            if (-1 != l.inArray(a, f))return !0
        }, less: function (a,
                           f) {
            if (a < f)return !0
        }, lte: function (a, f) {
            if (a <= f)return !0
        }
    };
    h.convert = function (a, f) {
        a = null == a ? "" : a;//THANHHUYEN
        "string" == f ? a = l.trim(a).toUpperCase() : "date" == f ? (a =Date.parse(a)) : "integer" == f ? a = parseInt(a) : "float" == f ? a = parseFloat(a) : "bool" == f && (a = String(a).toLowerCase());
        return a
    };
    c.isMatchCellSingle = function (a, f) {
        var b = a.dataType, d = a.value, c = a.value2, k = a.cbFn, e = f[a.dataIndx], e = "regexp" == a.condition ? null == e ? "" : e : h.convert(e, b);
        return k(e, d, c, b) ? !0 : !1
    };
    c.isMatchRow = function (a, f, b) {
        if (0 == f.length)return !0;
        for (var d = 0; d <
        f.length; d++) {
            var c = this.isMatchCell(f[d], a);
            if ("OR" == b && c)return !0;
            if ("AND" == b && !c)return !1
        }
        if ("AND" == b)return !0;
        if ("OR" == b)return !1
    };
    c.getQueryStringFilter = function () {
        var a = this.that, f = a.options, b = f.stringify, f = f.filterModel, d = f.mode, a = this.getFilterData({
            CM: a.colModel,
            location: "remote"
        }), c = "";
        f && f.on && a && (a.length ? (f = {mode: d, data: a}, c = !1 === b ? f : JSON.stringify(f)) : c = "");
        return c
    };
    c.filterLocalData = function (a) {
        a = a || {};
        var f = this.that, b = a.apply, b = null == b ? !0 : b;
        a = this.getFilterData({
            CM: b ? f.colModel :
                a.CM
        });
        var d = f.options, c = d.dataModel, k = f.iSort, e = c.data, g = [], h = [], l = c.dataUF, m = d.filterModel, r = m.multiple, d = m ? m.mode : null;
        e || (e = c.data = []);
        l || (l = c.dataUF = []);
        !1 === b && (e = e.slice());
        if (l.length) {
            for (var p = 0, v = l.length; p < v; p++)e.push(l[p]);
            0 == k.readSorter().length && k.sortLocalData(e);
            l = c.dataUF = []
        } else if (a.length)k.saveOrder(); else return {data: e, dataUF: l};
        this.isMatchCell = r ? this.isMatchCellMultiple : this.isMatchCellSingle;
        if (m.on && d && a && a.length) {
            if (e.length)for (p = 0, v = e.length; p < v; p++)k = e[p], this.isMatchRow(k,
                a, d) ? g.push(k) : h.push(k);
            e = g;
            l = h;
            b && (c.data = e, c.dataUF = l)
        }
        b && (f._queueATriggers.filter = {ui: {type: "local", filter: a}});
        return {data: e, dataUF: l}
    };
    c.getFilterData = function (a) {
        var c = a.CM;
        if (!c)throw"CM N/A";
        var b = c.length, d = a.location;
        a = this.that.options.filterModel.multiple;
        for (var h = m.filter.getAllConditions, k = m.filter.getTRConditions, e = [], g = m.cFilterData, t = function (a, b, d) {
            return "function" == typeof a ? !0 : "between" == a ? null != b && "" !== b || null != d && "" !== d ? !0 : !1 : -1 != l.inArray(a, h) ? null != b && "" !== b || -1 == l.inArray(a,
                k) ? !0 : !1 : !0
        }, B = function (a, b) {
            return "remote" == d ? (null == a ? "" : a).toString() : g.convert(a, b)
        }, z = 0; z < b; z++) {
            var r = c[z], p = r.dataIndx, v = r.dataType, v = v && "function" != typeof v ? v : "string", q = r.filter;
            if (a) {
                if ((q = r.filterModel) && q.on) {
                    for (var u = [], s = q.mode, w = q.filters, r = 0; r < w.length; r++) {
                        var q = w[r], x = q.value, y = q.condition;
                        t(y, x) && (x = B(x, v), u.push({value: x, condition: y}))
                    }
                    e.push({dataIndx: p, mode: s, dataType: v, filters: u})
                }
            } else if (q && q.on && (x = q.value, u = q.value2, y = q.condition, t(y, x, u))) {
                if ("between" == y)"" === x || null ==
                x ? (y = "lte", x = B(u, v)) : "" === u || null == u ? (y = "gte", x = B(x, v)) : (x = B(x, v), u = B(u, v)); else if ("regexp" == y)if ("remote" == d)x = x.toString(); else {
                    if ("string" == typeof x)try {
                        var D = q.modifiers, D = D ? D : "gi", x = new RegExp(x, D)
                    } catch (A) {
                        x = /.*/
                    }
                } else if ("range" == y)if (null == x)continue; else if ("string" == typeof x)x = B(x, v), x = x.split(/\s*,\s*/); else {
                    if (x && "function" == typeof x.push) {
                        if (0 == x.length)continue;
                        x = x.slice();
                        r = 0;
                        for (q = x.length; r < q; r++)x[r] = B(x[r], v)
                    }
                } else x = B(x, v);
                e.push({
                    dataIndx: p, value: x, value2: u, condition: y, dataType: v,
                    cbFn: "remote" == d ? "" : "function" == typeof y ? y : g.conditions[y]
                })
            }
        }
        return e
    }
})(jQuery);
(function (l) {
    l = (l.paramquery.cSort = function (h) {
        this.that = h;
        this.sorters = [];
        this.tmpPrefix = "pq_tmp_";
        this.cancel = !1
    }).prototype;
    l.cancelSort = function () {
        this.cancel = !0
    };
    l.resumeSort = function () {
        this.cancel = !1
    };
    l.readSorter = function () {
        var h = this.that, c = h.options, a = c.groupModel, f, h = h.columns, b = 0, d, n, k = [];
        if (a.on)for (f = a.dataIndx, d = f.length, n = a.dir; b < d; b++)a = f[b], k.push({
            dataIndx: a,
            dir: n[b] ? n[b] : "up"
        });
        f = c.sortModel;
        c = f.sorter;
        f = f.single;
        if (c && (d = c.length)) {
            for (; d--;)null == h[c[d].dataIndx] && c.splice(d,
                1);
            f && c.length && (c = [c[0]]);
            k = k.concat(c)
        }
        return k = pq.arrayUnique(k, "dataIndx")
    };
    l.setSingle = function (h) {
        this.single = h
    };
    l.getSingle = function () {
        return this.single
    };
    l.readSingle = function () {
        return this.that.options.sortModel.single
    };
    l.writeSingle = function (h) {
        this.that.options.sortModel.single = h
    };
    l.setCancel = function (h) {
        this.cancel = h
    };
    l.getCancel = function () {
        return this.cancel
    };
    l.readCancel = function () {
        return this.that.options.sortModel.cancel
    };
    l.writeCancel = function (h) {
        this.that.options.sortModel.cancel =
            h
    };
    l.writeSorter = function (h) {
        var c = this.that.options, a = c.sortModel, f = c.groupModel, c = f.dataIndx, b = f.dir;
        if (f.on) {
            for (f = 0; f < c.length; f++) {
                var d = h[f];
                if (c[f] != d.dataIndx)throw"gDataIndx!=sorter.dataIndx";
                b[f] = d.dir
            }
            h.splice(0, c.length)
        }
        a.sorter = h
    };
    l.refreshSorter = function (h) {
        h = h || {};
        var c = h.sorter, a = c[0].dataIndx, f = c[0].dir, b = h.single, c = h.cancel, d = this.that.options.groupModel, n = d.dataIndx, k = d.on ? n.length : 0, e = -1;
        h = this.readSorter();
        if (null == b)throw"sort single N/A";
        if (d.on)for (d = 0; d < k; d++)n[d] == a && (e =
            d);
        -1 < e ? h[e].dir = "up" === h[e].dir ? "down" : "up" : null != a && (b ? h[k] && h[k].dataIndx == a ? (a = h[k].dir, a = "up" === a ? "down" : c && "down" === a ? "" : "up", "" === a ? h.length-- : h[k].dir = a) : h[k] = {
            dataIndx: a,
            dir: f ? f : "up"
        } : (k = this.inSorters(h, a), -1 < k ? (a = h[k].dir, "up" == a ? h[k].dir = "down" : c && "down" == a ? h.splice(k, 1) : 1 == h.length ? h[k].dir = "up" : h.splice(k, 1)) : h.push({
            dataIndx: a,
            dir: "up"
        })));
        return h
    };
    l.saveOrder = function (h) {
        var c = this.that.options.dataModel;
        h = c.data;
        if (!(!h || !h.length || c.dataUF && c.dataUF.length || this.getSorter().length &&
            null != h[0].pq_order))for (var c = 0, a = h.length; c < a; c++)h[c].pq_order = c
    };
    l.getQueryStringSort = function () {
        if (this.cancel)return "";
        var h = this.sorters, c = this.that.options.stringify;
        return h.length ? !1 === c ? h : JSON.stringify(h) : ""
    };
    l.getSorter = function () {
        return this.sorters
    };
    l.setSorter = function (h) {
        this.sorters = h.slice(0)
    };
    l.inSorters = function (h, c) {
        for (var a = -1, f = 0; f < h.length; f++)if (h[f].dataIndx == c) {
            a = f;
            break
        }
        return a
    };
    l.sortLocalData = function (h) {
        for (var c = this.that, a = c.colModel, f = this.sorters, b = 0; b < f.length; b++) {
            var d =
                f[b], n = c.getColIndx({dataIndx: d.dataIndx}), n = a[n], k = n.sortType;
            d.dataType = n.dataType;
            d.sortType = k
        }
        f.length || (f = [{dataIndx: "pq_order", dir: "up", dataType: "integer"}]);
        return this._sortLocalData(f, h)
    };
    l._sortLocalData = function (h, c) {
        if (null == c)return [];
        if (0 == c.length || !h || !h.length)return c;
        var a = this, f = a.tmpPrefix, b = a.that.options.sortModel, d = b.useCache, n = b.ignoreCase;
        (function () {
            for (var b = [], e = [], g = [], l = h.length, B = 0; B < l; B++) {
                var z = h[B], r = z.dataIndx, p = "up" == z.dir ? 1 : -1, v = z.sortType, z = (z = z.dataType) ? z :
                    "string", z = "string" == z && n ? "stringi" : z, q = d && "date" == z, u = q ? f + r : r;
                e[B] = u;
                g[B] = p;
                b[B] = v ? function (a, b) {
                    return function (d, e, c, f) {
                        return b(d, e, c, f, a)
                    }
                }(v, m.sort_sortType) : "integer" == z ? m.sort_number : "float" == z ? m.sort_number : "function" == typeof z ? function (a, b) {
                    return function (d, e, c, f) {
                        return b(d, e, c, f, a)
                    }
                }(z, m.sort_dataType) : "date" == z ? m["sort_date" + (q ? "_fast" : "")] : "bool" == z ? m.sort_bool : "stringi" == z ? m.sort_locale : m.sort_string;
                q && a.useCache(c, z, r, u)
            }
            c = c.sort(function (a, d) {
                for (var c = 0, f = 0; f < l && (c = b[f](a, d, e[f],
                    g[f]), 0 == c); f++);
                return c
            });
            q && setTimeout(a.removeCache(h, c), 0)
        })();
        return c
    };
    l.useCache = function (h, c, a, f) {
        c = m["get_" + c];
        for (var b = h.length; b--;) {
            var d = h[b];
            d[f] = c(d[a])
        }
    };
    l.removeCache = function (h, c) {
        var a = this.tmpPrefix;
        return function () {
            for (var f = h.length; f--;) {
                var b = a + h[f].dataIndx, d = c.length;
                if (d && c[0].hasOwnProperty(b))for (; d--;)delete c[d][b]
            }
        }
    };
    var m = {
        get_date: function (h) {
            var c;
            return h ? isNaN(c = Date.parse(h)) ? 0 : c : 0
        }, sort_number: function (h, c, a, f) {
            h = h[a];
            c = c[a];
            return ((h ? 1 * h : 0) - (c ? 1 * c : 0)) * f
        },
        sort_date: function (h, c, a, f) {
            h = h[a];
            c = c[a];
            h = h ? Date.parse(h) : 0;
            c = c ? Date.parse(c) : 0;
            return (h - c) * f
        }, sort_date_fast: function (h, c, a, f) {
            return (h[a] - c[a]) * f
        }, sort_dataType: function (h, c, a, f, b) {
            return b(h[a], c[a]) * f
        }, sort_sortType: function (h, c, a, f, b) {
            return b(h, c, a) * f
        }, sort_string: function (h, c, a, f) {
            h = h[a];
            c = c[a];
            a = 0;
            h = h ? h : "";
            c = c ? c : "";
            h > c ? a = 1 : h < c && (a = -1);
            return a * f
        }, sort_locale: function (h, c, a, f) {
            h = h[a];
            c = c[a];
            return (h ? h : "").localeCompare(c ? c : "") * f
        }, sort_bool: function (h, c, a, f) {
            h = h[a];
            c = c[a];
            a = 0;
            if (h && !c || !1 ===
                h && null === c)a = 1; else if (c && !h || !1 === c && null === h)a = -1;
            return a * f
        }
    };
    pq.sortObj = m
})(jQuery);
(function (l) {
    function m(a) {
        this.that = a;
        this.mc = null;
        var b = this, d = a.options;
        this.DM = d.dataModel;
        a.on("dataReady columnOrder groupShowHide", function (a, c) {
            d.mergeCells && "pager" !== c.source && b.init()
        })
    }

    function h(a, b, d) {
        var c = 0, k = a.length;
        for (d = d > k ? k : d; b < d; b++)!0 !== a[b].hidden && c++;
        return c
    }

    function c(a, b, d) {
        var c = 0, k = a.length;
        for (d = d > k ? k : d; b < d; b++)!0 !== a[b].pq_hidden && c++;
        return c
    }

    l.paramquery.cMerge = m;
    var a = m.prototype = new l.paramquery.cClass;
    a.init = function () {
        for (var a = this.that, b = a.colModel, d = a.options.mergeCells ||
            [], n = a.get_p_data(), k = [], e = [], g = 0, l = d.length; g < l; g++) {
            var m = d[g], z = m.r1, r = z, p = n[z], v = m.c1, q = v, u = b[v], s = m.rc, w = m.cc;
            if (u && p) {
                if (u.hidden)a:{
                    for (q = v; q < v + w; q++) {
                        u = b[q];
                        if (!u) {
                            q = -1;
                            break a
                        }
                        if (!u.hidden)break a
                    }
                    q = void 0
                }
                u = h(b, v, v + w);
                if (p.pq_hidden)a:{
                    for (r = z; r < z + s; r++) {
                        p = n[r];
                        if (!p) {
                            r = -1;
                            break a
                        }
                        if (!p.pq_hidden)break a
                    }
                    r = void 0
                }
                p = c(n, z, z + s);
                if (!(1 > p || 1 > u))for (k.push({
                    r1: z,
                    c1: v,
                    rc: s,
                    cc: w,
                    e_rc: p,
                    e_cc: u
                }), e[r] = e[r] || [], e[r][q] = {
                    show: !0,
                    rowspan: p,
                    colspan: u,
                    o_rowspan: s,
                    o_colspan: w,
                    style: m.style,
                    cls: m.cls,
                    attr: m.attr,
                    r1: z,
                    c1: v,
                    v_r1: r,
                    v_c1: q
                }, m = {
                    show: !1,
                    r1: z,
                    c1: v,
                    v_r1: r,
                    v_c1: q
                }, p = z; p < z + s; p++)for (e[p] = e[p] || [], u = v; u < v + w; u++)if (p != r || u != q)e[p][u] = m
            }
        }
        a._mergeCells = 0 < e.length;
        this.mc = e;
        this.mc2 = k
    };
    a.isHidden = function (a, b) {
        var d, c = this.mc;
        return c && c[a] && (d = c[a][b]) && !d.show ? !0 : !1
    };
    a.setData = function (a, b, d) {
        var c, k = this.mc;
        k[a] && (c = k[a][b]) && (c.data = d)
    };
    a.getData = function (a, b, d) {
        var c, k = this.mc;
        if (k[a] && (c = k[a][b]))return (a = c.data) ? a[d] : null
    };
    a.removeData = function (a, b, d) {
        var c, k = this.mc;
        k && k[a] && (c = k[a][b]) && (a = c.data) &&
        (a[d] = null)
    };
    a.ismergedCell = function (a, b) {
        var d = this.mc, c;
        return d && d[a] && (c = d[a][b]) ? (d = d[c.v_r1][c.v_c1], a == d.r1 && b == d.c1 ? {
            rowspan: d.o_rowspan,
            colspan: d.o_colspan
        } : !0) : !1
    };
    a.isRootCell = function (a, b, d) {
        var c = this.mc, k;
        if (c && c[a] && (k = c[a][b])) {
            if ("o" == d)return a == k.r1 && b == k.c1;
            var e = k.v_r1;
            k = k.v_c1;
            if ("a" == d)return d = c[e][k], d.a_r1 == a && d.a_c1 == b;
            if (e == a && k == b)return d = c[e][k], {rowspan: d.rowspan, colspan: d.colspan}
        }
    };
    a.getRootCell = function (a, b, d) {
        var c = this.that, k = this.mc, e;
        if (k && k[a] && (e = k[a][b])) {
            "a" ==
            d ? (a = e.v_r1, b = e.v_c1, d = k[a][b], d.a_r1 && (a = d.a_r1, b = d.a_c1)) : "o" == d ? (a = e.r1, b = e.c1) : (a = e.v_r1, b = e.v_c1);
            d = c.colModel[b];
            var k = c.rowIndxOffset, g = a - k;
            0 > g && (g = 0, a = k);
            return {
                rowIndxPage: g,
                colIndx: b,
                column: d,
                dataIndx: d.dataIndx,
                rowData: c.getRowData({rowIndx: a}),
                rowIndx: a,
                rowspan: e.rowspan,
                colspan: e.colspan
            }
        }
        return c.normalize({rowIndx: a, colIndx: b})
    };
    a.inflateRange = function (a, b, d, c) {
        var k = this.that, e = !1, g = k.options, g = g.groupModel.on ? k.rowIndxOffset + k.pdata.length - 1 : g.dataModel.data.length - 1, k = k.colModel.length -
            1, h = this.mc2;
        if (!h)return [a, b, d, c];
        var l = 0, m = h.length;
        a:for (; l < m; l++) {
            var r = h[l], p = r.r1, v = r.c1, q = p + r.rc - 1, r = v + r.cc - 1, q = q > g ? g : q, r = r > k ? k : r, u = p <= d && q > d, s = v < b && r >= b, w = v <= c && r > c;
            if ((p < a && q >= a || u) && r >= b && v <= c || (s || w) && q >= a && p <= d) {
                e = !0;
                a = p < a ? p : a;
                b = v < b ? v : b;
                d = q > d ? q : d;
                c = r > c ? r : c;
                break a
            }
        }
        return e ? this.inflateRange(a, b, d, c) : [a, b, d, c]
    };
    l.paramquery.pqGrid.prototype.calcVisibleRows = c;
    a.renderCell = function (a) {
        var b = this.that, d = a.rowIndx, n = a.rowIndxPage, k = a.colIndx, e, g = this.mc, l;
        if (g[d] && (l = g[d][k])) {
            var m = l.v_r1,
                z = l.v_c1;
            e = l.r1;
            var r = l.c1, p = b.options, v = b.colModel, q = b.rowIndxOffset, u = p.freezeCols, s = (p = p.freezeRows) ? p + q : 0, w = b.initH, x = b.initV;
            if (l.show || k == z && n == x && m >= s || k == z && d == x && m >= s || d == m && k == w && z >= u || d == x && k == w && z >= u && m >= s) {
                l = e - q;
                n = b.pdata;
                b = b.get_p_data();
                e = {rowData: b[e], rowIndx: e, colIndx: r, column: v[r], rowIndxPage: l};
                g = g[m][z];
                l = g.colspan;
                var y = g.rowspan, D = h(v, k, u), r = c(n, d - q, p);
                u && k < u && l > D ? (z = l - h(v, u, w), l = Math.max(z, D)) : l -= h(v, z, k);
                p && d > q && d < s && y > r ? (m = y - c(n, p, x), y = Math.max(m, r)) : y -= c(b, m, d);
                g.a_r1 = d;
                g.a_c1 = k;
                e.rowspan = y;
                e.colspan = l;
                e.style = g.style;
                e.attr = g.attr;
                e.cls = g.cls
            } else return null
        }
        return e ? e : a
    };
    a.getMergeCells = function (a, b, d) {
        for (var c = this.that, k = c.options.mergeCells, e, g, c = c.rowIndxOffset, h = c + d, l = [], m = k ? k.length : 0, r = 0; r < m; r++)if (d = k[r], e = d.r1, g = d.c1, !b || e >= c && e < h)b && (e -= c), e += a, l.push({
            r1: e,
            c1: g,
            r2: e + d.rc - 1,
            c2: g + d.cc - 1
        });
        return l
    }
})(jQuery);
(function () {
    var l = window.pq = window.pq || {};
    l.extend = function (a, d, c) {
        var f = function () {
        };
        f.prototype = a.prototype;
        var f = d.prototype = new f, e = a.prototype, g;
        for (g in c) {
            var h = e[g], l = c[g];
            f[g] = h ? function (a, b) {
                return function () {
                    this._super = function () {
                        return a.apply(this, arguments)
                    };
                    var d = b.apply(this, arguments);
                    this._super = void 0;
                    return d
                }
            }(h, l) : l
        }
        f.constructor = d;
        f._base = a;
        f._bp = function (a) {
            var b = arguments;
            Array.prototype.shift.call(b);
            return e[a].apply(this, b)
        }
    };
    var m = l.Range = function (a, d, c, f) {
        if (null == a)throw"invalid param";
        this.that = a;
        if (!1 == this instanceof m)return new m(a, d, c, f);
        this._type = c ? c : "range";
        this.init(d, f)
    }, h = m.prototype;
    h._areas = [];
    h.init = function (a, d) {
        d = !1 !== d;
        if (a)if ("function" == typeof a.push)for (var c = 0, f = a.length; c < f; c++)this.init(a[c], d); else if (c = this._normal(a, d))f = this._areas, f.length ? f.push(c) : this._areas = [c]
    };
    h.address = function () {
        this.dirty && this.refresh();
        return this._areas
    };
    h.areas = function (a) {
        this.dirty && this.refresh();
        var d = this.that, c = this._areas, c = null == a ? c : c[a];
        return l.Range(d, c, "area")
    };
    h.merge = function (a) {
        a = a || {};
        var d = this.that, c = d.options.mergeCells, f, e, g = this._areas[0];
        g && (f = g.r2 - g.r1 + 1, e = g.c2 - g.c1 + 1, 1 < f || 1 < e) && (g.rc = f, g.cc = e, c.push(g), !1 !== a.refresh && d.refreshView())
    };
    h.unmerge = function (a) {
        a = a || {};
        var d = this.that, c = d.options.mergeCells, f = this._areas[0];
        if (f) {
            for (var e = 0; e < c.length; e++) {
                var g = c[e];
                if (g.r1 == f.r1 && g.c1 == f.c1) {
                    c.splice(e, 1);
                    break
                }
            }
            !1 !== a.refresh && d.refreshView()
        }
    };
    h.hide = function (a) {
        a = a || {};
        for (var d = this.that, c = d.colModel, f = d.get_p_data(), e = this._areas, g = 0, h = e.length; g <
        h; g++) {
            var l = e[g], m = l.type, r = l.r1, p = l.r2, v = l.c1, l = l.c2;
            if ("column" == m)for (m = v; m <= l; m++)c[m].hidden = !0; else if ("row" == m)for (m = r; m <= p; m++)f[m].pq_hidden = !0
        }
        !1 !== a.refresh && d.refreshView()
    };
    h.unhide = function (a) {
        a = a || {};
        for (var d = this.that, c = d.colModel, f = d.get_p_data(), e = this._areas, g = 0, h = e.length; g < h; g++) {
            var l = e[g], m = l.type, r = l.r1, p = l.r2, v = l.c1, l = l.c2;
            if ("column" == m)for (m = v; m <= l; m++)c[m].hidden = !1; else if ("row" == m)for (m = r; m <= p; m++)f[m].pq_hidden = !1
        }
        !1 !== a.refresh && d.refreshView()
    };
    h.select = function () {
        var a =
            this.that, d = a.iSelection, c = d._areas[0], f = this._areas, e = f[0];
        if (!e)return this;
        var g = e.r1, h = e.c1;
        if (d.dirty || 1 != f.length || "block" != f[0].type || !c || "cell" != c.type && "block" != c.type || g != c.r1 || h != c.c1)for (d.removeAll({trigger: !1}), g = 0, h = f.length; g < h; g++)d.add(f[g], !1); else {
            var l = c.r1, m = c.c1, r = c.r2, c = c.c2, p = e.r2, e = e.c2, a = a.iCells;
            if (p == r && e == c)return this;
            e > c ? a.selectBlock({
                range: {
                    r1: g,
                    c1: c + 1,
                    r2: p,
                    c2: e
                }
            }) : e < c && a.selectBlock({
                range: {r1: Math.max(g, l), c1: e + 1, r2: Math.max(p, r), c2: c},
                remove: !0
            });
            p > r ? a.selectBlock({
                range: {
                    r1: r +
                    1, c1: h, r2: p, c2: e
                }
            }) : p < r && a.selectBlock({
                range: {r1: p + 1, c1: Math.max(h, m), r2: r, c2: Math.max(e, c)},
                remove: !0
            });
            d._areas = f
        }
        d._trigger();
        return this
    };
    h.resize = function (a, d) {
        var c = this._areas[0];
        return m(this.that, {r1: c.r1, c1: c.c1, rc: a, cc: d})
    };
    h.cut = function (a) {
        a = a || {};
        a.cut = !0;
        return this.copy(a)
    };
    h.copy = function (a) {
        a = a || {};
        this.dirty && this.refresh();
        var d = this.that, c = a.dest, f = a.cut ? !0 : !1, e = null == a.copy ? !0 : a.copy, g = a.source || (f ? "cut" : "copy"), h = null == a.history ? !0 : a.history, l = null == a.allowInvalid ? !0 : a.allowInvalid,
            m = [], r = [], p = d.get_p_data(), v = d.colModel, q = d.readCell, u = d.iMerge, s = this._areas;
        if (s.length) {
            var w = this._areas[0], x = w.type, y = w.r1, D = w.c1, A = "cell" == x ? y : w.r2, w = "cell" == x ? D : w.c2, C = 0;
            do {
                for (; y <= A; y++) {
                    for (var E = [], F = p[y], K = {}, L = {}, N = D; N <= w; N++) {
                        var H = v[N], G = H.dataIndx;
                        if (!1 !== H.copy) {
                            var O = F[G];
                            e && E.push(q(F, H, u, y, N));
                            f && (K[G] = void 0, L[G] = O)
                        }
                    }
                    f && m.push({rowIndx: y, rowData: F, oldRow: L, newRow: K, type: "update"});
                    E = E.join("\t");
                    r.push(E)
                }
                C++;
                w = s[C];
                if ("row" == x && w && "row" == w.type)y = w.r1, D = w.c1, A = w.r2, w = w.c2; else break
            } while (1);
            e && (E = r.join("\n"), a.clip ? (a = a.clip, a.val(E), a.select()) : d._setGlobalStr(E));
            c ? d.paste({dest: c, rowList: m, history: h, allowInvalid: l}) : f && !1 !== d._digestData({
                rowList: m,
                source: g,
                history: h,
                allowInvalid: l
            }) && d.refresh({source: "cut"})
        }
    };
    h.clear = function () {
        return this.copy({copy: !1, cut: !0, source: "clear"})
    };
    h.add = function (a) {
        this.init(a)
    };
    h._countArea = function (a) {
        var d = a.r1, c = a.c1, f = a.r2, e = a.c2;
        return "cell" == a.type ? 1 : (f - d + 1) * (e - c + 1)
    };
    h.count = function () {
        this.dirty && this.refresh();
        for (var a = "range" == this._type,
                 d = this._areas, c = 0, f = d.length, e = 0; e < f; e++)c += a ? this._countArea(d[e]) : 1;
        return c
    };
    h.rows = function (a) {
        this.dirty && this.refresh();
        var d = this.that, c = [], f = this._areas[0];
        if (f) {
            var e = f.r1, g = f.c1, h = f.r2, m = f.c2, f = f.type, h = null == a ? h : e + a;
            for (a = null == a ? e : e + a; a <= h; a++)c.push({r1: a, c1: g, r2: a, c2: m, type: f})
        }
        return l.Range(d, c, "row")
    };
    h.columns = function (a) {
        this.dirty && this.refresh();
        var d = this.that, c = [], f = this._areas[0];
        if (f) {
            var e = f.r1, g = f.c1, h = f.r2, m = f.c2, f = f.type, m = null == a ? m : g + a;
            for (a = null == a ? g : g + a; a <= m; a++)c.push({
                r1: e,
                c1: a, r2: h, c2: a, type: f
            })
        }
        return l.Range(d, c, "column")
    };
    h.cell = function (a, d) {
        this.dirty && this.refresh();
        var c = this.that, f = [], e = this._areas[0];
        e && (f = e.r1 + a, e = e.c1 + d, f = [f, e, f, e]);
        return l.Range(c, f, "cell")
    };
    h.item = function (a) {
        this.dirty && this.refresh();
        for (var d = 0, c = !1, f = this._areas, e = 0, g = f.length; e < g; e++) {
            var h = f[e], l = this._countArea(h);
            if (d + l > a) {
                c = !0;
                a -= d;
                break
            } else d += l
        }
        if (c) {
            if (h)var m = h.r1, r = h.c1, d = h.c2 - r + 1, m = m + Math.floor(a / d), r = r + a % d;
            return {r1: m, c1: r}
        }
    };
    h._normal = function (a, d) {
        if (a.type)return a;
        if ("function" == a.push) {
            for (var c = [], f = 0, e = a.length; f < e; f++) {
                var g = this._normal(a[f], d);
                g && c.push(g)
            }
            return c
        }
        var c = this.that, h = c.get_p_data().length - 1, l = c.colModel.length - 1, f = a.r1, e = a.c1, f = f > h ? h : f, e = e > l ? l : e, m = a.rc, r = a.cc, g = a.r2, p = a.c2, g = m ? f + m - 1 : g > h ? h : g, p = r ? e + r - 1 : p > l ? l : p;
        if (0 > l || 0 > h)return null;
        f > g && (m = f, f = g, g = m);
        e > p && (m = e, e = p, p = m);
        if (null != f || null != e)return null == f ? (f = 0, g = h, p = null == p ? e : p, h = "column") : null == e ? (e = 0, g = null == g ? f : g, p = l, h = "row") : null == g ? (h = "cell", g = f, p = e) : h = "block", d && (c = c.iMerge.inflateRange(f,
            e, g, p), f = c[0], e = c[1], g = c[2], p = c[3]), a.r1 = f, a.c1 = e, a.r2 = g, a.c2 = p, a.type = a.type || h, a
    };
    h.value = function (a) {
        a = a || {};
        a = a.val;
        this.dirty && this.refresh();
        var d = this.that, c = d.colModel, f = [], e = this._areas;
        if (void 0 === a && e.length) {
            var g = e[0], h = g.r1, l = g.c1;
            return d.getCellData({rowIndx: h, colIndx: l})
        }
        for (var m = 0; m < e.length; m++)for (var g = e[m], h = g.r1, l = g.c1, r = g.r2, g = g.c2; h <= r; h++) {
            for (var p = d.normalize({rowIndx: h}), v = p.rowData, p = p.rowIndx, q = {}, u = {}, s = l; s <= g; s++) {
                var w = c[s].dataIndx;
                u[w] = a;
                q[w] = v[w]
            }
            f.push({
                rowData: v,
                rowIndx: p, type: "update", newRow: u, oldRow: q
            })
        }
        f.length && (d._digestData({rowList: f, source: "range"}), d.refresh())
    };
    var c = l.Selection = function (a, d) {
        if (null == a)throw"invalid param";
        if (!1 == this instanceof c)return new c(a, d);
        this.that = a;
        var f = this;
        a.on("dataReady columnOrder addColumn deleteColumn", function (a, b) {
            "pager" != b.source && f.renew()
        });
        this._base(a, d)
    }, a = {
        renew: function () {
            this.dirty = !0
        }, isDirty: function () {
            return this.dirty
        }
    }, f = function (a) {
        a.shiftKey && "pqGrid:mousePQUp" != a.type || (this._trigger("selectEnd",
            null, {selection: this.selection()}), this.off("mousePQUp", f), this.off("keyUp", f))
    };
    a._trigger = function () {
        var a = this.that;
        this.dirty && this.refresh();
        a._trigger("selectChange", null, {selection: this});
        a.off("mousePQUp", f);
        a.off("keyUp", f);
        a.on("mousePQUp", f);
        a.on("keyUp", f)
    };
    a.removeAll = function (a) {
        a = a || {};
        var d = this.that;
        d.iCells.removeAll({refresh: !0});
        d.iRows.removeAll({refresh: !0, all: !0});
        this._areas = [];
        !1 !== a.trigger && this._trigger()
    };
    h.indexOf = function (a) {
        this.dirty && this.refresh();
        a = this._normal(a);
        var d = a.type, c = a.r1, f = a.c1, e = a.r2;
        a = a.c2;
        for (var g = this._areas, h = 0, l = g.length; h < l; h++) {
            var m = g[h], r = m;
            if (d == m.type && c >= r.r1 && e <= r.r2 && f == r.c1 && a == r.c2)return h
        }
        return -1
    };
    a.add = function (a, d) {
        var c = this.that, f = this._normal(a, !0), e = c.iCells, c = c.iRows, g = f.r1, h = f.c1, l = f.r2, m = f.type;
        0 <= this.indexOf(f) || ("row" == m ? (e = this._areas, e.length && (e = e[e.length - 1], m = e.type, "row" == m && g <= e.r2 && (this.dirty = !0)), l > g ? c.selectRange({range: f}) : c.add({rowIndx: g})) : "column" == m || "block" == m ? e.selectBlock({range: f}) : "cell" ==
        m && e.add({rowIndx: g, colIndx: h}), this._super(f), !1 !== d && this._trigger())
    };
    a._adjust = function (a) {
        var d = this.that, c = d.get_p_data().length - 1, d = d.colModel.length - 1, f = a.r1, e = a.c1, g = a.r2, h = a.c2, g = g > c ? c : g, h = h > d ? d : h;
        if (0 > d || 0 > c || f > g || e > h)return null;
        a.r1 = f;
        a.r2 = g;
        a.c1 = e;
        a.c2 = h;
        return a
    };
    h.removeRow = function (a, d) {
        var c = a.r1, f = a.r2, e = this._areas, g = this._areas[d], h = g.r1, l = g.r2;
        c == h && f == l ? e.splice(d, 1) : c > h ? (g.r2 = c - 1, f < l && (c = this._normal({
            r1: f + 1,
            r2: l
        }), e.splice(d + 1, 0, c))) : f < l && (c > h && (c = this._normal({r1: f + 1, r2: l}),
            e.splice(d, 0, c)), g.r1 = f + 1)
    };
    a.removeRow = function (a, d) {
        var c = this.that, f = this._normal(a), e = this.indexOf(f);
        -1 < e && "row" == f.type && f.r1 == f.r2 && (c.iRows.remove({rowIndx: f.r1}), this._super(a, e), !1 !== d && this._trigger())
    };
    a.selectAll = function (a) {
        a = a || {};
        var d = this.that, c = a.all, f = c ? 0 : d.rowIndxOffset, e = d.colModel.length - 1, g = f + (c ? d.options.dataModel.data.length - 1 : d.pdata.length - 1);
        "cell" == a.type ? (a = {
            r1: f,
            c1: 0
        }, a.r2 = g, a.c2 = e, d.range(a).select()) : (a = {r1: f}, a.r2 = g, c || this.removeRows({
            all: !1,
            trigger: !1
        }), d.iRows.selectRange({range: a}),
            d = c ? [] : this._areas, d.push({
            r1: f,
            c1: 0,
            r2: g,
            c2: e,
            type: "row"
        }), this._areas = d, this._trigger());
        return this
    };
    a.removeRows = function (a) {
        a = a || {};
        var d = a.all;
        this.that.iRows.removeAll({refresh: !0, all: a.all});
        d ? this._areas = [] : this.refresh();
        !1 !== a.trigger && this._trigger()
    };
    a.refresh = function () {
        for (var a = this.that, d = [], c = a.colModel.length - 1, a = a.get_p_data(), f = 0, e = a.length; f < e; f++) {
            var g = a[f], h;
            g && (g.pq_cellselect = void 0, g.pq_rowselect ? h ? h.r2 = f : h = {
                r1: f,
                r2: f,
                c1: 0,
                c2: c,
                type: "row"
            } : h && (d.push(h), h = null))
        }
        h && d.push(h);
        this.dirty = !1;
        this._areas = d
    };
    l.extend(m, c, a)
})();
(function (l) {
    function m(a, c, b, d) {
        a.push("<li data-option='", b, "' class='pq-menu-item'>", "<label>", "<input type='checkbox' ", c[b] ? "checked" : "", "/>", d["strGroup_" + b], "</label></li>")
    }

    var h = l.paramquery;
    pq.aggregate = {
        sum: function (a) {
            for (var c = 0, b = a.length, d; b--;)d = a[b], null != d && (c += d - 0);
            return c
        }, avg: function (a, c) {
            return this.sum(a, c, !0) / a.length
        }, max: function (a, c) {
            var b;
            b = c.dataType;
            "float" == b || "integer" == b ? b = Math.max.apply(Math, a) : "date" == b ? (a.sort(function (a, b) {
                a = Date.parse(a);
                b = Date.parse(b);
                isNaN(a) &&
                (a = 0);
                isNaN(b) && (b = 0);
                return b - a
            }), b = a[0]) : (a.sort(), b = a[a.length - 1]);
            return b
        }, min: function (a, c) {
            var b;
            b = c.dataType;
            var d, h;
            if ("integer" == b || "float" == b)b = Math.min.apply(Math, a); else if ("date" == b) {
                h = a.length;
                for (b = []; h--;)(d = a[h]) && b.push({dateO: d, dateP: Date.parse(d)});
                b.sort(function (a, b) {
                    return a.dateP - b.dateP
                });
                b = b.length ? b[0].dateO : void 0
            } else a.sort(), b = a[0];
            return b
        }, count: function (a) {
            return a.length
        }
    };
    var c = (h.cGroupView = function (a) {
        this.that = a;
        a.options.groupModel.on && this.init()
    }).prototype;
    c.init = function () {
        var a, c, b, d;
        this._init || (this.mc = [], this.tree = [], this.summaryData = [], d = this.that, a = d.options, c = a.groupModel, a = a.bootstrap, b = (a = a.on) ? "glyphicon " : "ui-icon ", this.groupRemoveIcon = "pq-group-remove " + b + (a ? "glyphicon-remove" : "ui-icon-close"), this.toggleIcon = "pq-group-toggle " + b, d.on("cellClick", this.onCellClick(this)).on("cellKeyDown", this.onCellKeyDown(this, c)).on(!0, "cellMouseDown", this.onCellMouseDown()).on("change", this.onChange(this, c)).on("dataReady", this.onDataReady(this, d)).on("beforeSortDone",
            this.onBeforeSort(this, d)).on("columnDragDone", this.onColumnDrag(this)).on("columnOrder", this.onColumnOrder(this)), this._init = !0)
    };
    c.onCellClick = function (a) {
        return function (c, b) {
            b.rowData.pq_gtitle && l(c.originalEvent.target).hasClass("pq-group-icon") && a.toggle(b.rowIndxPage)
        }
    };
    c.onChange = function (a, c) {
        return function () {
            a.saveState(c.refreshOnChange)
        }
    };
    c.onCellMouseDown = function () {
        return function (a, c) {
            c.rowData.pq_gtitle && l(a.originalEvent.target).hasClass("pq-group-icon") && a.stopImmediatePropagation()
        }
    };
    c.onCellKeyDown = function (a, c) {
        return function (b, d) {
            if (d.rowData.pq_gtitle && 0 <= l.inArray(d.dataIndx, c.dataIndx) && b.keyCode == l.ui.keyCode.ENTER)return a.toggle(d.rowIndxPage), !1
        }
    };
    c.showRows = function () {
        for (var a = this.that.options.dataModel.data, c = 0, b = a.length; c < b; c++)a[c].pq_hidden = !1
    };
    c.removeGroup = function (a, c) {
        for (var b = this.that.options.groupModel.dataIndx, d = 0; d < b.length; d++)if (a == b[d]) {
            b.splice(d, 1);
            break
        }
        b.length || (this.showRows(), this.mc.length = 0);
        !1 !== c && this.refreshFull()
    };
    c.addGroup = function (a,
                           c) {
        var b = this.that.options.groupModel;
        b.dataIndx = b.dataIndx || [];
        null != a && -1 == l.inArray(a, b.dataIndx) && (b.dataIndx.push(a), this.refreshFull())
    };
    c._initHeadSortable = function () {
        this.$header.sortable({
            axis: "x",
            distance: 3,
            tolerance: "pointer",
            cancel: ".pq-group-menu",
            stop: this.onSortable(this, this.that.options)
        })
    };
    c.onColumnDrag = function (a) {
        return function (c, b) {
            var d = b.column.colModel;
            d && d.length ? a.acceptDrop = !1 : a._initHeadDroppable()
        }
    };
    c._initHeadDroppable = function () {
        var a = this, c = a.that, b = a.$header;
        b &&
        (b.droppable({
            accept: function (b) {
                return a.acceptDrop
            }, tolerance: "pointer", hoverClass: "pq-drop-hover", drop: a.onDrop(c, a)
        }), a.acceptDrop = !0)
    };
    c.onDrop = function (a, c) {
        return function (b, d) {
            var h = 1 * d.draggable.attr("pq-col-indx");
            c.addGroup(a.colModel[h].dataIndx);
            c.acceptDrop = !1
        }
    };
    c.onSortable = function (a, c) {
        return function () {
            for (var b = [], d = c.groupModel, h = d.dataIndx, k = [], e = !1, g = l(this).find(".pq-group-item"), m = 0; m < g.length; m++) {
                var B = l(g[m]), z = B.data("indx"), B = B.data("dir");
                h[m] != z && (e = !0);
                b.push(z);
                k.push(B)
            }
            e &&
            (d.dataIndx = b, d.dir = k, a.refreshFull())
        }
    };
    c._initHeader = function (a, c) {
        if (this.$header) {
            var b = this.$header, d = b.find(".pq-group-item");
            b.data("uiSortable") || this._initHeadSortable();
            d.length || b.append("<span class='pq-group-placeholder'>" + a.strGroup_header + "</span>");
            c.headerMenu && this._initHeaderMenu()
        }
    };
    c.createHeader = function () {
        for (var a = this, c = a.that, b = a.$header, d = c.options, h = d.bootstrap, k = c.columns, e = h.on, g = d.groupModel, m = g.dataIndx, B = m.length; B--;)null == k[m[B]] && m.splice(B, 1);
        B = m.length;
        if (g.header &&
            g.on) {
            b ? b.empty() : (b = a.$header = l("<div class='pq-group-header ui-helper-clearfix' ></div>").appendTo(c.$top), b.on("click", ".pq-group-item", function (b) {
                b = l(b.target);
                var c = l(this).data("indx");
                b.hasClass("pq-group-remove") ? a.removeGroup(c) : a.groupToggle(c)
            }));
            if (B) {
                for (var c = [], z = 0; z < B; z++) {
                    var r = m[z], p = k[r], v = e ? h.groupModel.icon : g.icon;
                    c.push("<div class='pq-group-item' data-indx='", r, "' data-dir='", g.dir[z], "'>", "<span class='", a.toggleIcon, g.collapsed[z] ? v[1] : v[0], "' ></span>", p.pqtitle || ("string" == typeof p.title ? p.title : r), "<span class='", a.groupRemoveIcon, "' ></span></div>")
                }
                b[0].innerHTML = c.join("")
            }
            a._initHeader(d, g)
        } else b && (b.remove(), a.$header = null)
    };
    c._initHeaderMenu = function () {
        for (var a = this.that, c = a.options, b = this.$header, d = ["<ul class='pq-group-menu'><li>", a.BS_on ? "<span class='glyphicon glyphicon-chevron-left'></span>" : "", "<ul>"], h = c.groupModel, k = h.menuItems, e = 0, g = k.length; e < g; e++)m(d, h, k[e], c);
        d.push("</ul></li></ul>");
        b = l(d.join("")).appendTo(b);
        b.menu({
            icons: {submenu: "ui-icon-carat-1-w"},
            position: {my: "right top", at: "left top"}
        });
        b.change(function (b) {
            if ("INPUT" == b.target.nodeName) {
                b = l(b.target).closest("li").data("option");
                var d = {};
                d[b] = !c.groupModel[b];
                d.refresh = !0;
                a.groupOption(d)
            }
        })
    };
    c.setOption = function () {
        this._init && (this.refreshColumns(), this.summaryData.length = 0, this.tree.length = 0, this._initmerge())
    };
    c.onDataReady = function (a, c) {
        return function () {
            a.tree.length = 0;
            var b = c.options.groupModel;
            b.on && (b.dataIndx.length ? (a.refreshColumns(), a._groupData(), a._initcollapsed(), a._initmerge()) :
            b.grandSummary && (a.refreshColumns(), a._groupData()));
            a.createHeader()
        }
    };
    c.onColumnOrder = function (a) {
        return function () {
            a._initmerge()
        }
    };
    c.pq_gc_ = function () {
        return "pq_gc_"
    };
    c.onBeforeSort = function (a, c) {
        return function (b) {
            if (!b.isDefaultPrevented()) {
                var d = c.options, h = d.groupModel;
                if (h.on) {
                    b = c.columns;
                    for (var k = [], d = d.dataModel.data || [], e = [], g, l, m = h.dataIndx, z = m.length; z--;) {
                        var r = m[z];
                        g = b[r];
                        var p = g.groupChange;
                        if (p)for (k.push(g), h = a.pq_gc_() + r, e.push(h), g.sortType = a.sortType(h), l = d.length; l--;)g = d[l],
                            g[h] = p(g[r])
                    }
                    c.one("sort", function () {
                        if (z = k.length)for (; z--;)k[z].sortType = void 0
                    })
                }
            }
        }
    };
    c.sortType = function (a) {
        return function (c, b, d) {
            return c[a] != b[a] ? c[d] - b[d] : 0
        }
    };
    c.groupToggle = function (a) {
        var c = this.that.options.groupModel, b = c.collapsed;
        a = l.inArray(a, c.dataIndx);
        b[a] = !b[a];
        this.trigger(null, a);
        this.refreshView()
    };
    c.expandIndx = function (a) {
        var c = this.that, b = !0 == a.close;
        a = a.indx.split(",");
        var d = a.length, h = this.tree, k, e, g;
        k = 0;
        var l, c = c.pdata;
        if (!(d > h.length)) {
            for (var m = 0; m < d; m++) {
                l = 1 * a[m] + k;
                k = h[m][l];
                if (!k) {
                    if (0 == m)return;
                    break
                }
                k = k.rip;
                if (!b || b && m == d - 1)e = c[k], e.pq_close != b && (g = e, e.pq_close = b);
                e = h[m + 1];
                var z = void 0;
                if (e) {
                    do z = e[l].rip, l++; while (z < k);
                    k = l - 1
                } else k = void 0
            }
            g && (this.trigger(g), this.saveState(!0))
        }
    };
    c._editorSummary = function (a, c) {
        var b = a.summaryOptions;
        return function (a) {
            var h = a.rowData;
            if (h.pq_gsummary || h.pq_gtitle) {
                var h = pq.aggregate, k = a.column, e = k.summary, e = e ? e.edit : null, g = k.dataType, k = [""];
                if (-1 < l.inArray(a.dataIndx, c.dataIndx) || !c.summaryEdit && !e || !1 === e)return !1;
                "integer" == g ||
                "float" == g ? g = "number" : "date" !== g && (g = "string");
                e = b[g].split(",");
                a = l.inArray;
                for (var m in h)-1 < a(m, e) && k.push(m);
                return 1 == k.length ? !1 : {
                    type: "select",
                    prepend: c.prepend,
                    options: c.options || k,
                    valueIndx: c.valueIndx,
                    labelIndx: c.labelIndx,
                    init: c.init || function (a) {
                        var b = a.column.summary, c;
                        b || (b = a.column.summary = {});
                        c = b.type;
                        setTimeout(function () {
                            a.$cell.find("select").val(c)
                        }, 100)
                    },
                    getData: c.getData || function (a) {
                        var b = a.column;
                        a = a.$cell.find("select").val();
                        b.summary.type = a;
                        this.one("beforeValidate", function (a,
                                                             b) {
                            b.allowInvalid = !0;
                            b.track = !1;
                            b.history = !1
                        });
                        return a
                    }
                }
            }
        }
    };
    c._renderTitle = function (a, c) {
        var b = this.that, d = a.bootstrap, h = d.on, d = h ? d.groupModel.icon : c.icon, k = h ? ["glyphicon " + d[0], "glyphicon " + d[1]] : ["ui-icon " + d[0], "ui-icon " + d[1]];
        return function (a) {
            var d = a.rowData, h, l, n;
            if (d.pq_gtitle && null != a.cellData)return h = d.pq_close, l = d.pq_level, n = c.title, n = n[l] ? n[l] : c.titleDefault, n = "function" === typeof n ? n.call(b, a) : n.replace("{0}", a.cellData).replace("{1}", d.pq_items), {
                text: (a.Export ? "" : "<span class='pq-group-icon " +
                k[h ? 1 : 0] + "'></span>") + n, cls: "pq-group-title-cell"
            }
        }
    };
    c._renderSummary = function (a) {
        var c = this.that;
        return function (b) {
            var d = b.rowData, h, k;
            if (d.pq_gsummary || d.pq_gtitle) {
                d = b.column;
                h = d.summary.type;
                k = a.summaryTitle[h];
                if ("function" == typeof k)return k.call(c, b);
                h = b.formatVal;
                null == h && (h = b.cellData, h = null == h ? "" : h);
                "number" != typeof h || d.format || parseInt(h) === h || (h = h.toFixed(2));
                return k ? k.replace("{0}", h) : h
            }
        }
    };
    c.refreshColumns = function () {
        for (var a = this.that, c = a.options, b = c.groupModel, d = b.on, h = b.fixCols,
                 k, e, g, l, m = b.dataIndx, z = m.length, r = c.colModel, p = r.length; p--;)g = r[p], g._render && (g._render == g._renderGT ? (delete g._renderGT, delete g._render) : g._render == g._renderGS && (delete g._renderGS, delete g._render)), g._nodrag && (delete g._nodrag, delete g._nodrop), d && (l = g.summary) && l.type && (e = e || this._renderSummary(c), g._render = g._renderGS = e);
        c.geditor = d ? this._editorSummary(c, b) : void 0;
        if (d)for (p = z - 1; 0 <= p; p--)g = a.getColumn({dataIndx: m[p]}), k = k || this._renderTitle(c, b), g._renderGT = g._render = k;
        if (h && d)for (p = 0; p < z; p++)c =
            a.getColIndx({dataIndx: m[p]}), g = r[c], g._nodrag = g._nodrop = !0, c != p && (a.iDragColumns.moveColumn(c, p, !0), a.iColModel.init())
    };
    c.refreshFull = function () {
        this.refreshColumns();
        this.that.sort()
    };
    c.refreshView = function () {
        this.that.refreshView()
    };
    c.expandAll = function (a) {
        a = a || {};
        a = !0 == a.close;
        var c = this.that.options.groupModel, b = c.collapsed, c = c.dataIndx, d;
        for (d = 0; d < c.length; d++)b[d] = a;
        this.trigger(null, null, !0);
        this.refreshFull()
    };
    c.showHideRows = function (a, c, b, d) {
        for (var h = [], k = this.that.pdata, e = k.length; a <
        e; a++) {
            var g = k[a];
            if (g.pq_gsummary)if (g.pq_level < c)break; else g.pq_hidden = b; else if (g.pq_gtitle) {
                var l = g.pq_close;
                l && h.push({indx: a, level: g.pq_level});
                if (g.pq_level <= c)break; else g.pq_hidden = d && !l ? !0 : b
            } else g.pq_hidden = b
        }
        return h
    };
    c.trigger = function (a, c, b) {
        var d = this.that, h = d.options.groupModel, k = {};
        a ? (c = a.pq_level, b = a[h.dataIndx[c]], a = a.pq_close, k = {
            level: c,
            close: a,
            group: b
        }) : b ? (a = h.collapsed[0], k = {all: !0, close: a}) : null != c && (a = h.collapsed[c], k = {
            level: c,
            close: a
        });
        d._trigger("group", null, k)
    };
    c.toggle =
        function (a) {
            a = this.that.pdata[a];
            a.pq_close = a.pq_close ? !1 : !0;
            this.trigger(a);
            this.saveState(!0)
        };
    c.saveState = function (a) {
        var c = this.that, b = c.options.groupModel;
        if (b.on && b.dataIndx.length) {
            for (var b = c.pdata, d = b.length, h = Array(d), k = 0; k < d; k++)h[k] = b[k];
            this.pdata = h;
            a && c.refreshView()
        }
    };
    c._initmerge = function () {
        for (var a = this.that, c = a.options, b = c.groupModel.merge, d = this.tree, h = a.rowIndxOffset, k, e, g, l, m, z = a.colModel.length, r = [], p = a.pdata, v = 0; v < d.length; v++) {
            k = d[v];
            g = a.getColIndx({dataIndx: c.groupModel.dataIndx[v]});
            for (var q = 0, u = k.length; q < u; q++) {
                e = k[q];
                l = e.rip;
                if (null == l)break;
                b ? (e = e.rip2, m = e - l, e = l + h, r.push({
                    r1: e,
                    rc: m,
                    c1: g,
                    cc: 1
                })) : (e = l + h, l = p[l], l.pq_close || r.push({r1: e, rc: 1, c1: g, cc: z - g}))
            }
        }
        r.length ? (this.mc = c.mergeCells = r, a.iMerge.init()) : this.mc.length && (this.mc.length = 0, a.iMerge.init())
    };
    c._initcollapsed = function () {
        var a = this.that, c = a.options.groupModel.merge, b = this.pdata, a = a.pdata, d, h, k, e;
        if (a) {
            for (var g = 0, l = a.length; g < l; g++)d = a[g], h = d.pq_gtitle, void 0 !== h && (h = d.pq_level, e = null, b && (k = (k = b[g]) ? k.pq_close :
                null, null != k && (e = d.pq_close = k)), null == e && (e = d.pq_close), e ? this.showHideRows(g + 1, h, !0) : c && (d.pq_hidden = !0));
            delete this.pdata
        }
    };
    c._groupChange = function (a) {
        var c = l.trim, b = this.pq_gc_();
        return function (d, h, k) {
            if (k.groupChange)return d = d[b + h], null != d ? d : "";
            d = c(d[h]);
            return a ? d.toUpperCase() : d
        }
    };
    c._groupData = function () {
        var a = this.that, c = pq.aggregate, b = a.pdata, d = a.options, h = d.groupModel, k = h.merge, e = h.grandSummary, g = l.inArray, m = a.colModel, B = m.length, z = this._groupChange(h.ignoreCase), r = b.length, p = h.dataIndx,
            v = p.length, q = h.collapsed || [], u = [], s = {}, w = a.columns, x = [], y, h = h.showSummary || [], D = [];
        if (b && 0 < r) {
            for (var A = v - 1; 0 <= A; A--)h[A] = null != h[A] ? h[A] : !1, q[A] = null != q[A] ? q[A] : !1, D[A] = (D[A + 1] ? D[A + 1] : 0) + h[A], x[A] = w[p[A]];
            for (y = 0; y < B; y++) {
                var C = m[y], E = C.dataIndx, F = C.summary;
                F && F.type && -1 == g(E, p) && (u.push({column: C}), s[E] = Array(r - 1))
            }
            y = u.length;
            g = [];
            m = [];
            B = [];
            w = [];
            for (A = 0; A < v; A++)w[A] = null, B[A] = "", m[A] = [];
            for (var K = 0; K <= r; K++) {
                for (var L = b[K], E = !1, N = null, A = 0; A < v; A++) {
                    B[A] = K < r ? z(L, p[A], x[A]) : "";
                    if (w[A] != B[A] || K == r)E = !0, null == N && (N = A);
                    if (E) {
                        var C = m[A], H = C[C.length - 1];
                        H && (H.rip2 = g.length + D[A]);
                        C.push({rowIndx: K, title: B[A]})
                    }
                }
                if (E) {
                    if (0 < K)for (A = v - 1; A >= N; A--) {
                        for (var H = {}, C = m[A], G = C.length - 2 ? C[C.length - 2].rip : A, O = C.length - 2 ? C[C.length - 2].rowIndx : 0, I = C[C.length - 1].rowIndx, J = 0; J < y; J++) {
                            var C = u[J].column, F = C.summary, F = F.type, E = C.dataIndx, P = "", P = s[E].slice(O, I), P = c[F](P, C);
                            H[E] = P
                        }
                        if (h[A]) {
                            var C = {pq_gsummary: !0, pq_level: A, pq_rowcls: "pq-summary-row"}, M;
                            for (M in H)C[M] = H[M];
                            g.push(C)
                        }
                        C = g[G];
                        for (M in H)C[M] = H[M];
                        k && (C.pq_rowcls =
                            "pq-summary-row");
                        C.pq_items = I - O
                    }
                    if (K == r)break;
                    for (A = 0; A < v; A++)w[A] = B[A];
                    for (A = N; A < v; A++)C = {
                        pq_gtitle: !0,
                        pq_level: A,
                        pq_close: q[A]
                    }, C[p[A]] = B[A], E = g.push(C), C = m[A], C[C.length - 1].rip = E - 1
                }
                if (K == r)break;
                L.pq_hidden = !1;
                g.push(L);
                for (A = 0; A < y; A++)C = u[A].column, E = C.dataIndx, s[E][K] = L[E]
            }
            this.tree = m;
            a.pdata = g
        } else a.dataGM = null;
        if (e) {
            H = {pq_grandsummary: !0, pq_gsummary: !0};
            for (J = 0; J < y; J++)C = u[J].column, F = C.summary, F = F.type, E = C.dataIndx, P = s[E], P = c[F](P, C), H[E] = P;
            this.summaryData = d.summaryData = [H]
        } else this.summaryData.length =
            0
    };
    h = h.pqGrid.prototype;
    h.group = function (a) {
        this.iGroupView[a.indx ? "expandIndx" : "expandAll"](a)
    };
    h.groupOption = function (a) {
        var c = a.dataIndx, b = c ? c.length : 0, c = !1, d = this.iGroupView, h = this.options, k = h.groupModel, e = k.dataIndx, g = a.on || null == a.on && k.on;
        g && d.init();
        g && (b || e.length) && (c = !0);
        if (k.on && e.length && (!1 === a.on || 0 === b))for (b = h.dataModel.data, h = 0, e = b.length; h < e; h++)b[h].pq_hidden = !1;
        l.extend(k, a);
        d.setOption();
        if (!1 !== a.refresh)this[c ? "sort" : "refreshView"]()
    }
})(jQuery);
